{"version":3,"file":"combobox.mjs","sources":["../../../../../k8-fastbuild-ST-46c76129e412/bin/src/cdk-experimental/combobox/combobox.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/cdk-experimental/combobox/combobox-popup.ts","../../../../../k8-fastbuild-ST-46c76129e412/bin/src/cdk-experimental/combobox/combobox-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceArray, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW, ENTER, ESCAPE, TAB} from '@angular/cdk/keycodes';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n} from '@angular/cdk/overlay';\nimport {_getEventTarget} from '@angular/cdk/platform';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  InjectionToken,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n  inject,\n} from '@angular/core';\n\nexport type AriaHasPopupValue = 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\nexport type OpenAction = 'focus' | 'click' | 'downKey' | 'toggle';\nexport type OpenActionInput = OpenAction | OpenAction[] | string | null | undefined;\n\nconst allowedOpenActions = ['focus', 'click', 'downKey', 'toggle'];\n\nexport const CDK_COMBOBOX = new InjectionToken<CdkCombobox>('CDK_COMBOBOX');\n\n@Directive({\n  selector: '[cdkCombobox]',\n  exportAs: 'cdkCombobox',\n  host: {\n    'role': 'combobox',\n    'class': 'cdk-combobox',\n    '(click)': '_handleInteractions(\"click\")',\n    '(focus)': '_handleInteractions(\"focus\")',\n    '(keydown)': '_keydown($event)',\n    '(document:click)': '_attemptClose($event)',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-owns]': 'contentId',\n    '[attr.aria-haspopup]': 'contentType',\n    '[attr.aria-expanded]': 'isOpen()',\n    '[attr.tabindex]': '_getTabIndex()',\n  },\n  providers: [{provide: CDK_COMBOBOX, useExisting: CdkCombobox}],\n})\nexport class CdkCombobox<T = unknown> implements OnDestroy {\n  private readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly _overlay = inject(Overlay);\n  protected readonly _viewContainerRef = inject(ViewContainerRef);\n  private readonly _injector = inject(Injector);\n  private readonly _doc = inject(DOCUMENT);\n  private readonly _directionality = inject(Directionality, {optional: true});\n  private _changeDetectorRef = inject(ChangeDetectorRef);\n  private _overlayRef: OverlayRef;\n  private _panelPortal: TemplatePortal;\n\n  @Input('cdkComboboxTriggerFor')\n  _panelTemplateRef: TemplateRef<unknown>;\n\n  @Input()\n  value: T | T[];\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean = false;\n\n  @Input()\n  get openActions(): OpenAction[] {\n    return this._openActions;\n  }\n  set openActions(action: OpenActionInput) {\n    this._openActions = this._coerceOpenActionProperty(action);\n  }\n  private _openActions: OpenAction[] = ['click'];\n\n  /** Whether the textContent is automatically updated upon change of the combobox value. */\n  @Input()\n  get autoSetText(): boolean {\n    return this._autoSetText;\n  }\n  set autoSetText(value: BooleanInput) {\n    this._autoSetText = coerceBooleanProperty(value);\n  }\n  private _autoSetText: boolean = true;\n\n  @Output('comboboxPanelOpened') readonly opened: EventEmitter<void> = new EventEmitter<void>();\n  @Output('comboboxPanelClosed') readonly closed: EventEmitter<void> = new EventEmitter<void>();\n  @Output('panelValueChanged') readonly panelValueChanged: EventEmitter<T[]> = new EventEmitter<\n    T[]\n  >();\n\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    this.opened.complete();\n    this.closed.complete();\n    this.panelValueChanged.complete();\n  }\n\n  _keydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n\n    if (keyCode === DOWN_ARROW) {\n      if (this.isOpen()) {\n        // TODO: instead of using a focus function, potentially use cdk/a11y focus trapping\n        this._doc.getElementById(this.contentId)?.focus();\n      } else if (this._openActions.indexOf('downKey') !== -1) {\n        this.open();\n      }\n    } else if (keyCode === ENTER) {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n    } else if (keyCode === ESCAPE) {\n      event.preventDefault();\n      this.close();\n    } else if (keyCode === TAB) {\n      this.close();\n    }\n  }\n\n  /** Handles click or focus interactions. */\n  _handleInteractions(interaction: OpenAction) {\n    if (interaction === 'click') {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n    } else if (interaction === 'focus') {\n      if (this._openActions.indexOf('focus') !== -1) {\n        this.open();\n      }\n    }\n  }\n\n  /** Given a click in the document, determines if the click was inside a combobox. */\n  _attemptClose(event: MouseEvent) {\n    if (this.isOpen()) {\n      let target = _getEventTarget(event);\n      while (target instanceof Element) {\n        if (target.className.indexOf('cdk-combobox') !== -1) {\n          return;\n        }\n        target = target.parentElement;\n      }\n    }\n\n    this.close();\n  }\n\n  /** Toggles the open state of the panel. */\n  toggle() {\n    if (this.hasPanel()) {\n      this.isOpen() ? this.close() : this.open();\n    }\n  }\n\n  /** If the combobox is closed and not disabled, opens the panel. */\n  open() {\n    if (!this.isOpen() && !this.disabled) {\n      this.opened.next();\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPanelContent());\n      this._changeDetectorRef.markForCheck();\n      if (!this._isTextTrigger()) {\n        // TODO: instead of using a focus function, potentially use cdk/a11y focus trapping\n        this._doc.getElementById(this.contentId)?.focus();\n      }\n    }\n  }\n\n  /** If the combobox is open and not disabled, closes the panel. */\n  close() {\n    if (this.isOpen() && !this.disabled) {\n      this.closed.next();\n      this._overlayRef.detach();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /** Returns true if panel is currently opened. */\n  isOpen(): boolean {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /** Returns true if combobox has a child panel. */\n  hasPanel(): boolean {\n    return !!this._panelTemplateRef;\n  }\n\n  _getTabIndex(): string | null {\n    return this.disabled ? null : '0';\n  }\n\n  private _setComboboxValue(value: T | T[]) {\n    const valueChanged = this.value !== value;\n    this.value = value;\n\n    if (valueChanged) {\n      this.panelValueChanged.emit(coerceArray(value));\n      if (this._autoSetText) {\n        this._setTextContent(value);\n      }\n    }\n  }\n\n  updateAndClose(value: T | T[]) {\n    this._setComboboxValue(value);\n    this.close();\n  }\n\n  private _setTextContent(content: T | T[]) {\n    const contentArray = coerceArray(content);\n    this._elementRef.nativeElement.textContent = contentArray.join(' ');\n  }\n\n  private _isTextTrigger() {\n    // TODO: Should check if the trigger is contenteditable.\n    const tagName = this._elementRef.nativeElement.tagName.toLowerCase();\n    return tagName === 'input' || tagName === 'textarea' ? true : false;\n  }\n\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality || undefined,\n    });\n  }\n\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  private _getOverlayPositions(): ConnectedPosition[] {\n    return [\n      {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  private _getPanelInjector() {\n    return this._injector;\n  }\n\n  private _getPanelContent() {\n    const hasPanelChanged = this._panelTemplateRef !== this._panelPortal?.templateRef;\n    if (this._panelTemplateRef && (!this._panelPortal || hasPanelChanged)) {\n      this._panelPortal = new TemplatePortal(\n        this._panelTemplateRef,\n        this._viewContainerRef,\n        undefined,\n        this._getPanelInjector(),\n      );\n    }\n\n    return this._panelPortal;\n  }\n\n  private _coerceOpenActionProperty(input: OpenActionInput): OpenAction[] {\n    let actions = typeof input === 'string' ? input.trim().split(/[ ,]+/) : input;\n    if (\n      (typeof ngDevMode === 'undefined' || ngDevMode) &&\n      actions?.some(a => allowedOpenActions.indexOf(a) === -1)\n    ) {\n      throw Error(`${input} is not a support open action for CdkCombobox`);\n    }\n    return actions as OpenAction[];\n  }\n\n  /** Registers the content's id and the content type with the panel. */\n  _registerContent(contentId: string, contentType: AriaHasPopupValue) {\n    if (\n      (typeof ngDevMode === 'undefined' || ngDevMode) &&\n      contentType !== 'listbox' &&\n      contentType !== 'dialog'\n    ) {\n      throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n    }\n    this.contentId = contentId;\n    this.contentType = contentType;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {Directive, ElementRef, Input, OnInit, inject} from '@angular/core';\nimport {_IdGenerator} from '@angular/cdk/a11y';\nimport {AriaHasPopupValue, CDK_COMBOBOX, CdkCombobox} from './combobox';\n\n@Directive({\n  selector: '[cdkComboboxPopup]',\n  exportAs: 'cdkComboboxPopup',\n  host: {\n    'class': 'cdk-combobox-popup',\n    '[attr.role]': 'role',\n    '[id]': 'id',\n    'tabindex': '-1',\n    '(focus)': 'focusFirstElement()',\n  },\n})\nexport class CdkComboboxPopup<T = unknown> implements OnInit {\n  private readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly _combobox = inject<CdkCombobox>(CDK_COMBOBOX);\n\n  @Input()\n  get role(): AriaHasPopupValue {\n    return this._role;\n  }\n  set role(value: AriaHasPopupValue) {\n    this._role = value;\n  }\n  private _role: AriaHasPopupValue = 'dialog';\n\n  @Input()\n  get firstFocus(): HTMLElement {\n    return this._firstFocusElement;\n  }\n  set firstFocus(id: HTMLElement) {\n    this._firstFocusElement = id;\n  }\n  private _firstFocusElement: HTMLElement;\n\n  @Input() id: string = inject(_IdGenerator).getId('cdk-combobox-popup-');\n\n  ngOnInit() {\n    this.registerWithPanel();\n  }\n\n  registerWithPanel(): void {\n    this._combobox._registerContent(this.id, this._role);\n  }\n\n  focusFirstElement() {\n    if (this._firstFocusElement) {\n      this._firstFocusElement.focus();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkCombobox} from './combobox';\nimport {CdkComboboxPopup} from './combobox-popup';\n\nconst EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPopup];\n@NgModule({\n  imports: [OverlayModule, ...EXPORTED_DECLARATIONS],\n  exports: EXPORTED_DECLARATIONS,\n})\nexport class CdkComboboxModule {}\n"],"names":[],"mappings":"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"}