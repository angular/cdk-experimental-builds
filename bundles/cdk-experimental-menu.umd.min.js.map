{"version":3,"sources":["src/cdk-experimental/cdk-experimental-menu.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","menu","core","cdk","coercion","this","CdkMenu","orientation","closed","EventEmitter","decorators","type","Directive","args","selector","exportAs","host","role","[attr.aria-orientation]","propDecorators","Input","Output","change","CdkMenuBar","CdkMenuPanel","CdkMenuItem","_checked","opened","Object","defineProperty","prototype","get","set","value","coerceBooleanProperty","enumerable","configurable","_getAriaChecked","checked","hasSubmenu","_menuPanel","[attr.role]","[attr.aria-checked]","CdkMenuGroup","EXPORTED_DECLARATIONS","CdkMenuModule","NgModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/coercion')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/menu', ['exports', '@angular/core', '@angular/cdk/coercion'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.menu = {}), global.ng.core, global.ng.cdk.coercion));\n}(this, (function (exports, core, coercion) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive which configures the element as a Menu which should contain child elements marked as\n     * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n     * contains accessable keyboard and mouse handling logic.\n     *\n     * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n     */\n    var CdkMenu = /** @class */ (function () {\n        function CdkMenu() {\n            /**\n             * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n             * Does not affect styling/layout.\n             */\n            this.orientation = 'vertical';\n            /** Event emitted when the menu is closed. */\n            this.closed = new core.EventEmitter();\n        }\n        CdkMenu.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkMenu]',\n                        exportAs: 'cdkMenu',\n                        host: {\n                            'role': 'menubar',\n                            '[attr.aria-orientation]': 'orientation',\n                        },\n                    },] }\n        ];\n        CdkMenu.propDecorators = {\n            orientation: [{ type: core.Input, args: ['cdkMenuOrientation',] }],\n            closed: [{ type: core.Output }],\n            change: [{ type: core.Output }]\n        };\n        return CdkMenu;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n     * role, aria attributes, and accessable keyboard and mouse handling logic. The component that\n     * this directive is applied to should contain components marked with CdkMenuItem.\n     *\n     */\n    var CdkMenuBar = /** @class */ (function () {\n        function CdkMenuBar() {\n            /**\n             * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n             * Does not affect styling/layout.\n             */\n            this.orientation = 'horizontal';\n        }\n        CdkMenuBar.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkMenuBar]',\n                        exportAs: 'cdkMenuBar',\n                        host: {\n                            'role': 'menubar',\n                            '[attr.aria-orientation]': 'orientation',\n                        },\n                    },] }\n        ];\n        CdkMenuBar.propDecorators = {\n            orientation: [{ type: core.Input, args: ['cdkMenuBarOrientation',] }]\n        };\n        return CdkMenuBar;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n     * child element it wraps which allows for opening of the CdkMenu in an overlay.\n     */\n    var CdkMenuPanel = /** @class */ (function () {\n        function CdkMenuPanel() {\n        }\n        CdkMenuPanel.decorators = [\n            { type: core.Directive, args: [{ selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel' },] }\n        ];\n        return CdkMenuPanel;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive which provides behavior for an element which when clicked:\n     *  If located in a CdkMenuBar:\n     *    - opens up an attached submenu\n     *\n     *  If located in a CdkMenu/CdkMenuGroup, one of:\n     *    - executes the user defined click handler\n     *    - toggles its checkbox state\n     *    - toggles its radio button state (in relation to siblings)\n     *\n     * If it's in a CdkMenu and it triggers a sub-menu, hovering over the\n     * CdkMenuItem will open the submenu.\n     *\n     */\n    var CdkMenuItem = /** @class */ (function () {\n        function CdkMenuItem() {\n            /** ARIA role for the menu item. */\n            this.role = 'menuitem';\n            this._checked = false;\n            /** Emits when the attached submenu is opened */\n            this.opened = new core.EventEmitter();\n        }\n        Object.defineProperty(CdkMenuItem.prototype, \"checked\", {\n            /** Whether the checkbox or radiobutton is checked */\n            get: function () {\n                return this._checked;\n            },\n            set: function (value) {\n                this._checked = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** get the aria-checked value only if element is `menuitemradio` or `menuitemcheckbox` */\n        CdkMenuItem.prototype._getAriaChecked = function () {\n            if (this.role === 'menuitem') {\n                return null;\n            }\n            return this.checked;\n        };\n        /** Whether the menu item opens a menu */\n        CdkMenuItem.prototype.hasSubmenu = function () {\n            return !!this._menuPanel;\n        };\n        CdkMenuItem.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkMenuItem], [cdkMenuTriggerFor]',\n                        exportAs: 'cdkMenuItem',\n                        host: {\n                            'type': 'button',\n                            '[attr.role]': 'role',\n                            '[attr.aria-checked]': '_getAriaChecked()',\n                        },\n                    },] }\n        ];\n        CdkMenuItem.propDecorators = {\n            _menuPanel: [{ type: core.Input, args: ['cdkMenuTriggerFor',] }],\n            role: [{ type: core.Input }],\n            checked: [{ type: core.Input }],\n            opened: [{ type: core.Output }]\n        };\n        return CdkMenuItem;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive which acts as a grouping container for `CdkMenuItem` instances with\n     * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n     */\n    var CdkMenuGroup = /** @class */ (function () {\n        function CdkMenuGroup() {\n            /** Emits the element when checkbox or radiobutton state changed  */\n            this.change = new core.EventEmitter();\n        }\n        CdkMenuGroup.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[cdkMenuGroup]',\n                        exportAs: 'cdkMenuGroup',\n                        host: {\n                            'role': 'group',\n                        },\n                    },] }\n        ];\n        CdkMenuGroup.propDecorators = {\n            change: [{ type: core.Output }]\n        };\n        return CdkMenuGroup;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EXPORTED_DECLARATIONS = [CdkMenuBar, CdkMenu, CdkMenuPanel, CdkMenuItem, CdkMenuGroup];\n    var CdkMenuModule = /** @class */ (function () {\n        function CdkMenuModule() {\n        }\n        CdkMenuModule.decorators = [\n            { type: core.NgModule, args: [{\n                        exports: EXPORTED_DECLARATIONS,\n                        declarations: EXPORTED_DECLARATIONS,\n                    },] }\n        ];\n        return CdkMenuModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkMenu = CdkMenu;\n    exports.CdkMenuBar = CdkMenuBar;\n    exports.CdkMenuGroup = CdkMenuGroup;\n    exports.CdkMenuItem = CdkMenuItem;\n    exports.CdkMenuModule = CdkMenuModule;\n    exports.CdkMenuPanel = CdkMenuPanel;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-menu.umd.js.map\n"]}