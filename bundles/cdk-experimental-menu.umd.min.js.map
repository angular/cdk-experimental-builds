{"version":3,"sources":["src/cdk-experimental/cdk-experimental-menu.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","menu","core","cdk","overlay","a11y","keycodes","bidi","rxjs","operators","collections","coercion","portal","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","CDK_MENU","InjectionToken","CdkMenuItemTrigger","_elementRef","_viewContainerRef","_overlay","_parentMenu","_directionality","opened","EventEmitter","closed","_overlayRef","defineProperty","get","_menuPanel","set","panel","_menuStack","_getMenuStack","enumerable","configurable","toggle","hasMenu","isMenuOpen","closeMenu","openMenu","_getOverlayConfig","attach","_getPortal","detach","menuPanel","hasAttached","getMenu","_a","_menu","_toggleOnKeydown","event","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","keyCode","SPACE","ENTER","preventDefault","focusFirstItem","RIGHT_ARROW","_isParentVertical","closeLatest","LEFT_ARROW","DOWN_ARROW","UP_ARROW","focusLastItem","OverlayConfig","positionStrategy","_getOverlayPositionStrategy","scrollStrategy","scrollStrategies","block","direction","position","flexibleConnectedTo","withPositions","_getOverlayPositions","orientation","originX","originY","overlayX","overlayY","hasMenuContentChanged","_templateRef","_panelContent","templateRef","TemplatePortal","ngOnDestroy","_destroyOverlay","dispose","decorators","type","Directive","args","selector","exportAs","host","(keydown)","tabindex","aria-haspopup","[attr.aria-expanded]","ctorParameters","ElementRef","ViewContainerRef","Overlay","undefined","Inject","Directionality","Optional","propDecorators","Input","Output","CdkMenuItem","_dir","_menuTrigger","_disabled","triggered","coerceBooleanProperty","focus","nativeElement","trigger","disabled","closeAll","getMenuTrigger","getLabel","clone","cloneNode","removeIcons","element","e_1","__values","s","TypeError","from","querySelectorAll","icon","parentNode","removeChild","e_1_1","return","textContent","trim","_onKeydown","role","[attr.aria-disabled]","Self","HostListener","nextId","CdkMenuItemSelectable","_super","_this","apply","clicked","_checked","name","id","checked","CdkMenuGroup","change","_selectableChanges","ngAfterContentInit","_registerMenuSelectionListeners","_selectableItems","forEach","selectable","_registerClickListener","changes","subscribe","selectableItems","pipe","takeUntil","complete","providers","provide","UniqueSelectionDispatcher","useClass","ContentChildren","descendants","CdkMenuPanel","_registerMenu","child","TemplateRef","CdkMenu","ngOnInit","_registerWithParentPanel","_completeChangeEmitter","_setKeyManager","_subscribeToMenuOpen","_subscribeToMenuStack","focusOrigin","_keyManager","setFocusOrigin","setFirstItemActive","setLastItemActive","_handleKeyEvent","keyManager","_isHorizontal","onKeydown","ESCAPE","hasModifierKey","TAB","parent","_getMenuPanel","throwMissingMenuPanelError","Error","_explicitPanel","_hasNestedGroups","_nestedGroups","take","first","FocusKeyManager","_allItems","withWrap","withTypeAhead","withHomeAndEnd","withHorizontalOrientation","withVerticalOrientation","close","item","_closeOpenMenu","empty","_toggleMenuFocus","_openItem","setActiveItem","setNextItemActive","setPreviousItemActive","activeItem","exitCondition","merge","startWith","mergeMap","list","filter","map","mapTo","mergeAll","switchMap","_emitClosedEvent","[attr.aria-orientation]","useExisting","MenuStack","_elements","_close","Subject","_empty","focusNext","menuStackItem","pop","CdkMenuBar","_destroyed","horizontalArrows","prevIsOpen","_toggleOpenMenu","(focus)","CdkMenuItemRadio","_selectionDispatcher","parentMenu","dir","menuTrigger","_registerDispatcherListener","_removeDispatcherListener","listen","notify","(click)","[attr.aria-checked]","CdkMenuItemCheckbox","CdkMenuModule","EXPORTED_DECLARATIONS","NgModule","imports","OverlayModule","declarations","ɵangular_material_src_cdk_experimental_menu_menu_a","ɵangular_material_src_cdk_experimental_menu_menu_b","ɵangular_material_src_cdk_experimental_menu_menu_d"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,wBAAyBA,QAAQ,qBAAsBA,QAAQ,yBAA0BA,QAAQ,qBAAsBA,QAAQ,kBAAmBA,QAAQ,QAASA,QAAQ,4BAA6BA,QAAQ,yBAA0BA,QAAQ,wBAClV,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,iCAAkC,CAAC,UAAW,gBAAiB,uBAAwB,oBAAqB,wBAAyB,oBAAqB,iBAAkB,OAAQ,2BAA4B,wBAAyB,uBAAwBJ,GAC3RA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,gBAAkBT,EAAOQ,GAAGC,iBAAmB,GAAIT,EAAOQ,GAAGC,gBAAgBC,KAAO,IAAKV,EAAOQ,GAAGG,KAAMX,EAAOQ,GAAGI,IAAIC,QAASb,EAAOQ,GAAGI,IAAIE,KAAMd,EAAOQ,GAAGI,IAAIG,SAAUf,EAAOQ,GAAGI,IAAII,KAAMhB,EAAOiB,KAAKC,UAAWlB,EAAOiB,KAAMjB,EAAOQ,GAAGI,IAAIO,YAAanB,EAAOQ,GAAGI,IAAIQ,SAAUpB,EAAOQ,GAAGI,IAAIS,QAHnX,CAIEC,MAAM,SAAWpB,EAASS,EAAME,EAASC,EAAMC,EAAUC,EAAME,EAAWD,EAAME,EAAaC,EAAUC,GAAU;;;;;;;;;;;;;;oFAiB/G,IAAIE,EAAgB,SAAUC,EAAGC,GAM7B,OALAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EACxBA,EAAEM,eAAeD,KACjBN,EAAEM,GAAKL,EAAEK,MACAN,EAAGC,IAE5B,SAASO,EAAUR,EAAGC,GAElB,SAASQ,IAAOX,KAAKY,YAAcV,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEW,UAAkB,OAANV,EAAaC,OAAOU,OAAOX,IAAMQ,EAAGE,UAAYV,EAAEU,UAAW,IAAIF,GA+JnF,SAASI,EAAOC,EAAGC,GACf,IAAIC,EAAsB,mBAAXC,QAAyBH,EAAEG,OAAOC,UACjD,IAAKF,EACD,OAAOF,EACX,IAAmBK,EAAYC,EAA3BC,EAAIL,EAAEM,KAAKR,GAAOS,EAAK,GAC3B,IACI,WAAc,IAANR,GAAgBA,KAAM,MAAQI,EAAIE,EAAEG,QAAQC,MAChDF,EAAGG,KAAKP,EAAEQ,OAElB,MAAOC,GACHR,EAAI,CAAEQ,MAAOA,GAEjB,QACI,IACQT,IAAMA,EAAEM,OAAST,EAAIK,EAAU,SAC/BL,EAAEM,KAAKD,GAEf,QACI,GAAID,EACA,MAAMA,EAAEQ,OAGpB,OAAOL,EAEX,SAASM,IACL,IAAK,IAAIN,EAAK,GAAIF,EAAI,EAAGA,EAAIS,UAAUC,OAAQV,IAC3CE,EAAKA,EAAGS,OAAOnB,EAAOiB,UAAUT,KACpC,OAAOE;;;;;;;;AAiGX,IAAIU,EAAW,IAAI9C,EAAK+C,eAAe,YAkBnCC,EAAoC,WACpC,SAASA,EAAmBC,EAAaC,EAAmBC,EAAUC,EAAaC,GAC/E1C,KAAKsC,YAAcA,EACnBtC,KAAKuC,kBAAoBA,EACzBvC,KAAKwC,SAAWA,EAChBxC,KAAKyC,YAAcA,EACnBzC,KAAK0C,gBAAkBA,EAEvB1C,KAAK2C,OAAS,IAAItD,EAAKuD,aAEvB5C,KAAK6C,OAAS,IAAIxD,EAAKuD,aAEvB5C,KAAK8C,YAAc,KA0KvB,OAxKA1C,OAAO2C,eAAeV,EAAmBxB,UAAW,YAAa,CAE7DmC,IAAK,WACD,OAAOhD,KAAKiD,YAEhBC,IAAK,SAAUC,GACXnD,KAAKiD,WAAaE,EACdnD,KAAKiD,aACLjD,KAAKiD,WAAWG,WAAapD,KAAKqD,kBAG1CC,YAAY,EACZC,cAAc,IAGlBlB,EAAmBxB,UAAU2C,OAAS,WAC9BxD,KAAKyD,YACLzD,KAAK0D,aAAe1D,KAAK2D,YAAc3D,KAAK4D,aAIpDvB,EAAmBxB,UAAU+C,SAAW,WAC/B5D,KAAK0D,eACN1D,KAAK2C,OAAOjB,OACZ1B,KAAK8C,YAAc9C,KAAK8C,aAAe9C,KAAKwC,SAAS1B,OAAOd,KAAK6D,qBACjE7D,KAAK8C,YAAYgB,OAAO9D,KAAK+D,gBAIrC1B,EAAmBxB,UAAU8C,UAAY,WACjC3D,KAAK0D,eACL1D,KAAK6C,OAAOnB,OACZ1B,KAAK8C,YAAYkB,WAIzB3B,EAAmBxB,UAAU4C,QAAU,WACnC,QAASzD,KAAKiE,WAGlB5B,EAAmBxB,UAAU6C,WAAa,WACtC,QAAO1D,KAAK8C,aAAc9C,KAAK8C,YAAYoB,eAM/C7B,EAAmBxB,UAAUsD,QAAU,WACnC,IAAIC,EACJ,OAAiC,QAAzBA,EAAKpE,KAAKiE,iBAA8B,IAAPG,OAAgB,EAASA,EAAGC,OAOzEhC,EAAmBxB,UAAUyD,iBAAmB,SAAUC,GACtD,IAAIH,EAAII,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5CC,EAAUZ,EAAMY,QACpB,OAAQA,GACJ,KAAK1F,EAAS2F,MACd,KAAK3F,EAAS4F,MACVd,EAAMe,iBACNtF,KAAKwD,SAC0E,QAA9EgB,EAA+B,QAAzBJ,EAAKpE,KAAKiE,iBAA8B,IAAPG,OAAgB,EAASA,EAAGC,aAA0B,IAAPG,GAAyBA,EAAGe,eAAe,YAClI,MACJ,KAAK9F,EAAS+F,YACNxF,KAAKyF,sBACLlB,EAAMe,iBAC8E,SAA/C,QAA/Bb,EAAKzE,KAAK0C,uBAAoC,IAAP+B,OAAgB,EAASA,EAAG5C,OACrE7B,KAAKqD,gBAAgBqC,YAAY,IAGjC1F,KAAK4D,WAC0E,QAA9Ee,EAA+B,QAAzBD,EAAK1E,KAAKiE,iBAA8B,IAAPS,OAAgB,EAASA,EAAGL,aAA0B,IAAPM,GAAyBA,EAAGY,eAAe,cAG1I,MACJ,KAAK9F,EAASkG,WACN3F,KAAKyF,sBACLlB,EAAMe,iBAC8E,SAA/C,QAA/BV,EAAK5E,KAAK0C,uBAAoC,IAAPkC,OAAgB,EAASA,EAAG/C,QACrE7B,KAAK4D,WAC0E,QAA9EkB,EAA+B,QAAzBD,EAAK7E,KAAKiE,iBAA8B,IAAPY,OAAgB,EAASA,EAAGR,aAA0B,IAAPS,GAAyBA,EAAGS,eAAe,aAGlIvF,KAAKqD,gBAAgBqC,YAAY,IAGzC,MACJ,KAAKjG,EAASmG,WACd,KAAKnG,EAASoG,SACL7F,KAAKyF,sBACNlB,EAAMe,iBACNtF,KAAK4D,WACLuB,IAAY1F,EAASmG,WACgE,QAA9EZ,EAA+B,QAAzBD,EAAK/E,KAAKiE,iBAA8B,IAAPc,OAAgB,EAASA,EAAGV,aAA0B,IAAPW,GAAyBA,EAAGO,eAAe,YAA6F,QAA9EL,EAA+B,QAAzBD,EAAKjF,KAAKiE,iBAA8B,IAAPgB,OAAgB,EAASA,EAAGZ,aAA0B,IAAPa,GAAyBA,EAAGY,cAAc,eAMvSzD,EAAmBxB,UAAUgD,kBAAoB,WAC7C,OAAO,IAAItE,EAAQwG,cAAc,CAC7BC,iBAAkBhG,KAAKiG,8BACvBC,eAAgBlG,KAAKwC,SAAS2D,iBAAiBC,QAC/CC,UAAWrG,KAAK0C,mBAIxBL,EAAmBxB,UAAUoF,4BAA8B,WACvD,OAAOjG,KAAKwC,SACP8D,WACAC,oBAAoBvG,KAAKsC,aACzBkE,cAAcxG,KAAKyG,yBAG5BpE,EAAmBxB,UAAU4F,qBAAuB,WAEhD,MAAwC,eAAjCzG,KAAKyC,YAAYiE,YAClB,CACE,CAAEC,QAAS,QAASC,QAAS,SAAUC,SAAU,QAASC,SAAU,OACpE,CAAEH,QAAS,QAASC,QAAS,MAAOC,SAAU,QAASC,SAAU,UACjE,CAAEH,QAAS,MAAOC,QAAS,SAAUC,SAAU,MAAOC,SAAU,OAChE,CAAEH,QAAS,MAAOC,QAAS,MAAOC,SAAU,MAAOC,SAAU,WAE/D,CACE,CAAEH,QAAS,MAAOC,QAAS,MAAOC,SAAU,QAASC,SAAU,OAC/D,CAAEH,QAAS,MAAOC,QAAS,SAAUC,SAAU,QAASC,SAAU,UAClE,CAAEH,QAAS,QAASC,QAAS,MAAOC,SAAU,MAAOC,SAAU,OAC/D,CAAEH,QAAS,QAASC,QAAS,SAAUC,SAAU,MAAOC,SAAU,YAO9EzE,EAAmBxB,UAAUkD,WAAa,WACtC,IAAIK,EAAII,EACJuC,GAAmD,QAAzB3C,EAAKpE,KAAKiE,iBAA8B,IAAPG,OAAgB,EAASA,EAAG4C,iBAAiD,QAA7BxC,EAAKxE,KAAKiH,qBAAkC,IAAPzC,OAAgB,EAASA,EAAG0C,aAIhL,OAHIlH,KAAKiE,WAAejE,KAAKiH,gBAAiBF,IAC1C/G,KAAKiH,cAAgB,IAAIlH,EAAOoH,eAAenH,KAAKiE,UAAU+C,aAAchH,KAAKuC,oBAE9EvC,KAAKiH,eAKhB5E,EAAmBxB,UAAU4E,kBAAoB,WAC7C,MAAwC,aAAjCzF,KAAKyC,YAAYiE,aAG5BrE,EAAmBxB,UAAUwC,cAAgB,WAIzC,OAAOrD,KAAKyC,YAAYW,YAE5Bf,EAAmBxB,UAAUuG,YAAc,WACvCpH,KAAKqH,mBAGThF,EAAmBxB,UAAUwG,gBAAkB,WACvCrH,KAAK8C,cACL9C,KAAK8C,YAAYwE,UACjBtH,KAAK8C,YAAc,OAGpBT,EAtL4B;;;;;;;OAwLvCA,EAAmBkF,WAAa,CAC5B,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,mCACVC,SAAU,oBACVC,KAAM,CACFC,YAAa,2BACbC,SAAY,KACZC,gBAAiB,OACjBC,uBAAwB,oBAI5C5F,EAAmB6F,eAAiB,WAAc,MAAO,CACrD,CAAEV,KAAMnI,EAAK8I,YACb,CAAEX,KAAMnI,EAAK+I,kBACb,CAAEZ,KAAMjI,EAAQ8I,SAChB,CAAEb,UAAMc,EAAWf,WAAY,CAAC,CAAEC,KAAMnI,EAAKkJ,OAAQb,KAAM,CAACvF,MAC5D,CAAEqF,KAAM9H,EAAK8I,eAAgBjB,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,cAE3DpG,EAAmBqG,eAAiB,CAChCzE,UAAW,CAAC,CAAEuD,KAAMnI,EAAKsJ,MAAOjB,KAAM,CAAC,uBACvC/E,OAAQ,CAAC,CAAE6E,KAAMnI,EAAKuJ,OAAQlB,KAAM,CAAC,mBACrC7E,OAAQ,CAAC,CAAE2E,KAAMnI,EAAKuJ,OAAQlB,KAAM,CAAC,oBA2BzC,IAAImB,EAA6B,WAC7B,SAASA,EAAYvG,EAAaG,EAAaqG,EAE/CC,GACI/I,KAAKsC,YAAcA,EACnBtC,KAAKyC,YAAcA,EACnBzC,KAAK8I,KAAOA,EACZ9I,KAAK+I,aAAeA,EACpB/I,KAAKgJ,WAAY,EAKjBhJ,KAAKiJ,UAAY,IAAI5J,EAAKuD,aAyG9B,OAvGAxC,OAAO2C,eAAe8F,EAAYhI,UAAW,WAAY,CAErDmC,IAAK,WACD,OAAOhD,KAAKgJ,WAEhB9F,IAAK,SAAUrB,GACX7B,KAAKgJ,UAAYlJ,EAASoJ,sBAAsBrH,IAEpDyB,YAAY,EACZC,cAAc,IAGlBsF,EAAYhI,UAAUsI,MAAQ,WAC1BnJ,KAAKsC,YAAY8G,cAAcD,SAMnCN,EAAYhI,UAAUwI,QAAU,WACvBrJ,KAAKsJ,UAAatJ,KAAKyD,YACxBzD,KAAKiJ,UAAUvH,OACf1B,KAAKqD,gBAAgBkG,aAI7BV,EAAYhI,UAAU4C,QAAU,WAC5B,IAAIW,EACJ,SAAuC,QAA5BA,EAAKpE,KAAK+I,oBAAiC,IAAP3E,OAAgB,EAASA,EAAGX,YAG/EoF,EAAYhI,UAAU6C,WAAa,WAC/B,IAAIU,EACJ,SAAuC,QAA5BA,EAAKpE,KAAK+I,oBAAiC,IAAP3E,OAAgB,EAASA,EAAGV,eAM/EmF,EAAYhI,UAAUsD,QAAU,WAC5B,IAAIC,EACJ,OAAoC,QAA5BA,EAAKpE,KAAK+I,oBAAiC,IAAP3E,OAAgB,EAASA,EAAGD,WAG5E0E,EAAYhI,UAAU2I,eAAiB,WACnC,OAAOxJ,KAAK+I,cAGhBF,EAAYhI,UAAU4I,SAAW,WAC7B,IAAIrF,EAGAsF,EAAQ1J,KAAKsC,YAAY8G,cAAcO,WAAU,GAErD,OA3FR,SAASC,EAAYC,GACjB,IAAIC,EAAKrF,EACLL,EACJ,IACI,IAAK,IAAIM,EAnXjB,SAASqF,EAAS/I,GACd,IAAIgJ,EAAsB,mBAAX7I,QAAyBA,OAAOC,SAAUF,EAAI8I,GAAKhJ,EAAEgJ,GAAIzI,EAAI,EAC5E,GAAIL,EACA,OAAOA,EAAEM,KAAKR,GAClB,GAAIA,GAAyB,iBAAbA,EAAEiB,OACd,MAAO,CACHP,KAAM,WAGF,OAFIV,GAAKO,GAAKP,EAAEiB,SACZjB,OAAI,GACD,CAAEa,MAAOb,GAAKA,EAAEO,KAAMI,MAAOX,KAGhD,MAAM,IAAIiJ,UAAUD,EAAI,0BAA4B,mCAuWlCD,CAASxJ,MAAM2J,KAAKL,EAAQM,iBAAiB,+BAAgCxF,EAAKD,EAAGhD,QAASiD,EAAGhD,KAAMgD,EAAKD,EAAGhD,OAAQ,CACjI,IAAI0I,EAAOzF,EAAG9C,MACa,QAA1BuC,EAAKgG,EAAKC,kBAA+B,IAAPjG,GAAyBA,EAAGkG,YAAYF,IAGnF,MAAOG,GAAST,EAAM,CAAEhI,MAAOyI,GAC/B,QACI,IACQ5F,IAAOA,EAAGhD,OAAS8C,EAAKC,EAAG8F,SAAS/F,EAAGjD,KAAKkD,GAEpD,QAAU,GAAIoF,EAAK,MAAMA,EAAIhI,QA4E7B8H,CAAYF,IACyB,QAA5BtF,EAAKsF,EAAMe,mBAAgC,IAAPrG,OAAgB,EAASA,EAAGsG,SAAW,IAYxF7B,EAAYhI,UAAU8J,WAAa,SAAUpG,GACzC,IAAIH,EAAII,EACR,OAAQD,EAAMY,SACV,KAAK1F,EAAS2F,MACd,KAAK3F,EAAS4F,MACVd,EAAMe,iBACNtF,KAAKqJ,UACL,MACJ,KAAK5J,EAAS+F,YACNxF,KAAKyF,sBAAwBzF,KAAKyD,YAClCc,EAAMe,iBAC+D,SAA/C,QAApBlB,EAAKpE,KAAK8I,YAAyB,IAAP1E,OAAgB,EAASA,EAAGvC,OACpD7B,KAAKqD,gBAAgBqC,YAAY,GACjC1F,KAAKqD,gBAAgBkG,SAAS,IAExC,MACJ,KAAK9J,EAASkG,WACN3F,KAAKyF,sBAAwBzF,KAAKyD,YAClCc,EAAMe,iBAC+D,SAA/C,QAApBd,EAAKxE,KAAK8I,YAAyB,IAAPtE,OAAgB,EAASA,EAAG3C,OACpD7B,KAAKqD,gBAAgBkG,SAAS,GAC9BvJ,KAAKqD,gBAAgBqC,YAAY,MAMvDmD,EAAYhI,UAAU4E,kBAAoB,WACtC,MAAwC,aAAjCzF,KAAKyC,YAAYiE,aAG5BmC,EAAYhI,UAAUwC,cAAgB,WAIlC,OAAOrD,KAAKyC,YAAYW,YAErByF,EAtHqB,GAwHhCA,EAAYtB,WAAa,CACrB,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,gBACVC,SAAU,cACVC,KAAM,CACFE,SAAY,KACZP,KAAQ,SACRoD,KAAQ,WACRC,uBAAwB,wBAI5ChC,EAAYX,eAAiB,WAAc,MAAO,CAC9C,CAAEV,KAAMnI,EAAK8I,YACb,CAAEX,UAAMc,EAAWf,WAAY,CAAC,CAAEC,KAAMnI,EAAKkJ,OAAQb,KAAM,CAACvF,MAC5D,CAAEqF,KAAM9H,EAAK8I,eAAgBjB,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,YACvD,CAAEjB,KAAMnF,EAAoBkF,WAAY,CAAC,CAAEC,KAAMnI,EAAKyL,MAAQ,CAAEtD,KAAMnI,EAAKoJ,cAE/EI,EAAYH,eAAiB,CACzBY,SAAU,CAAC,CAAE9B,KAAMnI,EAAKsJ,QACxBM,UAAW,CAAC,CAAEzB,KAAMnI,EAAKuJ,OAAQlB,KAAM,CAAC,0BACxCiD,WAAY,CAAC,CAAEnD,KAAMnI,EAAK0L,aAAcrD,KAAM,CAAC,UAAW,CAAC,cAI/D,IAAIsD,EAAS,EAKTC,EAAuC,SAAUC,GAEjD,SAASD,IACL,IAAIE,EAAQD,EAAOE,MAAMpL,KAAM+B,EAASC,aAAehC,KAQvD,OANAmL,EAAME,QAAU,IAAIhM,EAAKuD,aACzBuI,EAAMG,UAAW,EAEjBH,EAAMI,KAAO,uBAAyBP,IAEtCG,EAAMK,GAAK,uBAAyBR,IAC7BG,EAmBX,OA7BAzK,EAAUuK,EAAuBC,GAYjC9K,OAAO2C,eAAekI,EAAsBpK,UAAW,UAAW,CAE9DmC,IAAK,WACD,OAAOhD,KAAKsL,UAEhBpI,IAAK,SAAUrB,GACX7B,KAAKsL,SAAWxL,EAASoJ,sBAAsBrH,IAEnDyB,YAAY,EACZC,cAAc,IAGlB0H,EAAsBpK,UAAUwI,QAAU,WACjCrJ,KAAKsJ,UACNtJ,KAAKqL,QAAQ3J,KAAK1B,OAGnBiL,EA9B+B,CA+BxCpC,GACFoC,EAAsB1D,WAAa,CAC/B,CAAEC,KAAMnI,EAAKoI,YAEjBwD,EAAsBvC,eAAiB,CACnC2C,QAAS,CAAC,CAAE7D,KAAMnI,EAAKuJ,SACvB6C,QAAS,CAAC,CAAEjE,KAAMnI,EAAKsJ,QACvB4C,KAAM,CAAC,CAAE/D,KAAMnI,EAAKsJ,QACpB6C,GAAI,CAAC,CAAEhE,KAAMnI,EAAKsJ;;;;;;;;AActB,IAAI+C,EAA8B,WAC9B,SAASA,IAEL1L,KAAK2L,OAAS,IAAItM,EAAKuD,aAEvB5C,KAAK4L,mBAAqB,IAAIvM,EAAKuD,aA4BvC,OA1BA8I,EAAa7K,UAAUgL,mBAAqB,WACxC7L,KAAK8L,mCAMTJ,EAAa7K,UAAUiL,gCAAkC,WACrD,IAAIX,EAAQnL,KACZA,KAAK+L,iBAAiBC,SAAQ,SAAUC,GAAc,OAAOd,EAAMe,uBAAuBD,MAC1FjM,KAAK+L,iBAAiBI,QAAQC,WAAU,SAAUC,GAC9ClB,EAAMS,mBAAmBlK,OACzB2K,EAAgBL,SAAQ,SAAUC,GAAc,OAAOd,EAAMe,uBAAuBD,UAI5FP,EAAa7K,UAAUqL,uBAAyB,SAAUD,GACtD,IAAId,EAAQnL,KACZiM,EAAWZ,QACNiB,KAAK1M,EAAU2M,UAAUvM,KAAK4L,qBAC9BQ,WAAU,WAAc,OAAOjB,EAAMQ,OAAOjK,KAAKuK,OAE1DP,EAAa7K,UAAUuG,YAAc,WACjCpH,KAAK4L,mBAAmBlK,OACxB1B,KAAK4L,mBAAmBY,YAErBd,EAjCsB,GAmCjCA,EAAanE,WAAa,CACtB,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,iBACVC,SAAU,eACVC,KAAM,CACF+C,KAAQ,SAEZ6B,UAAW,CAAC,CAAEC,QAAS7M,EAAY8M,0BAA2BC,SAAU/M,EAAY8M,gCAGpGjB,EAAahD,eAAiB,CAC1BiD,OAAQ,CAAC,CAAEnE,KAAMnI,EAAKuJ,SACtBmD,iBAAkB,CAAC,CAAEvE,KAAMnI,EAAKwN,gBAAiBnF,KAAM,CAACuD,EAAuB,CAAE6B,aAAa;;;;;;;;AAclG,IAAIC,EAA8B,WAC9B,SAASA,EAAa/F,GAClBhH,KAAKgH,aAAeA,EAcxB,OARA+F,EAAalM,UAAUmM,cAAgB,SAAUC,GAC7CjN,KAAKqE,MAAQ4I,EAIbjN,KAAKqE,MAAMjB,WAAapD,KAAKoD,WAC7BpD,KAAKoD,WAAWxB,KAAKqL,IAElBF,EAhBsB,GAkBjCA,EAAaxF,WAAa,CACtB,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CAAEC,SAAU,4BAA6BC,SAAU,mBAEtFmF,EAAa7E,eAAiB,WAAc,MAAO,CAC/C,CAAEV,KAAMnI,EAAK6N,eA2BjB,IAAIC,EAAyB,SAAUjC,GAEnC,SAASiC,EAAQrE,EAAM7F,GACnB,IAAIkI,EAAQD,EAAO1J,KAAKxB,OAASA,KAUjC,OATAmL,EAAMrC,KAAOA,EACbqC,EAAMlI,WAAaA,EAKnBkI,EAAMzE,YAAc,WAEpByE,EAAMtI,OAAS,IAAIxD,EAAKuD,aACjBuI,EAsLX,OAlMAzK,EAAUyM,EAASjC,GAcnBiC,EAAQtM,UAAUuM,SAAW,WACzBpN,KAAKqN,4BAETF,EAAQtM,UAAUgL,mBAAqB,WACnCX,EAAOrK,UAAUgL,mBAAmBrK,KAAKxB,MACzCA,KAAKsN,yBACLtN,KAAKuN,iBACLvN,KAAKwN,uBACLxN,KAAKyN,yBAGTN,EAAQtM,UAAU0E,eAAiB,SAAUmI,QACrB,IAAhBA,IAA0BA,EAAc,WAC5C1N,KAAK2N,YAAYC,eAAeF,GAChC1N,KAAK2N,YAAYE,sBAGrBV,EAAQtM,UAAUiF,cAAgB,SAAU4H,QACpB,IAAhBA,IAA0BA,EAAc,WAC5C1N,KAAK2N,YAAYC,eAAeF,GAChC1N,KAAK2N,YAAYG,qBAGrBX,EAAQtM,UAAUkN,gBAAkB,SAAUxJ,GAC1C,IAAIyJ,EAAahO,KAAK2N,YACtB,OAAQpJ,EAAMY,SACV,KAAK1F,EAASkG,WACd,KAAKlG,EAAS+F,YACNxF,KAAKiO,kBACL1J,EAAMe,iBACN0I,EAAWJ,eAAe,YAC1BI,EAAWE,UAAU3J,IAEzB,MACJ,KAAK9E,EAASoG,SACd,KAAKpG,EAASmG,WACL5F,KAAKiO,kBACN1J,EAAMe,iBACN0I,EAAWJ,eAAe,YAC1BI,EAAWE,UAAU3J,IAEzB,MACJ,KAAK9E,EAAS0O,OACL1O,EAAS2O,eAAe7J,KACzBA,EAAMe,iBACNtF,KAAKoD,WAAWsC,YAAY,IAEhC,MACJ,KAAKjG,EAAS4O,IACVrO,KAAKoD,WAAWmG,WAChB,MACJ,QACIyE,EAAWE,UAAU3J,KAIjC4I,EAAQtM,UAAUwM,yBAA2B,WACzC,IAAIiB,EAAStO,KAAKuO,gBACdD,EACAA,EAAOtB,cAAchN;;;;;;;;AAtFjC,SAASwO,IACL,MAAMC,MAAM,+HAwFJD,IAORrB,EAAQtM,UAAU0N,cAAgB,WAC9B,OAAOvO,KAAKiD,YAAcjD,KAAK0O,gBAMnCvB,EAAQtM,UAAUyM,uBAAyB,WACvC,IAAInC,EAAQnL,KACRA,KAAK2O,mBACL3O,KAAK2L,OAAOa,WAGZxM,KAAK4O,cAAczC,QAAQG,KAAK1M,EAAUiP,KAAK,IAAIzC,WAAU,WAAc,OAAOjB,EAAMQ,OAAOa,eAIvGW,EAAQtM,UAAU8N,iBAAmB,WAKjC,OAAO3O,KAAK4O,cAAc3M,OAAS,KAAOjC,KAAK4O,cAAcE,iBAAiB3B,IAGlFA,EAAQtM,UAAU0M,eAAiB,WAC/B,IAAInJ,EACJpE,KAAK2N,YAAc,IAAInO,EAAKuP,gBAAgB/O,KAAKgP,WAC5CC,WACAC,gBACAC,iBACDnP,KAAKiO,gBACLjO,KAAK2N,YAAYyB,2BAAgD,QAApBhL,EAAKpE,KAAK8I,YAAyB,IAAP1E,OAAgB,EAASA,EAAGvC,QAAU,OAG/G7B,KAAK2N,YAAY0B,2BAIzBlC,EAAQtM,UAAU4M,sBAAwB,WACtC,IAAItC,EAAQnL,KACZA,KAAKoD,WAAWkM,MACXhD,KAAK1M,EAAU2M,UAAUvM,KAAK6C,SAC9BuJ,WAAU,SAAUmD,GAAQ,OAAOpE,EAAMqE,eAAeD,MAC7DvP,KAAKoD,WAAWqM,MACXnD,KAAK1M,EAAU2M,UAAUvM,KAAK6C,SAC9BuJ,WAAU,SAAU7H,GAAS,OAAO4G,EAAMuE,iBAAiBnL,OAMpE4I,EAAQtM,UAAU2O,eAAiB,SAAUpQ,GACzC,IAAIgF,EAAII,EACJwJ,EAAahO,KAAK2N,YAClBtE,EAAUrJ,KAAK2P,UACfvQ,KAAgG,QAArFgF,EAAKiF,MAAAA,OAAyC,EAASA,EAAQG,wBAAqC,IAAPpF,OAAgB,EAASA,EAAGD,aAChG,QAAnCK,EAAK6E,EAAQG,wBAAqC,IAAPhF,GAAyBA,EAAGb,YACxEqK,EAAWJ,eAAe,YAC1BI,EAAW4B,cAAcvG,KAIjC8D,EAAQtM,UAAU6O,iBAAmB,SAAUnL,GAC3C,IAAIyJ,EAAahO,KAAK2N,YACtB,OAAQpJ,GACJ,KAAK,EACDyJ,EAAWJ,eAAe,YAC1BI,EAAW6B,oBACX,MACJ,KAAK,EACD7B,EAAWJ,eAAe,YAC1BI,EAAW8B,wBACX,MACJ,KAAK,EACG9B,EAAW+B,aACX/B,EAAWJ,eAAe,YAC1BI,EAAW4B,cAAc5B,EAAW+B,eAUpD5C,EAAQtM,UAAU2M,qBAAuB,WACrC,IAAIrC,EAAQnL,KACRgQ,EAAgBrQ,EAAKsQ,MAAMjQ,KAAKgP,UAAU7C,QAASnM,KAAK6C,QAC5D7C,KAAKgP,UAAU7C,QACVG,KAAK1M,EAAUsQ,UAAUlQ,KAAKgP,WAAYpP,EAAUuQ,UAAS,SAAUC,GAAQ,OAAOA,EACtFC,QAAO,SAAUd,GAAQ,OAAOA,EAAK9L,aACrC6M,KAAI,SAAUf,GAAQ,OAAOA,EAAK/F,iBAAiB7G,OAAO2J,KAAK1M,EAAU2Q,MAAMhB,GAAO3P,EAAU2M,UAAUyD,UAAyBpQ,EAAU4Q,WAAY5Q,EAAU6Q,WAAU,SAAUlB,GAExL,OADApE,EAAMwE,UAAYJ,EACXA,EAAK/F,iBAAiB3G,UAC7BjD,EAAU2M,UAAUvM,KAAK6C,SACxBuJ,WAAU,WAAc,OAAQjB,EAAMwE,eAAYrH,MAG3D6E,EAAQtM,UAAUoN,cAAgB,WAC9B,MAA4B,eAArBjO,KAAK0G,aAEhByG,EAAQtM,UAAUuG,YAAc,WAC5BpH,KAAK0Q,oBAGTvD,EAAQtM,UAAU6P,iBAAmB,WACjC1Q,KAAK6C,OAAOnB,OACZ1B,KAAK6C,OAAO2J,YAETW,EAnMiB,CAoM1BzB,GACFyB,EAAQ5F,WAAa,CACjB,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,YACVC,SAAU,UACVC,KAAM,CACFC,YAAa,0BACb8C,KAAQ,OACR+F,0BAA2B,eAE/BlE,UAAW,CACP,CAAEC,QAAShB,EAAckF,YAAazD,GACtC,CAAET,QAASvK,EAAUyO,YAAazD,QAItDA,EAAQjF,eAAiB,WAAc,MAAO,CAC1C,CAAEV,KAAM9H,EAAK8I,eAAgBjB,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,YACvD,CAAEjB,KAAMuF,EAAcxF,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,cAEpD0E,EAAQzE,eAAiB,CACrBhC,YAAa,CAAC,CAAEc,KAAMnI,EAAKsJ,MAAOjB,KAAM,CAAC,wBACzC7E,OAAQ,CAAC,CAAE2E,KAAMnI,EAAKuJ,SACtBgG,cAAe,CAAC,CAAEpH,KAAMnI,EAAKwN,gBAAiBnF,KAAM,CAACgE,EAAc,CAAEoB,aAAa,MAClFkC,UAAW,CAAC,CAAExH,KAAMnI,EAAKwN,gBAAiBnF,KAAM,CAACmB,EAAa,CAAEiE,aAAa,MAC7E4B,eAAgB,CAAC,CAAElH,KAAMnI,EAAKsJ,MAAOjB,KAAM,CAAC;;;;;;;;AAgBhD,IAAImJ,EAA2B,WAC3B,SAASA,IAEL7Q,KAAK8Q,UAAY,GAEjB9Q,KAAK+Q,OAAS,IAAIpR,EAAKqR,QAEvBhR,KAAKiR,OAAS,IAAItR,EAAKqR,QAEvBhR,KAAKsP,MAAQtP,KAAK+Q,OAMlB/Q,KAAKyP,MAAQzP,KAAKiR,OAoCtB,OAjCAJ,EAAUhQ,UAAUe,KAAO,SAAUxC,GACjCY,KAAK8Q,UAAUlP,KAAKxC,IAOxByR,EAAUhQ,UAAU6E,YAAc,SAAUwL,GACxC,IAAIC,EAAgBnR,KAAK8Q,UAAUM,MAC/BD,IACAnR,KAAK+Q,OAAOrP,KAAKyP,GACa,IAA1BnR,KAAK8Q,UAAU7O,QACfjC,KAAKiR,OAAOvP,KAAKwP,KAS7BL,EAAUhQ,UAAU0I,SAAW,SAAU2H,GACrC,GAAIlR,KAAK8Q,UAAU7O,OAAQ,CACvB,KAAOjC,KAAK8Q,UAAU7O,QAAQ,CAC1B,IAAIkP,EAAgBnR,KAAK8Q,UAAUM,MAC/BD,GACAnR,KAAK+Q,OAAOrP,KAAKyP,GAGzBnR,KAAKiR,OAAOvP,KAAKwP,KAGlBL,EAnDmB,GA4D1BQ,EAA4B,SAAUnG,GAEtC,SAASmG,EAAWjO,EAAY0F,GAC5B,IAAIqC,EAAQD,EAAO1J,KAAKxB,OAASA,KAUjC,OATAmL,EAAM/H,WAAaA,EACnB+H,EAAMrC,KAAOA,EAKbqC,EAAMzE,YAAc,aAEpByE,EAAMmG,WAAa,IAAI3R,EAAKqR,QACrB7F,EAuJX,OAnKAzK,EAAU2Q,EAAYnG,GActBmG,EAAWxQ,UAAUgL,mBAAqB,WACtCX,EAAOrK,UAAUgL,mBAAmBrK,KAAKxB,MACzCA,KAAKuN,iBACLvN,KAAKwN,uBACLxN,KAAKyN,yBAGT4D,EAAWxQ,UAAU0E,eAAiB,SAAUmI,QACxB,IAAhBA,IAA0BA,EAAc,WAC5C1N,KAAK2N,YAAYC,eAAeF,GAChC1N,KAAK2N,YAAYE,sBAGrBwD,EAAWxQ,UAAUiF,cAAgB,SAAU4H,QACvB,IAAhBA,IAA0BA,EAAc,WAC5C1N,KAAK2N,YAAYC,eAAeF,GAChC1N,KAAK2N,YAAYG,qBAOrBuD,EAAWxQ,UAAUkN,gBAAkB,SAAUxJ,GAC7C,IAAIH,EAAII,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChCiJ,EAAahO,KAAK2N,YACtB,OAAQpJ,EAAMY,SACV,KAAK1F,EAASoG,SACd,KAAKpG,EAASmG,WACd,KAAKnG,EAASkG,WACd,KAAKlG,EAAS+F,YACV,IAAI+L,EAAmBhN,EAAMY,UAAY1F,EAASkG,YAAcpB,EAAMY,UAAY1F,EAAS+F,YAI3F,GAAKxF,KAAKiO,iBAAmBsD,IACvBvR,KAAKiO,kBAAoBsD,EAAmB,CAC9ChN,EAAMe,iBACN,IAAIkM,EAA8C,QAAhCpN,EAAK4J,EAAW+B,kBAA+B,IAAP3L,OAAgB,EAASA,EAAGV,aACW,QAAhGe,EAAsC,QAAhCD,EAAKwJ,EAAW+B,kBAA+B,IAAPvL,OAAgB,EAASA,EAAGgF,wBAAqC,IAAP/E,GAAyBA,EAAGd,YACrIqK,EAAWJ,eAAe,YAC1BI,EAAWE,UAAU3J,GACjBiN,IACiG,QAAhG7M,EAAsC,QAAhCD,EAAKsJ,EAAW+B,kBAA+B,IAAPrL,OAAgB,EAASA,EAAG8E,wBAAqC,IAAP7E,GAAyBA,EAAGf,YAG7I,MACJ,KAAKnE,EAAS0O,OACV5J,EAAMe,iBAC2F,QAAhGT,EAAsC,QAAhCD,EAAKoJ,EAAW+B,kBAA+B,IAAPnL,OAAgB,EAASA,EAAG4E,wBAAqC,IAAP3E,GAAyBA,EAAGlB,YACrI,MACJ,KAAKlE,EAAS4O,IACuF,QAAhGtJ,EAAsC,QAAhCD,EAAKkJ,EAAW+B,kBAA+B,IAAPjL,OAAgB,EAASA,EAAG0E,wBAAqC,IAAPzE,GAAyBA,EAAGpB,YACrI,MACJ,QACIqK,EAAWE,UAAU3J,KAIjC8M,EAAWxQ,UAAU0M,eAAiB,WAClC,IAAInJ,EACJpE,KAAK2N,YAAc,IAAInO,EAAKuP,gBAAgB/O,KAAKgP,WAC5CC,WACAC,gBACAC,iBACDnP,KAAKiO,gBACLjO,KAAK2N,YAAYyB,2BAAgD,QAApBhL,EAAKpE,KAAK8I,YAAyB,IAAP1E,OAAgB,EAASA,EAAGvC,QAAU,OAG/G7B,KAAK2N,YAAY0B,2BAIzBgC,EAAWxQ,UAAU4M,sBAAwB,WACzC,IAAItC,EAAQnL,KACZA,KAAKoD,WAAWkM,MACXhD,KAAK1M,EAAU2M,UAAUvM,KAAKsR,aAC9BlF,WAAU,SAAUmD,GAAQ,OAAOpE,EAAMqE,eAAeD,MAC7DvP,KAAKoD,WAAWqM,MACXnD,KAAK1M,EAAU2M,UAAUvM,KAAKsR,aAC9BlF,WAAU,SAAU7H,GAAS,OAAO4G,EAAMsG,gBAAgBlN,OAMnE8M,EAAWxQ,UAAU2O,eAAiB,SAAUpQ,GAC5C,IAAIgF,EAAII,EACJ6E,EAAUrJ,KAAK2P,UACf3B,EAAahO,KAAK2N,YAClBvO,KAAgG,QAArFgF,EAAKiF,MAAAA,OAAyC,EAASA,EAAQG,wBAAqC,IAAPpF,OAAgB,EAASA,EAAGD,aAChG,QAAnCK,EAAK6E,EAAQG,wBAAqC,IAAPhF,GAAyBA,EAAGb,YACxEqK,EAAWJ,eAAe,YAC1BI,EAAW4B,cAAcvG,KAOjCgI,EAAWxQ,UAAU4Q,gBAAkB,SAAUlN,GAC7C,IAAIH,EAAII,EAAIC,EAAIC,EACZsJ,EAAahO,KAAK2N,YACtB,OAAQpJ,GACJ,KAAK,EACDyJ,EAAWJ,eAAe,YAC1BI,EAAW6B,oBACsF,QAAhGrL,EAAsC,QAAhCJ,EAAK4J,EAAW+B,kBAA+B,IAAP3L,OAAgB,EAASA,EAAGoF,wBAAqC,IAAPhF,GAAyBA,EAAGZ,WACrI,MACJ,KAAK,EACDoK,EAAWJ,eAAe,YAC1BI,EAAW8B,wBACsF,QAAhGpL,EAAsC,QAAhCD,EAAKuJ,EAAW+B,kBAA+B,IAAPtL,OAAgB,EAASA,EAAG+E,wBAAqC,IAAP9E,GAAyBA,EAAGd,WACrI,MACJ,KAAK,EACGoK,EAAW+B,aACX/B,EAAWJ,eAAe,YAC1BI,EAAW4B,cAAc5B,EAAW+B,eAQpDsB,EAAWxQ,UAAUoN,cAAgB,WACjC,MAA4B,eAArBjO,KAAK0G,aAMhB2K,EAAWxQ,UAAU2M,qBAAuB,WACxC,IAAIrC,EAAQnL,KACRgQ,EAAgBrQ,EAAKsQ,MAAMjQ,KAAKgP,UAAU7C,QAASnM,KAAKsR,YAC5DtR,KAAKgP,UAAU7C,QACVG,KAAK1M,EAAUsQ,UAAUlQ,KAAKgP,WAAYpP,EAAUuQ,UAAS,SAAUC,GAAQ,OAAOA,EACtFC,QAAO,SAAUd,GAAQ,OAAOA,EAAK9L,aACrC6M,KAAI,SAAUf,GAAQ,OAAOA,EAAK/F,iBAAiB7G,OAAO2J,KAAK1M,EAAU2Q,MAAMhB,GAAO3P,EAAU2M,UAAUyD,UAAyBpQ,EAAU4Q,WAAY5Q,EAAU6Q,WAAU,SAAUlB,GAExL,OADApE,EAAMwE,UAAYJ,EACXA,EAAK/F,iBAAiB3G,UAC7BjD,EAAU2M,UAAUvM,KAAKsR,aACxBlF,WAAU,WAAc,OAAQjB,EAAMwE,eAAYrH,MAE3D+I,EAAWxQ,UAAUuG,YAAc,WAC/B8D,EAAOrK,UAAUuG,YAAY5F,KAAKxB,MAClCA,KAAKsR,WAAW5P,OAChB1B,KAAKsR,WAAW9E,YAEb6E,EApKoB,CAqK7B3F,GACF2F,EAAW9J,WAAa,CACpB,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,eACVC,SAAU,aACVC,KAAM,CACFC,YAAa,0BACb4J,UAAW,mBACX9G,KAAQ,UACR7C,SAAY,IACZ4I,0BAA2B,eAE/BlE,UAAW,CACP,CAAEC,QAAShB,EAAckF,YAAaS,GACtC,CAAE3E,QAASvK,EAAUyO,YAAaS,GAClC,CAAE3E,QAASmE,EAAWjE,SAAUiE,QAIpDQ,EAAWnJ,eAAiB,WAAc,MAAO,CAC7C,CAAEV,KAAMqJ,GACR,CAAErJ,KAAM9H,EAAK8I,eAAgBjB,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,cAE3D4I,EAAW3I,eAAiB,CACxBhC,YAAa,CAAC,CAAEc,KAAMnI,EAAKsJ,MAAOjB,KAAM,CAAC,2BACzCsH,UAAW,CAAC,CAAExH,KAAMnI,EAAKwN,gBAAiBnF,KAAM,CAACmB,EAAa,CAAEiE,aAAa,OAQjF,IAAI6E,EAAkC,SAAUzG,GAE5C,SAASyG,EAAiBC,EAAsB/H,EAASgI,EAAYC,EAErEC,GACI,IAAI5G,EAAQD,EAAO1J,KAAKxB,KAAM6J,EAASgI,EAAYC,EAAKC,IAAgB/R,KAGxE,OAFAmL,EAAMyG,qBAAuBA,EAC7BzG,EAAM6G,8BACC7G,EAiBX,OAxBAzK,EAAUiR,EAAkBzG,GAU5ByG,EAAiB9Q,UAAUmR,4BAA8B,WACrD,IAAI7G,EAAQnL,KACZA,KAAKiS,0BAA4BjS,KAAK4R,qBAAqBM,QAAO,SAAU1G,EAAID,GAAQ,OAAQJ,EAAMM,QAAUN,EAAMK,KAAOA,GAAML,EAAMI,OAASA,MAGtJoG,EAAiB9Q,UAAUwI,QAAU,WACjC6B,EAAOrK,UAAUwI,QAAQ7H,KAAKxB,MACzBA,KAAKsJ,UACNtJ,KAAK4R,qBAAqBO,OAAOnS,KAAKwL,GAAIxL,KAAKuL,OAGvDoG,EAAiB9Q,UAAUuG,YAAc,WACrCpH,KAAKiS,6BAEFN,EAzB0B,CA0BnC1G,GACF0G,EAAiBpK,WAAa,CAC1B,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,qBACVC,SAAU,mBACVC,KAAM,CACFuK,UAAW,YACX5K,KAAQ,SACRoD,KAAQ,gBACRyH,sBAAuB,kBACvBxH,uBAAwB,oBAE5B4B,UAAW,CACP,CAAEC,QAASzB,EAAuB2F,YAAae,GAC/C,CAAEjF,QAAS7D,EAAa+H,YAAa3F,QAIzD0G,EAAiBzJ,eAAiB,WAAc,MAAO,CACnD,CAAEV,KAAM3H,EAAY8M,2BACpB,CAAEnF,KAAMnI,EAAK8I,YACb,CAAEX,UAAMc,EAAWf,WAAY,CAAC,CAAEC,KAAMnI,EAAKkJ,OAAQb,KAAM,CAACvF,MAC5D,CAAEqF,KAAM9H,EAAK8I,eAAgBjB,WAAY,CAAC,CAAEC,KAAMnI,EAAKoJ,YACvD,CAAEjB,KAAMnF,EAAoBkF,WAAY,CAAC,CAAEC,KAAMnI,EAAKyL,MAAQ,CAAEtD,KAAMnI,EAAKoJ,cAO/E,IAAI6J,EAAqC,SAAUpH,GAE/C,SAASoH,IACL,OAAkB,OAAXpH,GAAmBA,EAAOE,MAAMpL,KAAMgC,YAAchC,KAQ/D,OAVAU,EAAU4R,EAAqBpH,GAI/BoH,EAAoBzR,UAAUwI,QAAU,WACpC6B,EAAOrK,UAAUwI,QAAQ7H,KAAKxB,MACzBA,KAAKsJ,WACNtJ,KAAKyL,SAAWzL,KAAKyL,UAGtB6G,EAX6B,CAYtCrH,GACFqH,EAAoB/K,WAAa,CAC7B,CAAEC,KAAMnI,EAAKoI,UAAWC,KAAM,CAAC,CACnBC,SAAU,wBACVC,SAAU,sBACVC,KAAM,CACFuK,UAAW,YACX5K,KAAQ,SACRoD,KAAQ,mBACRyH,sBAAuB,kBACvBxH,uBAAwB,oBAE5B4B,UAAW,CACP,CAAEC,QAASzB,EAAuB2F,YAAa0B,GAC/C,CAAE5F,QAAS7D,EAAa+H,YAAa3F;;;;;;;;AAYzD,IAUIsH,EAVAC,EAAwB,CACxBnB,EACAlE,EACAJ,EACAlE,EACA8I,EACAW,EACAjQ,EACAqJ,IAEA6G,EACA,SAASA,OAIChL,WAAa,CACvB,CAAEC,KAAMnI,EAAKoT,SAAU/K,KAAM,CAAC,CAClBgL,QAAS,CAACnT,EAAQoT,eAClB/T,QAAS4T,EACTI,aAAcJ;;;;;;;;AAgB9B5T,EAAQuO,QAAUA,EAClBvO,EAAQyS,WAAaA,EACrBzS,EAAQ8M,aAAeA,EACvB9M,EAAQiK,YAAcA,EACtBjK,EAAQ0T,oBAAsBA,EAC9B1T,EAAQ+S,iBAAmBA,EAC3B/S,EAAQyD,mBAAqBA,EAC7BzD,EAAQ2T,cAAgBA,EACxB3T,EAAQmO,aAAeA,EACvBnO,EAAQiU,mDAAqD5H,EAC7DrM,EAAQkU,mDAAqD3Q,EAC7DvD,EAAQmU,mDAAqDlC,EAE7DzQ,OAAO2C,eAAenE,EAAS,aAAc,CAAEiD,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/overlay'), require('@angular/cdk/a11y'), require('@angular/cdk/keycodes'), require('@angular/cdk/bidi'), require('rxjs/operators'), require('rxjs'), require('@angular/cdk/collections'), require('@angular/cdk/coercion'), require('@angular/cdk/portal')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/menu', ['exports', '@angular/core', '@angular/cdk/overlay', '@angular/cdk/a11y', '@angular/cdk/keycodes', '@angular/cdk/bidi', 'rxjs/operators', 'rxjs', '@angular/cdk/collections', '@angular/cdk/coercion', '@angular/cdk/portal'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.menu = {}), global.ng.core, global.ng.cdk.overlay, global.ng.cdk.a11y, global.ng.cdk.keycodes, global.ng.cdk.bidi, global.rxjs.operators, global.rxjs, global.ng.cdk.collections, global.ng.cdk.coercion, global.ng.cdk.portal));\n}(this, (function (exports, core, overlay, a11y, keycodes, bidi, operators, rxjs, collections, coercion, portal) { 'use strict';\n\n    /*! *****************************************************************************\n    Copyright (c) Microsoft Corporation.\n\n    Permission to use, copy, modify, and/or distribute this software for any\n    purpose with or without fee is hereby granted.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n    PERFORMANCE OF THIS SOFTWARE.\n    ***************************************************************************** */\n    /* global Reflect, Promise */\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b)\n                if (b.hasOwnProperty(p))\n                    d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    function __extends(d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    }\n    var __assign = function () {\n        __assign = Object.assign || function __assign(t) {\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\n                s = arguments[i];\n                for (var p in s)\n                    if (Object.prototype.hasOwnProperty.call(s, p))\n                        t[p] = s[p];\n            }\n            return t;\n        };\n        return __assign.apply(this, arguments);\n    };\n    function __rest(s, e) {\n        var t = {};\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n                t[p] = s[p];\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                    t[p[i]] = s[p[i]];\n            }\n        return t;\n    }\n    function __decorate(decorators, target, key, desc) {\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\")\n            r = Reflect.decorate(decorators, target, key, desc);\n        else\n            for (var i = decorators.length - 1; i >= 0; i--)\n                if (d = decorators[i])\n                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\n    }\n    function __param(paramIndex, decorator) {\n        return function (target, key) { decorator(target, key, paramIndex); };\n    }\n    function __metadata(metadataKey, metadataValue) {\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\")\n            return Reflect.metadata(metadataKey, metadataValue);\n    }\n    function __awaiter(thisArg, _arguments, P, generator) {\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n        return new (P || (P = Promise))(function (resolve, reject) {\n            function fulfilled(value) { try {\n                step(generator.next(value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function rejected(value) { try {\n                step(generator[\"throw\"](value));\n            }\n            catch (e) {\n                reject(e);\n            } }\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\n        });\n    }\n    function __generator(thisArg, body) {\n        var _ = { label: 0, sent: function () { if (t[0] & 1)\n                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () { return this; }), g;\n        function verb(n) { return function (v) { return step([n, v]); }; }\n        function step(op) {\n            if (f)\n                throw new TypeError(\"Generator is already executing.\");\n            while (_)\n                try {\n                    if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)\n                        return t;\n                    if (y = 0, t)\n                        op = [op[0] & 2, t.value];\n                    switch (op[0]) {\n                        case 0:\n                        case 1:\n                            t = op;\n                            break;\n                        case 4:\n                            _.label++;\n                            return { value: op[1], done: false };\n                        case 5:\n                            _.label++;\n                            y = op[1];\n                            op = [0];\n                            continue;\n                        case 7:\n                            op = _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                        default:\n                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                                _ = 0;\n                                continue;\n                            }\n                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {\n                                _.label = op[1];\n                                break;\n                            }\n                            if (op[0] === 6 && _.label < t[1]) {\n                                _.label = t[1];\n                                t = op;\n                                break;\n                            }\n                            if (t && _.label < t[2]) {\n                                _.label = t[2];\n                                _.ops.push(op);\n                                break;\n                            }\n                            if (t[2])\n                                _.ops.pop();\n                            _.trys.pop();\n                            continue;\n                    }\n                    op = body.call(thisArg, _);\n                }\n                catch (e) {\n                    op = [6, e];\n                    y = 0;\n                }\n                finally {\n                    f = t = 0;\n                }\n            if (op[0] & 5)\n                throw op[1];\n            return { value: op[0] ? op[1] : void 0, done: true };\n        }\n    }\n    var __createBinding = Object.create ? (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });\n    }) : (function (o, m, k, k2) {\n        if (k2 === undefined)\n            k2 = k;\n        o[k2] = m[k];\n    });\n    function __exportStar(m, exports) {\n        for (var p in m)\n            if (p !== \"default\" && !exports.hasOwnProperty(p))\n                __createBinding(exports, m, p);\n    }\n    function __values(o) {\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n        if (m)\n            return m.call(o);\n        if (o && typeof o.length === \"number\")\n            return {\n                next: function () {\n                    if (o && i >= o.length)\n                        o = void 0;\n                    return { value: o && o[i++], done: !o };\n                }\n            };\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n    }\n    function __read(o, n) {\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n        if (!m)\n            return o;\n        var i = m.call(o), r, ar = [], e;\n        try {\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)\n                ar.push(r.value);\n        }\n        catch (error) {\n            e = { error: error };\n        }\n        finally {\n            try {\n                if (r && !r.done && (m = i[\"return\"]))\n                    m.call(i);\n            }\n            finally {\n                if (e)\n                    throw e.error;\n            }\n        }\n        return ar;\n    }\n    function __spread() {\n        for (var ar = [], i = 0; i < arguments.length; i++)\n            ar = ar.concat(__read(arguments[i]));\n        return ar;\n    }\n    function __spreadArrays() {\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++)\n            s += arguments[i].length;\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n                r[k] = a[j];\n        return r;\n    }\n    ;\n    function __await(v) {\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\n    }\n    function __asyncGenerator(thisArg, _arguments, generator) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n        function verb(n) { if (g[n])\n            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n        function resume(n, v) { try {\n            step(g[n](v));\n        }\n        catch (e) {\n            settle(q[0][3], e);\n        } }\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n        function fulfill(value) { resume(\"next\", value); }\n        function reject(value) { resume(\"throw\", value); }\n        function settle(f, v) { if (f(v), q.shift(), q.length)\n            resume(q[0][0], q[0][1]); }\n    }\n    function __asyncDelegator(o) {\n        var i, p;\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\n    }\n    function __asyncValues(o) {\n        if (!Symbol.asyncIterator)\n            throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n        var m = o[Symbol.asyncIterator], i;\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }\n    }\n    function __makeTemplateObject(cooked, raw) {\n        if (Object.defineProperty) {\n            Object.defineProperty(cooked, \"raw\", { value: raw });\n        }\n        else {\n            cooked.raw = raw;\n        }\n        return cooked;\n    }\n    ;\n    var __setModuleDefault = Object.create ? (function (o, v) {\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n    }) : function (o, v) {\n        o[\"default\"] = v;\n    };\n    function __importStar(mod) {\n        if (mod && mod.__esModule)\n            return mod;\n        var result = {};\n        if (mod != null)\n            for (var k in mod)\n                if (Object.hasOwnProperty.call(mod, k))\n                    __createBinding(result, mod, k);\n        __setModuleDefault(result, mod);\n        return result;\n    }\n    function __importDefault(mod) {\n        return (mod && mod.__esModule) ? mod : { default: mod };\n    }\n    function __classPrivateFieldGet(receiver, privateMap) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to get private field on non-instance\");\n        }\n        return privateMap.get(receiver);\n    }\n    function __classPrivateFieldSet(receiver, privateMap, value) {\n        if (!privateMap.has(receiver)) {\n            throw new TypeError(\"attempted to set private field on non-instance\");\n        }\n        privateMap.set(receiver, value);\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Injection token used to return classes implementing the Menu interface */\n    var CDK_MENU = new core.InjectionToken('cdk-menu');\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n     * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n     * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n     * hover regardless of its sibling state.\n     *\n     * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n     * functionality.\n     */\n    var CdkMenuItemTrigger = /** @class */ (function () {\n        function CdkMenuItemTrigger(_elementRef, _viewContainerRef, _overlay, _parentMenu, _directionality) {\n            this._elementRef = _elementRef;\n            this._viewContainerRef = _viewContainerRef;\n            this._overlay = _overlay;\n            this._parentMenu = _parentMenu;\n            this._directionality = _directionality;\n            /** Emits when the attached menu is requested to open */\n            this.opened = new core.EventEmitter();\n            /** Emits when the attached menu is requested to close */\n            this.closed = new core.EventEmitter();\n            /** A reference to the overlay which manages the triggered menu */\n            this._overlayRef = null;\n        }\n        Object.defineProperty(CdkMenuItemTrigger.prototype, \"menuPanel\", {\n            /** Template reference variable to the menu this trigger opens */\n            get: function () {\n                return this._menuPanel;\n            },\n            set: function (panel) {\n                this._menuPanel = panel;\n                if (this._menuPanel) {\n                    this._menuPanel._menuStack = this._getMenuStack();\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** Open/close the attached menu if the trigger has been configured with one */\n        CdkMenuItemTrigger.prototype.toggle = function () {\n            if (this.hasMenu()) {\n                this.isMenuOpen() ? this.closeMenu() : this.openMenu();\n            }\n        };\n        /** Open the attached menu. */\n        CdkMenuItemTrigger.prototype.openMenu = function () {\n            if (!this.isMenuOpen()) {\n                this.opened.next();\n                this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n                this._overlayRef.attach(this._getPortal());\n            }\n        };\n        /** Close the opened menu. */\n        CdkMenuItemTrigger.prototype.closeMenu = function () {\n            if (this.isMenuOpen()) {\n                this.closed.next();\n                this._overlayRef.detach();\n            }\n        };\n        /** Return true if the trigger has an attached menu */\n        CdkMenuItemTrigger.prototype.hasMenu = function () {\n            return !!this.menuPanel;\n        };\n        /** Whether the menu this button is a trigger for is open */\n        CdkMenuItemTrigger.prototype.isMenuOpen = function () {\n            return this._overlayRef ? this._overlayRef.hasAttached() : false;\n        };\n        /**\n         * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n         * @return the menu if it is open, otherwise undefined.\n         */\n        CdkMenuItemTrigger.prototype.getMenu = function () {\n            var _a;\n            return (_a = this.menuPanel) === null || _a === void 0 ? void 0 : _a._menu;\n        };\n        /**\n         * Handles keyboard events for the menu item, specifically opening/closing the attached menu and\n         * focusing the appropriate submenu item.\n         * @param event the keyboard event to handle\n         */\n        CdkMenuItemTrigger.prototype._toggleOnKeydown = function (event) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n            var keyCode = event.keyCode;\n            switch (keyCode) {\n                case keycodes.SPACE:\n                case keycodes.ENTER:\n                    event.preventDefault();\n                    this.toggle();\n                    (_b = (_a = this.menuPanel) === null || _a === void 0 ? void 0 : _a._menu) === null || _b === void 0 ? void 0 : _b.focusFirstItem('keyboard');\n                    break;\n                case keycodes.RIGHT_ARROW:\n                    if (this._isParentVertical()) {\n                        event.preventDefault();\n                        if (((_c = this._directionality) === null || _c === void 0 ? void 0 : _c.value) === 'rtl') {\n                            this._getMenuStack().closeLatest(2 /* currentItem */);\n                        }\n                        else {\n                            this.openMenu();\n                            (_e = (_d = this.menuPanel) === null || _d === void 0 ? void 0 : _d._menu) === null || _e === void 0 ? void 0 : _e.focusFirstItem('keyboard');\n                        }\n                    }\n                    break;\n                case keycodes.LEFT_ARROW:\n                    if (this._isParentVertical()) {\n                        event.preventDefault();\n                        if (((_f = this._directionality) === null || _f === void 0 ? void 0 : _f.value) === 'rtl') {\n                            this.openMenu();\n                            (_h = (_g = this.menuPanel) === null || _g === void 0 ? void 0 : _g._menu) === null || _h === void 0 ? void 0 : _h.focusFirstItem('keyboard');\n                        }\n                        else {\n                            this._getMenuStack().closeLatest(2 /* currentItem */);\n                        }\n                    }\n                    break;\n                case keycodes.DOWN_ARROW:\n                case keycodes.UP_ARROW:\n                    if (!this._isParentVertical()) {\n                        event.preventDefault();\n                        this.openMenu();\n                        keyCode === keycodes.DOWN_ARROW\n                            ? (_k = (_j = this.menuPanel) === null || _j === void 0 ? void 0 : _j._menu) === null || _k === void 0 ? void 0 : _k.focusFirstItem('keyboard') : (_m = (_l = this.menuPanel) === null || _l === void 0 ? void 0 : _l._menu) === null || _m === void 0 ? void 0 : _m.focusLastItem('keyboard');\n                    }\n                    break;\n            }\n        };\n        /** Get the configuration object used to create the overlay */\n        CdkMenuItemTrigger.prototype._getOverlayConfig = function () {\n            return new overlay.OverlayConfig({\n                positionStrategy: this._getOverlayPositionStrategy(),\n                scrollStrategy: this._overlay.scrollStrategies.block(),\n                direction: this._directionality,\n            });\n        };\n        /** Build the position strategy for the overlay which specifies where to place the menu */\n        CdkMenuItemTrigger.prototype._getOverlayPositionStrategy = function () {\n            return this._overlay\n                .position()\n                .flexibleConnectedTo(this._elementRef)\n                .withPositions(this._getOverlayPositions());\n        };\n        /** Determine and return where to position the opened menu relative to the menu item */\n        CdkMenuItemTrigger.prototype._getOverlayPositions = function () {\n            // TODO: use a common positioning config from (possibly) cdk/overlay\n            return this._parentMenu.orientation === 'horizontal'\n                ? [\n                    { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n                    { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n                    { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n                    { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n                ]\n                : [\n                    { originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top' },\n                    { originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom' },\n                    { originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top' },\n                    { originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom' },\n                ];\n        };\n        /**\n         * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n         * content to change dynamically and be reflected in the application.\n         */\n        CdkMenuItemTrigger.prototype._getPortal = function () {\n            var _a, _b;\n            var hasMenuContentChanged = ((_a = this.menuPanel) === null || _a === void 0 ? void 0 : _a._templateRef) !== ((_b = this._panelContent) === null || _b === void 0 ? void 0 : _b.templateRef);\n            if (this.menuPanel && (!this._panelContent || hasMenuContentChanged)) {\n                this._panelContent = new portal.TemplatePortal(this.menuPanel._templateRef, this._viewContainerRef);\n            }\n            return this._panelContent;\n        };\n        /**\n         * @return true if if the enclosing parent menu is configured in a vertical orientation.\n         */\n        CdkMenuItemTrigger.prototype._isParentVertical = function () {\n            return this._parentMenu.orientation === 'vertical';\n        };\n        /** Get the menu stack from the parent. */\n        CdkMenuItemTrigger.prototype._getMenuStack = function () {\n            // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n            // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n            // we want to use it.\n            return this._parentMenu._menuStack;\n        };\n        CdkMenuItemTrigger.prototype.ngOnDestroy = function () {\n            this._destroyOverlay();\n        };\n        /** Destroy and unset the overlay reference it if exists */\n        CdkMenuItemTrigger.prototype._destroyOverlay = function () {\n            if (this._overlayRef) {\n                this._overlayRef.dispose();\n                this._overlayRef = null;\n            }\n        };\n        return CdkMenuItemTrigger;\n    }());\n    CdkMenuItemTrigger.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuItem][cdkMenuTriggerFor]',\n                    exportAs: 'cdkMenuTriggerFor',\n                    host: {\n                        '(keydown)': '_toggleOnKeydown($event)',\n                        'tabindex': '-1',\n                        'aria-haspopup': 'menu',\n                        '[attr.aria-expanded]': 'isMenuOpen()',\n                    },\n                },] }\n    ];\n    CdkMenuItemTrigger.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: core.ViewContainerRef },\n        { type: overlay.Overlay },\n        { type: undefined, decorators: [{ type: core.Inject, args: [CDK_MENU,] }] },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] }\n    ]; };\n    CdkMenuItemTrigger.propDecorators = {\n        menuPanel: [{ type: core.Input, args: ['cdkMenuTriggerFor',] }],\n        opened: [{ type: core.Output, args: ['cdkMenuOpened',] }],\n        closed: [{ type: core.Output, args: ['cdkMenuClosed',] }]\n    };\n\n    // TODO refactor this to be configurable allowing for custom elements to be removed\n    /** Removes all icons from within the given element. */\n    function removeIcons(element) {\n        var e_1, _c;\n        var _a;\n        try {\n            for (var _d = __values(Array.from(element.querySelectorAll('mat-icon, .material-icons'))), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var icon = _e.value;\n                (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_c = _d.return)) _c.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    }\n    /**\n     * Directive which provides the ability for an element to be focused and navigated to using the\n     * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n     * behavior when clicked.\n     */\n    var CdkMenuItem = /** @class */ (function () {\n        function CdkMenuItem(_elementRef, _parentMenu, _dir, \n        /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n        _menuTrigger) {\n            this._elementRef = _elementRef;\n            this._parentMenu = _parentMenu;\n            this._dir = _dir;\n            this._menuTrigger = _menuTrigger;\n            this._disabled = false;\n            /**\n             * If this MenuItem is a regular MenuItem, outputs when it is triggered by a keyboard or mouse\n             * event.\n             */\n            this.triggered = new core.EventEmitter();\n        }\n        Object.defineProperty(CdkMenuItem.prototype, \"disabled\", {\n            /**  Whether the CdkMenuItem is disabled - defaults to false */\n            get: function () {\n                return this._disabled;\n            },\n            set: function (value) {\n                this._disabled = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** Place focus on the element. */\n        CdkMenuItem.prototype.focus = function () {\n            this._elementRef.nativeElement.focus();\n        };\n        /**\n         * If the menu item is not disabled and the element does not have a menu trigger attached, emit\n         * on the cdkMenuItemTriggered emitter and close all open menus.\n         */\n        CdkMenuItem.prototype.trigger = function () {\n            if (!this.disabled && !this.hasMenu()) {\n                this.triggered.next();\n                this._getMenuStack().closeAll();\n            }\n        };\n        /** Whether the menu item opens a menu. */\n        CdkMenuItem.prototype.hasMenu = function () {\n            var _a;\n            return !!((_a = this._menuTrigger) === null || _a === void 0 ? void 0 : _a.hasMenu());\n        };\n        /** Return true if this MenuItem has an attached menu and it is open. */\n        CdkMenuItem.prototype.isMenuOpen = function () {\n            var _a;\n            return !!((_a = this._menuTrigger) === null || _a === void 0 ? void 0 : _a.isMenuOpen());\n        };\n        /**\n         * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n         * @return the menu if it is open, otherwise undefined.\n         */\n        CdkMenuItem.prototype.getMenu = function () {\n            var _a;\n            return (_a = this._menuTrigger) === null || _a === void 0 ? void 0 : _a.getMenu();\n        };\n        /** Get the MenuItemTrigger associated with this element. */\n        CdkMenuItem.prototype.getMenuTrigger = function () {\n            return this._menuTrigger;\n        };\n        /** Get the label for this element which is required by the FocusableOption interface. */\n        CdkMenuItem.prototype.getLabel = function () {\n            var _a;\n            // TODO cloning the tree may be expensive; implement a better method\n            // we know that the current node is an element type\n            var clone = this._elementRef.nativeElement.cloneNode(true);\n            removeIcons(clone);\n            return ((_a = clone.textContent) === null || _a === void 0 ? void 0 : _a.trim()) || '';\n        };\n        // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n        // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n        // can move this back into `host`.\n        // tslint:disable:no-host-decorator-in-concrete\n        /**\n         * Handles keyboard events for the menu item, specifically either triggering the user defined\n         * callback or opening/closing the current menu based on whether the left or right arrow key was\n         * pressed.\n         * @param event the keyboard event to handle\n         */\n        CdkMenuItem.prototype._onKeydown = function (event) {\n            var _a, _b;\n            switch (event.keyCode) {\n                case keycodes.SPACE:\n                case keycodes.ENTER:\n                    event.preventDefault();\n                    this.trigger();\n                    break;\n                case keycodes.RIGHT_ARROW:\n                    if (this._isParentVertical() && !this.hasMenu()) {\n                        event.preventDefault();\n                        ((_a = this._dir) === null || _a === void 0 ? void 0 : _a.value) === 'rtl'\n                            ? this._getMenuStack().closeLatest(1 /* previousItem */)\n                            : this._getMenuStack().closeAll(0 /* nextItem */);\n                    }\n                    break;\n                case keycodes.LEFT_ARROW:\n                    if (this._isParentVertical() && !this.hasMenu()) {\n                        event.preventDefault();\n                        ((_b = this._dir) === null || _b === void 0 ? void 0 : _b.value) === 'rtl'\n                            ? this._getMenuStack().closeAll(0 /* nextItem */)\n                            : this._getMenuStack().closeLatest(1 /* previousItem */);\n                    }\n                    break;\n            }\n        };\n        /** Return true if the enclosing parent menu is configured in a horizontal orientation. */\n        CdkMenuItem.prototype._isParentVertical = function () {\n            return this._parentMenu.orientation === 'vertical';\n        };\n        /** Get the MenuStack from the parent menu. */\n        CdkMenuItem.prototype._getMenuStack = function () {\n            // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n            // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n            // we want to use it.\n            return this._parentMenu._menuStack;\n        };\n        return CdkMenuItem;\n    }());\n    CdkMenuItem.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuItem]',\n                    exportAs: 'cdkMenuItem',\n                    host: {\n                        'tabindex': '-1',\n                        'type': 'button',\n                        'role': 'menuitem',\n                        '[attr.aria-disabled]': 'disabled || null',\n                    },\n                },] }\n    ];\n    CdkMenuItem.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: undefined, decorators: [{ type: core.Inject, args: [CDK_MENU,] }] },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n        { type: CdkMenuItemTrigger, decorators: [{ type: core.Self }, { type: core.Optional }] }\n    ]; };\n    CdkMenuItem.propDecorators = {\n        disabled: [{ type: core.Input }],\n        triggered: [{ type: core.Output, args: ['cdkMenuItemTriggered',] }],\n        _onKeydown: [{ type: core.HostListener, args: ['keydown', ['$event'],] }]\n    };\n\n    /** Counter used to set a unique id and name for a selectable item */\n    var nextId = 0;\n    /**\n     * Base class providing checked state for MenuItems along with outputting a clicked event when the\n     * element is triggered. It provides functionality for selectable elements.\n     */\n    var CdkMenuItemSelectable = /** @class */ (function (_super) {\n        __extends(CdkMenuItemSelectable, _super);\n        function CdkMenuItemSelectable() {\n            var _this = _super.apply(this, __spread(arguments)) || this;\n            /** Event emitted when the selectable item is clicked */\n            _this.clicked = new core.EventEmitter();\n            _this._checked = false;\n            /** The name of the selectable element with a default value */\n            _this.name = \"cdk-selectable-item-\" + nextId++;\n            /** The id of the selectable element with a default value */\n            _this.id = \"cdk-selectable-item-\" + nextId++;\n            return _this;\n        }\n        Object.defineProperty(CdkMenuItemSelectable.prototype, \"checked\", {\n            /** Whether the element is checked */\n            get: function () {\n                return this._checked;\n            },\n            set: function (value) {\n                this._checked = coercion.coerceBooleanProperty(value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** If the element is not disabled emit the click event */\n        CdkMenuItemSelectable.prototype.trigger = function () {\n            if (!this.disabled) {\n                this.clicked.next(this);\n            }\n        };\n        return CdkMenuItemSelectable;\n    }(CdkMenuItem));\n    CdkMenuItemSelectable.decorators = [\n        { type: core.Directive }\n    ];\n    CdkMenuItemSelectable.propDecorators = {\n        clicked: [{ type: core.Output }],\n        checked: [{ type: core.Input }],\n        name: [{ type: core.Input }],\n        id: [{ type: core.Input }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive which acts as a grouping container for `CdkMenuItem` instances with\n     * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n     */\n    var CdkMenuGroup = /** @class */ (function () {\n        function CdkMenuGroup() {\n            /** Emits the element when checkbox or radiobutton state changed  */\n            this.change = new core.EventEmitter();\n            /** Emits when the _selectableItems QueryList triggers a change */\n            this._selectableChanges = new core.EventEmitter();\n        }\n        CdkMenuGroup.prototype.ngAfterContentInit = function () {\n            this._registerMenuSelectionListeners();\n        };\n        /**\n         * Register the child selectable elements with the change emitter and ensure any new child\n         * elements do so as well.\n         */\n        CdkMenuGroup.prototype._registerMenuSelectionListeners = function () {\n            var _this = this;\n            this._selectableItems.forEach(function (selectable) { return _this._registerClickListener(selectable); });\n            this._selectableItems.changes.subscribe(function (selectableItems) {\n                _this._selectableChanges.next();\n                selectableItems.forEach(function (selectable) { return _this._registerClickListener(selectable); });\n            });\n        };\n        /** Register each selectable to emit on the change Emitter when clicked */\n        CdkMenuGroup.prototype._registerClickListener = function (selectable) {\n            var _this = this;\n            selectable.clicked\n                .pipe(operators.takeUntil(this._selectableChanges))\n                .subscribe(function () { return _this.change.next(selectable); });\n        };\n        CdkMenuGroup.prototype.ngOnDestroy = function () {\n            this._selectableChanges.next();\n            this._selectableChanges.complete();\n        };\n        return CdkMenuGroup;\n    }());\n    CdkMenuGroup.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuGroup]',\n                    exportAs: 'cdkMenuGroup',\n                    host: {\n                        'role': 'group',\n                    },\n                    providers: [{ provide: collections.UniqueSelectionDispatcher, useClass: collections.UniqueSelectionDispatcher }],\n                },] }\n    ];\n    CdkMenuGroup.propDecorators = {\n        change: [{ type: core.Output }],\n        _selectableItems: [{ type: core.ContentChildren, args: [CdkMenuItemSelectable, { descendants: true },] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n     * child element it wraps which allows for opening of the CdkMenu in an overlay.\n     */\n    var CdkMenuPanel = /** @class */ (function () {\n        function CdkMenuPanel(_templateRef) {\n            this._templateRef = _templateRef;\n        }\n        /**\n         * Set the Menu component on the menu panel. Since we cannot use ContentChild to fetch the\n         * child Menu component, the child Menu must register its self with the parent MenuPanel.\n         */\n        CdkMenuPanel.prototype._registerMenu = function (child) {\n            this._menu = child;\n            // The ideal solution would be to affect the CdkMenuPanel injector from the CdkMenuTrigger and\n            // inject the menu stack reference into the child menu and menu items, however this isn't\n            // possible at this time.\n            this._menu._menuStack = this._menuStack;\n            this._menuStack.push(child);\n        };\n        return CdkMenuPanel;\n    }());\n    CdkMenuPanel.decorators = [\n        { type: core.Directive, args: [{ selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel' },] }\n    ];\n    CdkMenuPanel.ctorParameters = function () { return [\n        { type: core.TemplateRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Throws an exception when the CdkMenuPanel cannot be injected and the developer did not\n     * explicitly provide a reference to the enclosing CdkMenuPanel.\n     * @docs-private\n     */\n    function throwMissingMenuPanelError() {\n        throw Error('CdkMenu must be placed inside a CdkMenuPanel or a reference to CdkMenuPanel' +\n            ' must be explicitly provided if using ViewEngine');\n    }\n\n    /**\n     * Directive which configures the element as a Menu which should contain child elements marked as\n     * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n     * contains accessible keyboard and mouse handling logic.\n     *\n     * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n     */\n    var CdkMenu = /** @class */ (function (_super) {\n        __extends(CdkMenu, _super);\n        function CdkMenu(_dir, _menuPanel) {\n            var _this = _super.call(this) || this;\n            _this._dir = _dir;\n            _this._menuPanel = _menuPanel;\n            /**\n             * Sets the aria-orientation attribute and determines where menus will be opened.\n             * Does not affect styling/layout.\n             */\n            _this.orientation = 'vertical';\n            /** Event emitted when the menu is closed. */\n            _this.closed = new core.EventEmitter();\n            return _this;\n        }\n        CdkMenu.prototype.ngOnInit = function () {\n            this._registerWithParentPanel();\n        };\n        CdkMenu.prototype.ngAfterContentInit = function () {\n            _super.prototype.ngAfterContentInit.call(this);\n            this._completeChangeEmitter();\n            this._setKeyManager();\n            this._subscribeToMenuOpen();\n            this._subscribeToMenuStack();\n        };\n        /** Place focus on the first MenuItem in the menu and set the focus origin. */\n        CdkMenu.prototype.focusFirstItem = function (focusOrigin) {\n            if (focusOrigin === void 0) { focusOrigin = 'program'; }\n            this._keyManager.setFocusOrigin(focusOrigin);\n            this._keyManager.setFirstItemActive();\n        };\n        /** Place focus on the last MenuItem in the menu and set the focus origin. */\n        CdkMenu.prototype.focusLastItem = function (focusOrigin) {\n            if (focusOrigin === void 0) { focusOrigin = 'program'; }\n            this._keyManager.setFocusOrigin(focusOrigin);\n            this._keyManager.setLastItemActive();\n        };\n        /** Handle keyboard events for the Menu. */\n        CdkMenu.prototype._handleKeyEvent = function (event) {\n            var keyManager = this._keyManager;\n            switch (event.keyCode) {\n                case keycodes.LEFT_ARROW:\n                case keycodes.RIGHT_ARROW:\n                    if (this._isHorizontal()) {\n                        event.preventDefault();\n                        keyManager.setFocusOrigin('keyboard');\n                        keyManager.onKeydown(event);\n                    }\n                    break;\n                case keycodes.UP_ARROW:\n                case keycodes.DOWN_ARROW:\n                    if (!this._isHorizontal()) {\n                        event.preventDefault();\n                        keyManager.setFocusOrigin('keyboard');\n                        keyManager.onKeydown(event);\n                    }\n                    break;\n                case keycodes.ESCAPE:\n                    if (!keycodes.hasModifierKey(event)) {\n                        event.preventDefault();\n                        this._menuStack.closeLatest(2 /* currentItem */);\n                    }\n                    break;\n                case keycodes.TAB:\n                    this._menuStack.closeAll();\n                    break;\n                default:\n                    keyManager.onKeydown(event);\n            }\n        };\n        /** Register this menu with its enclosing parent menu panel */\n        CdkMenu.prototype._registerWithParentPanel = function () {\n            var parent = this._getMenuPanel();\n            if (parent) {\n                parent._registerMenu(this);\n            }\n            else {\n                throwMissingMenuPanelError();\n            }\n        };\n        /**\n         * Get the enclosing CdkMenuPanel defaulting to the injected reference over the developer\n         * provided reference.\n         */\n        CdkMenu.prototype._getMenuPanel = function () {\n            return this._menuPanel || this._explicitPanel;\n        };\n        /**\n         * Complete the change emitter if there are any nested MenuGroups or register to complete the\n         * change emitter if a MenuGroup is rendered at some point\n         */\n        CdkMenu.prototype._completeChangeEmitter = function () {\n            var _this = this;\n            if (this._hasNestedGroups()) {\n                this.change.complete();\n            }\n            else {\n                this._nestedGroups.changes.pipe(operators.take(1)).subscribe(function () { return _this.change.complete(); });\n            }\n        };\n        /** Return true if there are nested CdkMenuGroup elements within the Menu */\n        CdkMenu.prototype._hasNestedGroups = function () {\n            // view engine has a bug where @ContentChildren will return the current element\n            // along with children if the selectors match - not just the children.\n            // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n            // order to ensure that we return true iff there are child CdkMenuGroup elements.\n            return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n        };\n        /** Setup the FocusKeyManager with the correct orientation for the menu. */\n        CdkMenu.prototype._setKeyManager = function () {\n            var _a;\n            this._keyManager = new a11y.FocusKeyManager(this._allItems)\n                .withWrap()\n                .withTypeAhead()\n                .withHomeAndEnd();\n            if (this._isHorizontal()) {\n                this._keyManager.withHorizontalOrientation(((_a = this._dir) === null || _a === void 0 ? void 0 : _a.value) || 'ltr');\n            }\n            else {\n                this._keyManager.withVerticalOrientation();\n            }\n        };\n        /** Subscribe to the MenuStack close and empty observables. */\n        CdkMenu.prototype._subscribeToMenuStack = function () {\n            var _this = this;\n            this._menuStack.close\n                .pipe(operators.takeUntil(this.closed))\n                .subscribe(function (item) { return _this._closeOpenMenu(item); });\n            this._menuStack.empty\n                .pipe(operators.takeUntil(this.closed))\n                .subscribe(function (event) { return _this._toggleMenuFocus(event); });\n        };\n        /**\n         * Close the open menu if the current active item opened the requested MenuStackItem.\n         * @param item the MenuStackItem requested to be closed.\n         */\n        CdkMenu.prototype._closeOpenMenu = function (menu) {\n            var _a, _b;\n            var keyManager = this._keyManager;\n            var trigger = this._openItem;\n            if (menu === ((_a = trigger === null || trigger === void 0 ? void 0 : trigger.getMenuTrigger()) === null || _a === void 0 ? void 0 : _a.getMenu())) {\n                (_b = trigger.getMenuTrigger()) === null || _b === void 0 ? void 0 : _b.closeMenu();\n                keyManager.setFocusOrigin('keyboard');\n                keyManager.setActiveItem(trigger);\n            }\n        };\n        /** Set focus the either the current, previous or next item based on the FocusNext event. */\n        CdkMenu.prototype._toggleMenuFocus = function (event) {\n            var keyManager = this._keyManager;\n            switch (event) {\n                case 0 /* nextItem */:\n                    keyManager.setFocusOrigin('keyboard');\n                    keyManager.setNextItemActive();\n                    break;\n                case 1 /* previousItem */:\n                    keyManager.setFocusOrigin('keyboard');\n                    keyManager.setPreviousItemActive();\n                    break;\n                case 2 /* currentItem */:\n                    if (keyManager.activeItem) {\n                        keyManager.setFocusOrigin('keyboard');\n                        keyManager.setActiveItem(keyManager.activeItem);\n                    }\n                    break;\n            }\n        };\n        // TODO(andy9775): remove duplicate logic between menu an menu bar\n        /**\n         * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n         * and stop tracking it when the menu is closed.\n         */\n        CdkMenu.prototype._subscribeToMenuOpen = function () {\n            var _this = this;\n            var exitCondition = rxjs.merge(this._allItems.changes, this.closed);\n            this._allItems.changes\n                .pipe(operators.startWith(this._allItems), operators.mergeMap(function (list) { return list\n                .filter(function (item) { return item.hasMenu(); })\n                .map(function (item) { return item.getMenuTrigger().opened.pipe(operators.mapTo(item), operators.takeUntil(exitCondition)); }); }), operators.mergeAll(), operators.switchMap(function (item) {\n                _this._openItem = item;\n                return item.getMenuTrigger().closed;\n            }), operators.takeUntil(this.closed))\n                .subscribe(function () { return (_this._openItem = undefined); });\n        };\n        /** Return true if this menu has been configured in a horizontal orientation. */\n        CdkMenu.prototype._isHorizontal = function () {\n            return this.orientation === 'horizontal';\n        };\n        CdkMenu.prototype.ngOnDestroy = function () {\n            this._emitClosedEvent();\n        };\n        /** Emit and complete the closed event emitter */\n        CdkMenu.prototype._emitClosedEvent = function () {\n            this.closed.next();\n            this.closed.complete();\n        };\n        return CdkMenu;\n    }(CdkMenuGroup));\n    CdkMenu.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenu]',\n                    exportAs: 'cdkMenu',\n                    host: {\n                        '(keydown)': '_handleKeyEvent($event)',\n                        'role': 'menu',\n                        '[attr.aria-orientation]': 'orientation',\n                    },\n                    providers: [\n                        { provide: CdkMenuGroup, useExisting: CdkMenu },\n                        { provide: CDK_MENU, useExisting: CdkMenu },\n                    ],\n                },] }\n    ];\n    CdkMenu.ctorParameters = function () { return [\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n        { type: CdkMenuPanel, decorators: [{ type: core.Optional }] }\n    ]; };\n    CdkMenu.propDecorators = {\n        orientation: [{ type: core.Input, args: ['cdkMenuOrientation',] }],\n        closed: [{ type: core.Output }],\n        _nestedGroups: [{ type: core.ContentChildren, args: [CdkMenuGroup, { descendants: true },] }],\n        _allItems: [{ type: core.ContentChildren, args: [CdkMenuItem, { descendants: true },] }],\n        _explicitPanel: [{ type: core.Input, args: ['cdkMenuPanel',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * MenuStack allows subscribers to listen for close events (when a MenuStackItem is popped off\n     * of the stack) in order to perform closing actions. Upon the MenuStack being empty it emits\n     * from the `empty` observable specifying the next focus action which the listener should perform\n     * as requested by the closer.\n     */\n    var MenuStack = /** @class */ (function () {\n        function MenuStack() {\n            /** All MenuStackItems tracked by this MenuStack. */\n            this._elements = [];\n            /** Emits the element which was popped off of the stack when requested by a closer. */\n            this._close = new rxjs.Subject();\n            /** Emits once the MenuStack has become empty after popping off elements. */\n            this._empty = new rxjs.Subject();\n            /** Observable which emits the MenuStackItem which has been requested to close. */\n            this.close = this._close;\n            /**\n             * Observable which emits when the MenuStack is empty after popping off the last element. It\n             * emits a FocusNext event which specifies the action the closer has requested the listener\n             * perform.\n             */\n            this.empty = this._empty;\n        }\n        /** @param menu the MenuStackItem to put on the stack. */\n        MenuStack.prototype.push = function (menu) {\n            this._elements.push(menu);\n        };\n        /**\n         *  Pop off the top most MenuStackItem and emit it on the close observable.\n         *  @param focusNext the event to emit on the `empty` observable if the method call resulted in an\n         *  empty stack. Does not emit if the stack was initially empty.\n         */\n        MenuStack.prototype.closeLatest = function (focusNext) {\n            var menuStackItem = this._elements.pop();\n            if (menuStackItem) {\n                this._close.next(menuStackItem);\n                if (this._elements.length === 0) {\n                    this._empty.next(focusNext);\n                }\n            }\n        };\n        /**\n         * Pop off all MenuStackItems and emit each one on the `close` observable one by one.\n         * @param focusNext the event to emit on the `empty` observable once the stack is emptied. Does\n         * not emit if the stack was initially empty.\n         */\n        MenuStack.prototype.closeAll = function (focusNext) {\n            if (this._elements.length) {\n                while (this._elements.length) {\n                    var menuStackItem = this._elements.pop();\n                    if (menuStackItem) {\n                        this._close.next(menuStackItem);\n                    }\n                }\n                this._empty.next(focusNext);\n            }\n        };\n        return MenuStack;\n    }());\n\n    /**\n     * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n     * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n     * this directive is applied to should contain components marked with CdkMenuItem.\n     *\n     */\n    var CdkMenuBar = /** @class */ (function (_super) {\n        __extends(CdkMenuBar, _super);\n        function CdkMenuBar(_menuStack, _dir) {\n            var _this = _super.call(this) || this;\n            _this._menuStack = _menuStack;\n            _this._dir = _dir;\n            /**\n             * Sets the aria-orientation attribute and determines where menus will be opened.\n             * Does not affect styling/layout.\n             */\n            _this.orientation = 'horizontal';\n            /** Emits when the MenuBar is destroyed. */\n            _this._destroyed = new rxjs.Subject();\n            return _this;\n        }\n        CdkMenuBar.prototype.ngAfterContentInit = function () {\n            _super.prototype.ngAfterContentInit.call(this);\n            this._setKeyManager();\n            this._subscribeToMenuOpen();\n            this._subscribeToMenuStack();\n        };\n        /** Place focus on the first MenuItem in the menu and set the focus origin. */\n        CdkMenuBar.prototype.focusFirstItem = function (focusOrigin) {\n            if (focusOrigin === void 0) { focusOrigin = 'program'; }\n            this._keyManager.setFocusOrigin(focusOrigin);\n            this._keyManager.setFirstItemActive();\n        };\n        /** Place focus on the last MenuItem in the menu and set the focus origin. */\n        CdkMenuBar.prototype.focusLastItem = function (focusOrigin) {\n            if (focusOrigin === void 0) { focusOrigin = 'program'; }\n            this._keyManager.setFocusOrigin(focusOrigin);\n            this._keyManager.setLastItemActive();\n        };\n        /**\n         * Handle keyboard events, specifically changing the focused element and/or toggling the active\n         * items menu.\n         * @param event the KeyboardEvent to handle.\n         */\n        CdkMenuBar.prototype._handleKeyEvent = function (event) {\n            var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n            var keyManager = this._keyManager;\n            switch (event.keyCode) {\n                case keycodes.UP_ARROW:\n                case keycodes.DOWN_ARROW:\n                case keycodes.LEFT_ARROW:\n                case keycodes.RIGHT_ARROW:\n                    var horizontalArrows = event.keyCode === keycodes.LEFT_ARROW || event.keyCode === keycodes.RIGHT_ARROW;\n                    // For a horizontal menu if the left/right keys were clicked, or a vertical menu if the\n                    // up/down keys were clicked: if the current menu is open, close it then focus and open the\n                    // next  menu.\n                    if ((this._isHorizontal() && horizontalArrows) ||\n                        (!this._isHorizontal() && !horizontalArrows)) {\n                        event.preventDefault();\n                        var prevIsOpen = (_a = keyManager.activeItem) === null || _a === void 0 ? void 0 : _a.isMenuOpen();\n                        (_c = (_b = keyManager.activeItem) === null || _b === void 0 ? void 0 : _b.getMenuTrigger()) === null || _c === void 0 ? void 0 : _c.closeMenu();\n                        keyManager.setFocusOrigin('keyboard');\n                        keyManager.onKeydown(event);\n                        if (prevIsOpen) {\n                            (_e = (_d = keyManager.activeItem) === null || _d === void 0 ? void 0 : _d.getMenuTrigger()) === null || _e === void 0 ? void 0 : _e.openMenu();\n                        }\n                    }\n                    break;\n                case keycodes.ESCAPE:\n                    event.preventDefault();\n                    (_g = (_f = keyManager.activeItem) === null || _f === void 0 ? void 0 : _f.getMenuTrigger()) === null || _g === void 0 ? void 0 : _g.closeMenu();\n                    break;\n                case keycodes.TAB:\n                    (_j = (_h = keyManager.activeItem) === null || _h === void 0 ? void 0 : _h.getMenuTrigger()) === null || _j === void 0 ? void 0 : _j.closeMenu();\n                    break;\n                default:\n                    keyManager.onKeydown(event);\n            }\n        };\n        /** Setup the FocusKeyManager with the correct orientation for the menu bar. */\n        CdkMenuBar.prototype._setKeyManager = function () {\n            var _a;\n            this._keyManager = new a11y.FocusKeyManager(this._allItems)\n                .withWrap()\n                .withTypeAhead()\n                .withHomeAndEnd();\n            if (this._isHorizontal()) {\n                this._keyManager.withHorizontalOrientation(((_a = this._dir) === null || _a === void 0 ? void 0 : _a.value) || 'ltr');\n            }\n            else {\n                this._keyManager.withVerticalOrientation();\n            }\n        };\n        /** Subscribe to the MenuStack close and empty observables. */\n        CdkMenuBar.prototype._subscribeToMenuStack = function () {\n            var _this = this;\n            this._menuStack.close\n                .pipe(operators.takeUntil(this._destroyed))\n                .subscribe(function (item) { return _this._closeOpenMenu(item); });\n            this._menuStack.empty\n                .pipe(operators.takeUntil(this._destroyed))\n                .subscribe(function (event) { return _this._toggleOpenMenu(event); });\n        };\n        /**\n         * Close the open menu if the current active item opened the requested MenuStackItem.\n         * @param item the MenuStackItem requested to be closed.\n         */\n        CdkMenuBar.prototype._closeOpenMenu = function (menu) {\n            var _a, _b;\n            var trigger = this._openItem;\n            var keyManager = this._keyManager;\n            if (menu === ((_a = trigger === null || trigger === void 0 ? void 0 : trigger.getMenuTrigger()) === null || _a === void 0 ? void 0 : _a.getMenu())) {\n                (_b = trigger.getMenuTrigger()) === null || _b === void 0 ? void 0 : _b.closeMenu();\n                keyManager.setFocusOrigin('keyboard');\n                keyManager.setActiveItem(trigger);\n            }\n        };\n        /**\n         * Set focus to either the current, previous or next item based on the FocusNext event, then\n         * open the previous or next item.\n         */\n        CdkMenuBar.prototype._toggleOpenMenu = function (event) {\n            var _a, _b, _c, _d;\n            var keyManager = this._keyManager;\n            switch (event) {\n                case 0 /* nextItem */:\n                    keyManager.setFocusOrigin('keyboard');\n                    keyManager.setNextItemActive();\n                    (_b = (_a = keyManager.activeItem) === null || _a === void 0 ? void 0 : _a.getMenuTrigger()) === null || _b === void 0 ? void 0 : _b.openMenu();\n                    break;\n                case 1 /* previousItem */:\n                    keyManager.setFocusOrigin('keyboard');\n                    keyManager.setPreviousItemActive();\n                    (_d = (_c = keyManager.activeItem) === null || _c === void 0 ? void 0 : _c.getMenuTrigger()) === null || _d === void 0 ? void 0 : _d.openMenu();\n                    break;\n                case 2 /* currentItem */:\n                    if (keyManager.activeItem) {\n                        keyManager.setFocusOrigin('keyboard');\n                        keyManager.setActiveItem(keyManager.activeItem);\n                    }\n                    break;\n            }\n        };\n        /**\n         * @return true if the menu bar is configured to be horizontal.\n         */\n        CdkMenuBar.prototype._isHorizontal = function () {\n            return this.orientation === 'horizontal';\n        };\n        /**\n         * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n         * and stop tracking it when the menu is closed.\n         */\n        CdkMenuBar.prototype._subscribeToMenuOpen = function () {\n            var _this = this;\n            var exitCondition = rxjs.merge(this._allItems.changes, this._destroyed);\n            this._allItems.changes\n                .pipe(operators.startWith(this._allItems), operators.mergeMap(function (list) { return list\n                .filter(function (item) { return item.hasMenu(); })\n                .map(function (item) { return item.getMenuTrigger().opened.pipe(operators.mapTo(item), operators.takeUntil(exitCondition)); }); }), operators.mergeAll(), operators.switchMap(function (item) {\n                _this._openItem = item;\n                return item.getMenuTrigger().closed;\n            }), operators.takeUntil(this._destroyed))\n                .subscribe(function () { return (_this._openItem = undefined); });\n        };\n        CdkMenuBar.prototype.ngOnDestroy = function () {\n            _super.prototype.ngOnDestroy.call(this);\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        return CdkMenuBar;\n    }(CdkMenuGroup));\n    CdkMenuBar.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuBar]',\n                    exportAs: 'cdkMenuBar',\n                    host: {\n                        '(keydown)': '_handleKeyEvent($event)',\n                        '(focus)': 'focusFirstItem()',\n                        'role': 'menubar',\n                        'tabindex': '0',\n                        '[attr.aria-orientation]': 'orientation',\n                    },\n                    providers: [\n                        { provide: CdkMenuGroup, useExisting: CdkMenuBar },\n                        { provide: CDK_MENU, useExisting: CdkMenuBar },\n                        { provide: MenuStack, useClass: MenuStack },\n                    ],\n                },] }\n    ];\n    CdkMenuBar.ctorParameters = function () { return [\n        { type: MenuStack },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] }\n    ]; };\n    CdkMenuBar.propDecorators = {\n        orientation: [{ type: core.Input, args: ['cdkMenuBarOrientation',] }],\n        _allItems: [{ type: core.ContentChildren, args: [CdkMenuItem, { descendants: true },] }]\n    };\n\n    /**\n     * A directive providing behavior for the the \"menuitemradio\" ARIA role, which behaves similarly to\n     * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n     * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n     */\n    var CdkMenuItemRadio = /** @class */ (function (_super) {\n        __extends(CdkMenuItemRadio, _super);\n        function CdkMenuItemRadio(_selectionDispatcher, element, parentMenu, dir, \n        /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n        menuTrigger) {\n            var _this = _super.call(this, element, parentMenu, dir, menuTrigger) || this;\n            _this._selectionDispatcher = _selectionDispatcher;\n            _this._registerDispatcherListener();\n            return _this;\n        }\n        /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n        CdkMenuItemRadio.prototype._registerDispatcherListener = function () {\n            var _this = this;\n            this._removeDispatcherListener = this._selectionDispatcher.listen(function (id, name) { return (_this.checked = _this.id === id && _this.name === name); });\n        };\n        /** Toggles the checked state of the radio-button. */\n        CdkMenuItemRadio.prototype.trigger = function () {\n            _super.prototype.trigger.call(this);\n            if (!this.disabled) {\n                this._selectionDispatcher.notify(this.id, this.name);\n            }\n        };\n        CdkMenuItemRadio.prototype.ngOnDestroy = function () {\n            this._removeDispatcherListener();\n        };\n        return CdkMenuItemRadio;\n    }(CdkMenuItemSelectable));\n    CdkMenuItemRadio.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuItemRadio]',\n                    exportAs: 'cdkMenuItemRadio',\n                    host: {\n                        '(click)': 'trigger()',\n                        'type': 'button',\n                        'role': 'menuitemradio',\n                        '[attr.aria-checked]': 'checked || null',\n                        '[attr.aria-disabled]': 'disabled || null',\n                    },\n                    providers: [\n                        { provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio },\n                        { provide: CdkMenuItem, useExisting: CdkMenuItemSelectable },\n                    ],\n                },] }\n    ];\n    CdkMenuItemRadio.ctorParameters = function () { return [\n        { type: collections.UniqueSelectionDispatcher },\n        { type: core.ElementRef },\n        { type: undefined, decorators: [{ type: core.Inject, args: [CDK_MENU,] }] },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] },\n        { type: CdkMenuItemTrigger, decorators: [{ type: core.Self }, { type: core.Optional }] }\n    ]; };\n\n    /**\n     * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n     * conventional checkbox.\n     */\n    var CdkMenuItemCheckbox = /** @class */ (function (_super) {\n        __extends(CdkMenuItemCheckbox, _super);\n        function CdkMenuItemCheckbox() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        CdkMenuItemCheckbox.prototype.trigger = function () {\n            _super.prototype.trigger.call(this);\n            if (!this.disabled) {\n                this.checked = !this.checked;\n            }\n        };\n        return CdkMenuItemCheckbox;\n    }(CdkMenuItemSelectable));\n    CdkMenuItemCheckbox.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkMenuItemCheckbox]',\n                    exportAs: 'cdkMenuItemCheckbox',\n                    host: {\n                        '(click)': 'trigger()',\n                        'type': 'button',\n                        'role': 'menuitemcheckbox',\n                        '[attr.aria-checked]': 'checked || null',\n                        '[attr.aria-disabled]': 'disabled || null',\n                    },\n                    providers: [\n                        { provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox },\n                        { provide: CdkMenuItem, useExisting: CdkMenuItemSelectable },\n                    ],\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EXPORTED_DECLARATIONS = [\n        CdkMenuBar,\n        CdkMenu,\n        CdkMenuPanel,\n        CdkMenuItem,\n        CdkMenuItemRadio,\n        CdkMenuItemCheckbox,\n        CdkMenuItemTrigger,\n        CdkMenuGroup,\n    ];\n    var CdkMenuModule = /** @class */ (function () {\n        function CdkMenuModule() {\n        }\n        return CdkMenuModule;\n    }());\n    CdkMenuModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [overlay.OverlayModule],\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkMenu = CdkMenu;\n    exports.CdkMenuBar = CdkMenuBar;\n    exports.CdkMenuGroup = CdkMenuGroup;\n    exports.CdkMenuItem = CdkMenuItem;\n    exports.CdkMenuItemCheckbox = CdkMenuItemCheckbox;\n    exports.CdkMenuItemRadio = CdkMenuItemRadio;\n    exports.CdkMenuItemTrigger = CdkMenuItemTrigger;\n    exports.CdkMenuModule = CdkMenuModule;\n    exports.CdkMenuPanel = CdkMenuPanel;\n    exports.ɵangular_material_src_cdk_experimental_menu_menu_a = CdkMenuItemSelectable;\n    exports.ɵangular_material_src_cdk_experimental_menu_menu_b = CDK_MENU;\n    exports.ɵangular_material_src_cdk_experimental_menu_menu_d = MenuStack;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-menu.umd.js.map\n"]}