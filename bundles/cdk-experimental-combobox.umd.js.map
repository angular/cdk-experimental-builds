{"version":3,"file":"cdk-experimental-combobox.umd.js","sources":["../../../../../src/cdk-experimental/combobox/combobox.ts","../../../../../src/cdk-experimental/combobox/combobox-panel.ts","../../../../../src/cdk-experimental/combobox/combobox-popup.ts","../../../../../src/cdk-experimental/combobox/combobox-module.ts","../../../../../src/cdk-experimental/combobox/public-api.ts","../../../../../src/cdk-experimental/combobox/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nexport type OpenAction = 'focus' | 'click' | 'downKey' | 'toggle';\nexport type OpenActionInput = OpenAction | OpenAction[] | string | null | undefined;\n\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output, ViewContainerRef\n} from '@angular/core';\nimport {CdkComboboxPanel, AriaHasPopupValue} from './combobox-panel';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef\n} from '@angular/cdk/overlay';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty, coerceArray} from '@angular/cdk/coercion';\nimport {DOWN_ARROW, ENTER, ESCAPE, TAB} from '@angular/cdk/keycodes';\n\nconst allowedOpenActions = ['focus', 'click', 'downKey', 'toggle'];\n\n@Directive({\n  selector: '[cdkCombobox]',\n  exportAs: 'cdkCombobox',\n  host: {\n    'role': 'combobox',\n    'class': 'cdk-combobox',\n    '(click)': '_handleInteractions(\"click\")',\n    '(focus)': '_handleInteractions(\"focus\")',\n    '(keydown)': '_keydown($event)',\n    '(document:click)': '_attemptClose($event)',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-owns]': 'contentId',\n    '[attr.aria-haspopup]': 'contentType',\n    '[attr.aria-expanded]': 'isOpen()',\n    '[attr.tabindex]': '_getTabIndex()'\n  }\n})\nexport class CdkCombobox<T = unknown> implements OnDestroy, AfterContentInit {\n  @Input('cdkComboboxTriggerFor')\n  get panel(): CdkComboboxPanel<T> | undefined { return this._panel; }\n  set panel(panel: CdkComboboxPanel<T> | undefined) { this._panel = panel; }\n  private _panel: CdkComboboxPanel<T> | undefined;\n\n  @Input()\n  value: T | T[];\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  @Input()\n  get openActions(): OpenAction[] {\n    return this._openActions;\n  }\n  set openActions(action: OpenAction[]) {\n    this._openActions = this._coerceOpenActionProperty(action);\n  }\n  private _openActions: OpenAction[] = ['click'];\n\n  /** Whether the textContent is automatically updated upon change of the combobox value. */\n  @Input()\n  get autoSetText(): boolean { return this._autoSetText; }\n  set autoSetText(value: boolean) { this._autoSetText = coerceBooleanProperty(value); }\n  private _autoSetText: boolean = true;\n\n  @Output('comboboxPanelOpened') readonly opened: EventEmitter<void> = new EventEmitter<void>();\n  @Output('comboboxPanelClosed') readonly closed: EventEmitter<void> = new EventEmitter<void>();\n  @Output('panelValueChanged') readonly panelValueChanged: EventEmitter<T[]>\n      = new EventEmitter<T[]>();\n\n  private _overlayRef: OverlayRef;\n  private _panelContent: TemplatePortal;\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _overlay: Overlay,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    @Optional() private readonly _directionality?: Directionality\n  ) {}\n\n  ngAfterContentInit() {\n    this._panel?.valueUpdated.subscribe(data => {\n      this._setComboboxValue(data);\n      this.close();\n    });\n\n    this._panel?.contentIdUpdated.subscribe(id => {\n      this.contentId = id;\n    });\n\n    this._panel?.contentTypeUpdated.subscribe(type => {\n      this.contentType = type;\n    });\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n    }\n\n    this.opened.complete();\n    this.closed.complete();\n    this.panelValueChanged.complete();\n  }\n\n  _keydown(event: KeyboardEvent) {\n    const {keyCode} = event;\n\n    if (keyCode === DOWN_ARROW) {\n      if (this.isOpen()) {\n        this._panel?.focusContent();\n      } else if (this._openActions.indexOf('downKey') !== -1) {\n        this.open();\n      }\n    } else if (keyCode === ENTER) {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n\n    } else if (keyCode === ESCAPE) {\n      event.preventDefault();\n      this.close();\n    } else if (keyCode === TAB) {\n      this.close();\n    }\n  }\n\n  /** Handles click or focus interactions. */\n  _handleInteractions(interaction: OpenAction) {\n    if (interaction === 'click') {\n      if (this._openActions.indexOf('toggle') !== -1) {\n        this.toggle();\n      } else if (this._openActions.indexOf('click') !== -1) {\n        this.open();\n      }\n    } else if (interaction === 'focus') {\n      if (this._openActions.indexOf('focus') !== -1) {\n        this.open();\n      }\n    }\n  }\n\n  /** Given a click in the document, determines if the click was inside a combobox. */\n  _attemptClose(event: MouseEvent) {\n    if (this.isOpen()) {\n      let target = event.composedPath ? event.composedPath()[0] : event.target;\n      while (target instanceof Element) {\n        if (target.className.indexOf('cdk-combobox') !== -1) {\n          return;\n        }\n        target = target.parentElement;\n      }\n    }\n\n    this.close();\n  }\n\n  /** Toggles the open state of the panel. */\n  toggle() {\n    if (this.hasPanel()) {\n      this.isOpen() ? this.close() : this.open();\n    }\n  }\n\n  /** If the combobox is closed and not disabled, opens the panel. */\n  open() {\n    if (!this.isOpen() && !this.disabled) {\n      this.opened.next();\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPanelContent());\n      if (!this._isTextTrigger()) {\n        this._panel?.focusContent();\n      }\n    }\n  }\n\n  /** If the combobox is open and not disabled, closes the panel. */\n  close() {\n    if (this.isOpen() && !this.disabled) {\n      this.closed.next();\n      this._overlayRef.detach();\n    }\n  }\n\n  /** Returns true if panel is currently opened. */\n  isOpen(): boolean {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /** Returns true if combobox has a child panel. */\n  hasPanel(): boolean {\n    return !!this.panel;\n  }\n\n  _getTabIndex(): string | null {\n    return this.disabled ? null : '0';\n  }\n\n  private _setComboboxValue(value: T | T[]) {\n\n    const valueChanged = (this.value !== value);\n    this.value = value;\n\n    if (valueChanged) {\n      this.panelValueChanged.emit(coerceArray(value));\n      if (this._autoSetText) {\n        this._setTextContent(value);\n      }\n    }\n  }\n\n  private _setTextContent(content: T | T[]) {\n    const contentArray = coerceArray(content);\n    this._elementRef.nativeElement.textContent = contentArray.join(' ');\n  }\n\n  private _isTextTrigger() {\n    // TODO: Should check if the trigger is contenteditable.\n    const tagName = this._elementRef.nativeElement.tagName.toLowerCase();\n    return tagName === 'input' || tagName === 'textarea' ? true : false;\n  }\n\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n        .position()\n        .flexibleConnectedTo(this._elementRef)\n        .withPositions(this._getOverlayPositions());\n  }\n\n  private _getOverlayPositions(): ConnectedPosition[] {\n    return [\n      {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  private _getPanelContent() {\n    const hasPanelChanged = this._panel?._templateRef !== this._panelContent?.templateRef;\n    if (this._panel && (!this._panel || hasPanelChanged)) {\n      this._panelContent = new TemplatePortal(this._panel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  private _coerceOpenActionProperty(input: string | OpenAction[]): OpenAction[] {\n    let actions = typeof input === 'string' ? input.trim().split(/[ ,]+/) : input;\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) &&\n      actions.some(a => allowedOpenActions.indexOf(a) === -1)) {\n      throw Error(`${input} is not a support open action for CdkCombobox`);\n    }\n    return actions as OpenAction[];\n  }\n\n  static ngAcceptInputType_openActions: OpenActionInput;\n  static ngAcceptInputType_autoSetText: OpenActionInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type AriaHasPopupValue = 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Directive({\n  host: {\n    'class': 'cdk-combobox-panel'\n  },\n  selector: 'ng-template[cdkComboboxPanel]',\n  exportAs: 'cdkComboboxPanel',\n})\nexport class CdkComboboxPanel<T = unknown> {\n\n  valueUpdated: Subject<T | T[]> = new Subject<T | T[]>();\n  contentIdUpdated: Subject<string> = new Subject<string>();\n  contentTypeUpdated: Subject<AriaHasPopupValue> = new Subject<AriaHasPopupValue>();\n\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(\n    readonly _templateRef: TemplateRef<unknown>\n  ) {}\n\n  /** Tells the parent combobox to close the panel and sends back the content value. */\n  closePanel(data?: T | T[]) {\n    this.valueUpdated.next(data);\n  }\n\n  // TODO: instead of using a focus function, potentially use cdk/a11y focus trapping\n  focusContent() {\n    // TODO: Use an injected document here\n    document.getElementById(this.contentId)?.focus();\n  }\n\n  /** Registers the content's id and the content type with the panel. */\n  _registerContent(contentId: string, contentType: AriaHasPopupValue) {\n    // If content has already been registered, no further contentIds are registered.\n    if (this.contentType && this.contentType !== contentType) {\n      return;\n    }\n\n    this.contentId = contentId;\n    if (contentType !== 'listbox' && contentType !== 'dialog') {\n      throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n    }\n    this.contentType = contentType;\n\n    this.contentIdUpdated.next(this.contentId);\n    this.contentTypeUpdated.next(this.contentType);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnInit,\n  Optional} from '@angular/core';\nimport {AriaHasPopupValue, CdkComboboxPanel} from './combobox-panel';\n\nexport const PANEL = new InjectionToken<CdkComboboxPanel>('CdkComboboxPanel');\n\nlet nextId = 0;\n\n@Directive({\n  selector: '[cdkComboboxPopup]',\n  exportAs: 'cdkComboboxPopup',\n  host: {\n    'class': 'cdk-combobox-popup',\n    '[attr.role]': 'role',\n    '[id]': 'id',\n    'tabindex': '-1',\n    '(focus)': 'focusFirstElement()'\n  }\n})\nexport class CdkComboboxPopup<T = unknown> implements OnInit {\n  @Input()\n  get role(): AriaHasPopupValue {\n    return this._role;\n  }\n  set role(value: AriaHasPopupValue) {\n    this._role = value;\n  }\n  private _role: AriaHasPopupValue = 'dialog';\n\n  @Input()\n  get firstFocus(): HTMLElement {\n    return this._firstFocusElement;\n  }\n  set firstFocus(id: HTMLElement) {\n    this._firstFocusElement = id;\n  }\n  private _firstFocusElement: HTMLElement;\n\n  @Input() id = `cdk-combobox-popup-${nextId++}`;\n\n  @Input('parentPanel') private readonly _explicitPanel: CdkComboboxPanel;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(PANEL) readonly _parentPanel?: CdkComboboxPanel<T>,\n  ) { }\n\n  ngOnInit() {\n    this.registerWithPanel();\n  }\n\n  registerWithPanel(): void {\n    if (this._parentPanel === null || this._parentPanel === undefined) {\n      this._explicitPanel._registerContent(this.id, this._role);\n    } else {\n      this._parentPanel._registerContent(this.id, this._role);\n    }\n  }\n\n  focusFirstElement() {\n    if (this._firstFocusElement) {\n      this._firstFocusElement.focus();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkCombobox} from './combobox';\nimport {CdkComboboxPanel} from './combobox-panel';\nimport {CdkComboboxPopup} from './combobox-popup';\n\nconst EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPanel, CdkComboboxPopup];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkComboboxModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './combobox-module';\nexport * from './combobox';\nexport * from './combobox-panel';\nexport * from './combobox-popup';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","coerceBooleanProperty","DOWN_ARROW","ENTER","ESCAPE","TAB","coerceArray","OverlayConfig","TemplatePortal","Directive","ElementRef","Overlay","ViewContainerRef","Directionality","Optional","Input","Output","Subject","TemplateRef","InjectionToken","Inject","NgModule","OverlayModule"],"mappings":"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"}