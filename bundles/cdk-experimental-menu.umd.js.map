{"version":3,"file":"cdk-experimental-menu.umd.js","sources":["../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessable keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n})\nexport class CdkMenu {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  /** Emits the activated element when checkbox or radiobutton state changed  */\n  @Output() change: EventEmitter<CdkMenuItem>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessable keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n})\nexport class CdkMenuBar {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenu} from './menu';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu: CdkMenu;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, Input, EventEmitter} from '@angular/core';\nimport {CdkMenuPanel} from './menu-panel';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\n\n/**\n * Directive which provides behavior for an element which when clicked:\n *  If located in a CdkMenuBar:\n *    - opens up an attached submenu\n *\n *  If located in a CdkMenu/CdkMenuGroup, one of:\n *    - executes the user defined click handler\n *    - toggles its checkbox state\n *    - toggles its radio button state (in relation to siblings)\n *\n * If it's in a CdkMenu and it triggers a sub-menu, hovering over the\n * CdkMenuItem will open the submenu.\n *\n */\n@Directive({\n  selector: '[cdkMenuItem], [cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    'type': 'button',\n    '[attr.role]': 'role',\n    '[attr.aria-checked]': '_getAriaChecked()',\n  },\n})\nexport class CdkMenuItem {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor') _menuPanel: CdkMenuPanel;\n\n  /** ARIA role for the menu item. */\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n  /** Whether the checkbox or radiobutton is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** Emits when the attached submenu is opened */\n  @Output() opened: EventEmitter<void> = new EventEmitter();\n\n  /** get the aria-checked value only if element is `menuitemradio` or `menuitemcheckbox` */\n  _getAriaChecked(): boolean | null {\n    if (this.role === 'menuitem') {\n      return null;\n    }\n    return this.checked;\n  }\n\n  /** Whether the menu item opens a menu */\n  hasSubmenu() {\n    return !!this._menuPanel;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n  },\n})\nexport class CdkMenuGroup {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() change: EventEmitter<CdkMenuItem> = new EventEmitter();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\n\nconst EXPORTED_DECLARATIONS = [CdkMenuBar, CdkMenu, CdkMenuPanel, CdkMenuItem, CdkMenuGroup];\n@NgModule({\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-panel';\nexport * from './menu-group';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","Directive","Input","Output","coerceBooleanProperty","NgModule"],"mappings":";;;;;;IAAA;;;;;;;AAQA,IAGA;;;;;;;AAOA;QAAA;;;;;YAa+B,gBAAW,GAA8B,UAAU,CAAC;;YAG9D,WAAM,GAAoD,IAAIA,iBAAY,EAAE,CAAC;SAIjG;;oBApBAC,cAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,SAAS;wBACnB,IAAI,EAAE;4BACJ,MAAM,EAAE,SAAS;4BACjB,yBAAyB,EAAE,aAAa;yBACzC;qBACF;;;kCAMEC,UAAK,SAAC,oBAAoB;6BAG1BC,WAAM;6BAGNA,WAAM;;QACT,cAAC;KApBD;;IClBA;;;;;;;AAQA,IAEA;;;;;;AAMA;QAAA;;;;;YAakC,gBAAW,GAA8B,YAAY,CAAC;SACvF;;oBAdAF,cAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,YAAY;wBACtB,IAAI,EAAE;4BACJ,MAAM,EAAE,SAAS;4BACjB,yBAAyB,EAAE,aAAa;yBACzC;qBACF;;;kCAMEC,UAAK,SAAC,uBAAuB;;QAChC,iBAAC;KAdD;;IChBA;;;;;;;AAQA,IAGA;;;;AAIA;QAAA;SAIC;;oBAJAD,cAAS,SAAC,EAAC,QAAQ,EAAE,2BAA2B,EAAE,QAAQ,EAAE,cAAc,EAAC;;QAI5E,mBAAC;KAJD;;ICfA;;;;;;;AAQA,IAIA;;;;;;;;;;;;;;AAcA;QAAA;;YAcW,SAAI,GAAsD,UAAU,CAAC;YAUtE,aAAQ,GAAG,KAAK,CAAC;;YAGf,WAAM,GAAuB,IAAID,iBAAY,EAAE,CAAC;SAgB3D;QA1BC,sBACI,gCAAO;;iBADX;gBAEE,OAAO,IAAI,CAAC,QAAQ,CAAC;aACtB;iBACD,UAAY,KAAc;gBACxB,IAAI,CAAC,QAAQ,GAAGI,8BAAqB,CAAC,KAAK,CAAC,CAAC;aAC9C;;;WAHA;;QAUD,qCAAe,GAAf;YACE,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC5B,OAAO,IAAI,CAAC;aACb;YACD,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;;QAGD,gCAAU,GAAV;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;SAC1B;;oBAxCFH,cAAS,SAAC;wBACT,QAAQ,EAAE,oCAAoC;wBAC9C,QAAQ,EAAE,aAAa;wBACvB,IAAI,EAAE;4BACJ,MAAM,EAAE,QAAQ;4BAChB,aAAa,EAAE,MAAM;4BACrB,qBAAqB,EAAE,mBAAmB;yBAC3C;qBACF;;;iCAGEC,UAAK,SAAC,mBAAmB;2BAGzBA,UAAK;8BAGLA,UAAK;6BAULC,WAAM;;QAgBT,kBAAC;KA3CD;;IC1BA;;;;;;;AAQA,IAGA;;;;AAIA;QAAA;;YASY,WAAM,GAA8B,IAAIH,iBAAY,EAAE,CAAC;SAClE;;oBAVAC,cAAS,SAAC;wBACT,QAAQ,EAAE,gBAAgB;wBAC1B,QAAQ,EAAE,cAAc;wBACxB,IAAI,EAAE;4BACJ,MAAM,EAAE,OAAO;yBAChB;qBACF;;;6BAGEE,WAAM;;QACT,mBAAC;KAVD;;ICfA;;;;;;;AAQA,IAOA,IAAM,qBAAqB,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAC7F;QAAA;SAI6B;;oBAJ5BE,aAAQ,SAAC;wBACR,OAAO,EAAE,qBAAqB;wBAC9B,YAAY,EAAE,qBAAqB;qBACpC;;QAC2B,oBAAC;KAJ7B;;IChBA;;;;;;OAMG;;ICNH;;OAEG;;;;;;;;;;;;;;;;;"}