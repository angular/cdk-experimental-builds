{"version":3,"sources":["src/cdk-experimental/cdk-experimental-combobox.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","combobox","core","cdk","overlay","portal","bidi","coercion","rxjs","this","CdkCombobox","_elementRef","_overlay","_viewContainerRef","_directionality","_disabled","_openActions","opened","EventEmitter","closed","panelValueChanged","contentId","Object","defineProperty","prototype","get","_panel","set","panel","enumerable","configurable","value","coerceBooleanProperty","action","_coerceOpenActionProperty","ngAfterContentInit","_a","_b","_c","_this","valueUpdated","subscribe","data","_setComboboxValue","close","contentIdUpdated","id","contentTypeUpdated","type","contentType","ngOnDestroy","complete","toggle","hasPanel","isOpen","open","disabled","next","_overlayRef","create","_getOverlayConfig","attach","_getPanelContent","detach","hasAttached","valueChanged","emit","_setTextContent","content","nativeElement","textContent","OverlayConfig","positionStrategy","_getOverlayPositionStrategy","scrollStrategy","scrollStrategies","block","direction","position","flexibleConnectedTo","withPositions","_getOverlayPositions","originX","originY","overlayX","overlayY","hasPanelChanged","_templateRef","_panelContent","templateRef","TemplatePortal","input","actions","push","decorators","Directive","args","selector","exportAs","host","role","(click)","[attr.aria-disabled]","[attr.aria-controls]","[attr.aria-haspopup]","ctorParameters","ElementRef","Overlay","ViewContainerRef","Directionality","Optional","propDecorators","Input","openActions","Output","CdkComboboxPanel","Subject","closePanel","_registerContent","Error","TemplateRef","CdkComboboxModule","EXPORTED_DECLARATIONS","NgModule","imports","OverlayModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/overlay'), require('@angular/cdk/portal'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/combobox', ['exports', '@angular/core', '@angular/cdk/overlay', '@angular/cdk/portal', '@angular/cdk/bidi', '@angular/cdk/coercion', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.combobox = {}), global.ng.core, global.ng.cdk.overlay, global.ng.cdk.portal, global.ng.cdk.bidi, global.ng.cdk.coercion, global.rxjs));\n}(this, (function (exports, core, overlay, portal, bidi, coercion, rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkCombobox = /** @class */ (function () {\n        function CdkCombobox(_elementRef, _overlay, _viewContainerRef, _directionality) {\n            this._elementRef = _elementRef;\n            this._overlay = _overlay;\n            this._viewContainerRef = _viewContainerRef;\n            this._directionality = _directionality;\n            this._disabled = false;\n            this._openActions = ['click'];\n            this.opened = new core.EventEmitter();\n            this.closed = new core.EventEmitter();\n            this.panelValueChanged = new core.EventEmitter();\n            this.contentId = '';\n        }\n        Object.defineProperty(CdkCombobox.prototype, \"panel\", {\n            get: function () { return this._panel; },\n            set: function (panel) { this._panel = panel; },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkCombobox.prototype, \"disabled\", {\n            get: function () { return this._disabled; },\n            set: function (value) { this._disabled = coercion.coerceBooleanProperty(value); },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkCombobox.prototype, \"openActions\", {\n            get: function () {\n                return this._openActions;\n            },\n            set: function (action) {\n                this._openActions = this._coerceOpenActionProperty(action);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkCombobox.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            var _a, _b, _c;\n            (_a = this._panel) === null || _a === void 0 ? void 0 : _a.valueUpdated.subscribe(function (data) {\n                _this._setComboboxValue(data);\n                _this.close();\n            });\n            (_b = this._panel) === null || _b === void 0 ? void 0 : _b.contentIdUpdated.subscribe(function (id) {\n                _this.contentId = id;\n            });\n            (_c = this._panel) === null || _c === void 0 ? void 0 : _c.contentTypeUpdated.subscribe(function (type) {\n                _this.contentType = type;\n            });\n        };\n        CdkCombobox.prototype.ngOnDestroy = function () {\n            this.opened.complete();\n            this.closed.complete();\n            this.panelValueChanged.complete();\n        };\n        /** Toggles the open state of the panel. */\n        CdkCombobox.prototype.toggle = function () {\n            if (this.hasPanel()) {\n                this.isOpen() ? this.close() : this.open();\n            }\n        };\n        /** If the combobox is closed and not disabled, opens the panel. */\n        CdkCombobox.prototype.open = function () {\n            if (!this.isOpen() && !this.disabled) {\n                this.opened.next();\n                this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n                this._overlayRef.attach(this._getPanelContent());\n            }\n        };\n        /** If the combobox is open and not disabled, closes the panel. */\n        CdkCombobox.prototype.close = function () {\n            if (this.isOpen() && !this.disabled) {\n                this.closed.next();\n                this._overlayRef.detach();\n            }\n        };\n        /** Returns true if panel is currently opened. */\n        CdkCombobox.prototype.isOpen = function () {\n            return this._overlayRef ? this._overlayRef.hasAttached() : false;\n        };\n        /** Returns true if combobox has a child panel. */\n        CdkCombobox.prototype.hasPanel = function () {\n            return !!this.panel;\n        };\n        CdkCombobox.prototype._setComboboxValue = function (value) {\n            var valueChanged = (this.value !== value);\n            this.value = value;\n            if (valueChanged) {\n                this.panelValueChanged.emit(value);\n                this._setTextContent(value);\n            }\n        };\n        CdkCombobox.prototype._setTextContent = function (content) {\n            if (typeof content === 'string') {\n                this._elementRef.nativeElement.textContent = \"\" + content;\n            }\n        };\n        CdkCombobox.prototype._getOverlayConfig = function () {\n            return new overlay.OverlayConfig({\n                positionStrategy: this._getOverlayPositionStrategy(),\n                scrollStrategy: this._overlay.scrollStrategies.block(),\n                direction: this._directionality,\n            });\n        };\n        CdkCombobox.prototype._getOverlayPositionStrategy = function () {\n            return this._overlay\n                .position()\n                .flexibleConnectedTo(this._elementRef)\n                .withPositions(this._getOverlayPositions());\n        };\n        CdkCombobox.prototype._getOverlayPositions = function () {\n            return [\n                { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n                { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n                { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n                { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n            ];\n        };\n        CdkCombobox.prototype._getPanelContent = function () {\n            var _a, _b;\n            var hasPanelChanged = ((_a = this._panel) === null || _a === void 0 ? void 0 : _a._templateRef) !== ((_b = this._panelContent) === null || _b === void 0 ? void 0 : _b.templateRef);\n            if (this._panel && (!this._panel || hasPanelChanged)) {\n                this._panelContent = new portal.TemplatePortal(this._panel._templateRef, this._viewContainerRef);\n            }\n            return this._panelContent;\n        };\n        CdkCombobox.prototype._coerceOpenActionProperty = function (input) {\n            var actions = [];\n            if (typeof input === 'string') {\n                actions.push(input);\n            }\n            else {\n                actions = input;\n            }\n            return actions;\n        };\n        return CdkCombobox;\n    }());\n    CdkCombobox.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkCombobox]',\n                    exportAs: 'cdkCombobox',\n                    host: {\n                        'role': 'combobox',\n                        '(click)': 'toggle()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-controls]': 'contentId',\n                        '[attr.aria-haspopup]': 'contentType'\n                    }\n                },] }\n    ];\n    CdkCombobox.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: overlay.Overlay },\n        { type: core.ViewContainerRef },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] }\n    ]; };\n    CdkCombobox.propDecorators = {\n        panel: [{ type: core.Input, args: ['cdkComboboxTriggerFor',] }],\n        value: [{ type: core.Input }],\n        disabled: [{ type: core.Input }],\n        openActions: [{ type: core.Input }],\n        opened: [{ type: core.Output, args: ['comboboxPanelOpened',] }],\n        closed: [{ type: core.Output, args: ['comboboxPanelClosed',] }],\n        panelValueChanged: [{ type: core.Output, args: ['panelValueChanged',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkComboboxPanel = /** @class */ (function () {\n        function CdkComboboxPanel(_templateRef) {\n            this._templateRef = _templateRef;\n            this.valueUpdated = new rxjs.Subject();\n            this.contentIdUpdated = new rxjs.Subject();\n            this.contentTypeUpdated = new rxjs.Subject();\n            this.contentId = '';\n        }\n        /** Tells the parent combobox to closet he panel and sends back the content value. */\n        CdkComboboxPanel.prototype.closePanel = function (data) {\n            this.valueUpdated.next(data);\n        };\n        /** Registers the content's id and the content type with the panel. */\n        CdkComboboxPanel.prototype._registerContent = function (contentId, contentType) {\n            this.contentId = contentId;\n            if (contentType !== 'listbox' && contentType !== 'dialog') {\n                throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n            }\n            this.contentType = contentType;\n            this.contentIdUpdated.next(this.contentId);\n            this.contentTypeUpdated.next(this.contentType);\n        };\n        return CdkComboboxPanel;\n    }());\n    CdkComboboxPanel.decorators = [\n        { type: core.Directive, args: [{\n                    selector: 'ng-template[cdkComboboxPanel]',\n                    exportAs: 'cdkComboboxPanel',\n                },] }\n    ];\n    CdkComboboxPanel.ctorParameters = function () { return [\n        { type: core.TemplateRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPanel];\n    var CdkComboboxModule = /** @class */ (function () {\n        function CdkComboboxModule() {\n        }\n        return CdkComboboxModule;\n    }());\n    CdkComboboxModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [overlay.OverlayModule],\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkCombobox = CdkCombobox;\n    exports.CdkComboboxModule = CdkComboboxModule;\n    exports.CdkComboboxPanel = CdkComboboxPanel;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-combobox.umd.js.map\n"]}