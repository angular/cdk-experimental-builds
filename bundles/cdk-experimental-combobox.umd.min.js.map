{"version":3,"sources":["src/cdk-experimental/cdk-experimental-combobox.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","combobox","core","cdk","overlay","portal","bidi","coercion","keycodes","rxjs","this","allowedOpenActions","CdkCombobox","_elementRef","_overlay","_viewContainerRef","_directionality","_disabled","_openActions","opened","EventEmitter","closed","panelValueChanged","contentId","Object","defineProperty","prototype","get","_panel","set","panel","enumerable","configurable","value","coerceBooleanProperty","action","_coerceOpenActionProperty","ngAfterContentInit","_a","_b","_c","_this","valueUpdated","subscribe","data","_setComboboxValue","close","contentIdUpdated","id","contentTypeUpdated","type","contentType","ngOnDestroy","complete","_keydown","event","keyCode","DOWN_ARROW","indexOf","open","ESCAPE","preventDefault","_handleInteractions","interaction","toggle","_attemptClose","isOpen","target","composedPath","Element","className","parentElement","hasPanel","disabled","next","_overlayRef","create","_getOverlayConfig","attach","_getPanelContent","focusContent","detach","hasAttached","_getTabIndex","valueChanged","emit","_setTextContent","content","contentArray","coerceArray","nativeElement","textContent","join","OverlayConfig","positionStrategy","_getOverlayPositionStrategy","scrollStrategy","scrollStrategies","block","direction","position","flexibleConnectedTo","withPositions","_getOverlayPositions","originX","originY","overlayX","overlayY","hasPanelChanged","_templateRef","_panelContent","templateRef","TemplatePortal","input","actions","trim","split","isDevMode","some","a","Error","decorators","Directive","args","selector","exportAs","host","role","class","(click)","(focus)","(keydown)","(document:click)","[attr.aria-disabled]","[attr.aria-owns]","[attr.aria-haspopup]","[attr.aria-expanded]","[attr.tabindex]","ctorParameters","ElementRef","Overlay","ViewContainerRef","Directionality","Optional","propDecorators","Input","openActions","Output","CdkComboboxPanel","Subject","closePanel","document","getElementById","focus","_registerContent","TemplateRef","PANEL","InjectionToken","nextId","CdkComboboxPopup","_parentPanel","_role","ngOnInit","registerWithPanel","_explicitPanel","[attr.role]","[id]","tabindex","Inject","CdkComboboxModule","EXPORTED_DECLARATIONS","NgModule","imports","OverlayModule","declarations"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/overlay'), require('@angular/cdk/portal'), require('@angular/cdk/bidi'), require('@angular/cdk/coercion'), require('@angular/cdk/keycodes'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/combobox', ['exports', '@angular/core', '@angular/cdk/overlay', '@angular/cdk/portal', '@angular/cdk/bidi', '@angular/cdk/coercion', '@angular/cdk/keycodes', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.combobox = {}), global.ng.core, global.ng.cdk.overlay, global.ng.cdk.portal, global.ng.cdk.bidi, global.ng.cdk.coercion, global.ng.cdk.keycodes, global.rxjs));\n}(this, (function (exports, core, overlay, portal, bidi, coercion, keycodes, rxjs) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var allowedOpenActions = ['focus', 'click', 'downKey', 'toggle'];\n    var CdkCombobox = /** @class */ (function () {\n        function CdkCombobox(_elementRef, _overlay, _viewContainerRef, _directionality) {\n            this._elementRef = _elementRef;\n            this._overlay = _overlay;\n            this._viewContainerRef = _viewContainerRef;\n            this._directionality = _directionality;\n            this._disabled = false;\n            this._openActions = ['click'];\n            this.opened = new core.EventEmitter();\n            this.closed = new core.EventEmitter();\n            this.panelValueChanged = new core.EventEmitter();\n            this.contentId = '';\n        }\n        Object.defineProperty(CdkCombobox.prototype, \"panel\", {\n            get: function () { return this._panel; },\n            set: function (panel) { this._panel = panel; },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkCombobox.prototype, \"disabled\", {\n            get: function () { return this._disabled; },\n            set: function (value) { this._disabled = coercion.coerceBooleanProperty(value); },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(CdkCombobox.prototype, \"openActions\", {\n            get: function () {\n                return this._openActions;\n            },\n            set: function (action) {\n                this._openActions = this._coerceOpenActionProperty(action);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkCombobox.prototype.ngAfterContentInit = function () {\n            var _this = this;\n            var _a, _b, _c;\n            (_a = this._panel) === null || _a === void 0 ? void 0 : _a.valueUpdated.subscribe(function (data) {\n                _this._setComboboxValue(data);\n                _this.close();\n            });\n            (_b = this._panel) === null || _b === void 0 ? void 0 : _b.contentIdUpdated.subscribe(function (id) {\n                _this.contentId = id;\n            });\n            (_c = this._panel) === null || _c === void 0 ? void 0 : _c.contentTypeUpdated.subscribe(function (type) {\n                _this.contentType = type;\n            });\n        };\n        CdkCombobox.prototype.ngOnDestroy = function () {\n            this.opened.complete();\n            this.closed.complete();\n            this.panelValueChanged.complete();\n        };\n        CdkCombobox.prototype._keydown = function (event) {\n            var keyCode = event.keyCode;\n            if (keyCode === keycodes.DOWN_ARROW && this._openActions.indexOf('downKey') !== -1) {\n                this.open();\n            }\n            else if (keyCode === keycodes.ESCAPE) {\n                event.preventDefault();\n                this.close();\n            }\n        };\n        CdkCombobox.prototype._handleInteractions = function (interaction) {\n            if (interaction === 'click') {\n                if (this._openActions.indexOf('toggle') !== -1) {\n                    this.toggle();\n                }\n                else if (this._openActions.indexOf('click') !== -1) {\n                    this.open();\n                }\n            }\n            else if (interaction === 'focus') {\n                if (this._openActions.indexOf('focus') !== -1) {\n                    this.open();\n                }\n            }\n        };\n        CdkCombobox.prototype._attemptClose = function (event) {\n            if (this.isOpen()) {\n                var target = event.composedPath ? event.composedPath()[0] : event.target;\n                while (target instanceof Element) {\n                    if (target.className.indexOf('cdk-combobox') !== -1) {\n                        return;\n                    }\n                    target = target.parentElement;\n                }\n            }\n            this.close();\n        };\n        /** Toggles the open state of the panel. */\n        CdkCombobox.prototype.toggle = function () {\n            if (this.hasPanel()) {\n                this.isOpen() ? this.close() : this.open();\n            }\n        };\n        /** If the combobox is closed and not disabled, opens the panel. */\n        CdkCombobox.prototype.open = function () {\n            var _a;\n            if (!this.isOpen() && !this.disabled) {\n                this.opened.next();\n                this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n                this._overlayRef.attach(this._getPanelContent());\n                (_a = this._panel) === null || _a === void 0 ? void 0 : _a.focusContent();\n            }\n        };\n        /** If the combobox is open and not disabled, closes the panel. */\n        CdkCombobox.prototype.close = function () {\n            if (this.isOpen() && !this.disabled) {\n                this.closed.next();\n                this._overlayRef.detach();\n            }\n        };\n        /** Returns true if panel is currently opened. */\n        CdkCombobox.prototype.isOpen = function () {\n            return this._overlayRef ? this._overlayRef.hasAttached() : false;\n        };\n        /** Returns true if combobox has a child panel. */\n        CdkCombobox.prototype.hasPanel = function () {\n            return !!this.panel;\n        };\n        CdkCombobox.prototype._getTabIndex = function () {\n            return this.disabled ? null : '0';\n        };\n        CdkCombobox.prototype._setComboboxValue = function (value) {\n            var valueChanged = (this.value !== value);\n            this.value = value;\n            if (valueChanged) {\n                this.panelValueChanged.emit(value);\n                this._setTextContent(value);\n            }\n        };\n        CdkCombobox.prototype._setTextContent = function (content) {\n            var contentArray = coercion.coerceArray(content);\n            this._elementRef.nativeElement.textContent = contentArray.join(' ');\n        };\n        CdkCombobox.prototype._getOverlayConfig = function () {\n            return new overlay.OverlayConfig({\n                positionStrategy: this._getOverlayPositionStrategy(),\n                scrollStrategy: this._overlay.scrollStrategies.block(),\n                direction: this._directionality,\n            });\n        };\n        CdkCombobox.prototype._getOverlayPositionStrategy = function () {\n            return this._overlay\n                .position()\n                .flexibleConnectedTo(this._elementRef)\n                .withPositions(this._getOverlayPositions());\n        };\n        CdkCombobox.prototype._getOverlayPositions = function () {\n            return [\n                { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n                { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom' },\n                { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' },\n                { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom' },\n            ];\n        };\n        CdkCombobox.prototype._getPanelContent = function () {\n            var _a, _b;\n            var hasPanelChanged = ((_a = this._panel) === null || _a === void 0 ? void 0 : _a._templateRef) !== ((_b = this._panelContent) === null || _b === void 0 ? void 0 : _b.templateRef);\n            if (this._panel && (!this._panel || hasPanelChanged)) {\n                this._panelContent = new portal.TemplatePortal(this._panel._templateRef, this._viewContainerRef);\n            }\n            return this._panelContent;\n        };\n        CdkCombobox.prototype._coerceOpenActionProperty = function (input) {\n            var actions = typeof input === 'string' ? input.trim().split(/[ ,]+/) : input;\n            if (core.isDevMode() && actions.some(function (a) { return allowedOpenActions.indexOf(a) === -1; })) {\n                throw Error(input + \" is not a support open action for CdkCombobox\");\n            }\n            return actions;\n        };\n        return CdkCombobox;\n    }());\n    CdkCombobox.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkCombobox]',\n                    exportAs: 'cdkCombobox',\n                    host: {\n                        'role': 'combobox',\n                        'class': 'cdk-combobox',\n                        '(click)': '_handleInteractions(\"click\")',\n                        '(focus)': '_handleInteractions(\"focus\")',\n                        '(keydown)': '_keydown($event)',\n                        '(document:click)': '_attemptClose($event)',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[attr.aria-owns]': 'contentId',\n                        '[attr.aria-haspopup]': 'contentType',\n                        '[attr.aria-expanded]': 'isOpen()',\n                        '[attr.tabindex]': '_getTabIndex()'\n                    }\n                },] }\n    ];\n    CdkCombobox.ctorParameters = function () { return [\n        { type: core.ElementRef },\n        { type: overlay.Overlay },\n        { type: core.ViewContainerRef },\n        { type: bidi.Directionality, decorators: [{ type: core.Optional }] }\n    ]; };\n    CdkCombobox.propDecorators = {\n        panel: [{ type: core.Input, args: ['cdkComboboxTriggerFor',] }],\n        value: [{ type: core.Input }],\n        disabled: [{ type: core.Input }],\n        openActions: [{ type: core.Input }],\n        opened: [{ type: core.Output, args: ['comboboxPanelOpened',] }],\n        closed: [{ type: core.Output, args: ['comboboxPanelClosed',] }],\n        panelValueChanged: [{ type: core.Output, args: ['panelValueChanged',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var CdkComboboxPanel = /** @class */ (function () {\n        function CdkComboboxPanel(_templateRef) {\n            this._templateRef = _templateRef;\n            this.valueUpdated = new rxjs.Subject();\n            this.contentIdUpdated = new rxjs.Subject();\n            this.contentTypeUpdated = new rxjs.Subject();\n            this.contentId = '';\n        }\n        /** Tells the parent combobox to close the panel and sends back the content value. */\n        CdkComboboxPanel.prototype.closePanel = function (data) {\n            this.valueUpdated.next(data);\n        };\n        // TODO: instead of using a focus function, potentially use cdk/a11y focus trapping\n        CdkComboboxPanel.prototype.focusContent = function () {\n            var _a;\n            // TODO: Use an injected document here\n            (_a = document.getElementById(this.contentId)) === null || _a === void 0 ? void 0 : _a.focus();\n        };\n        /** Registers the content's id and the content type with the panel. */\n        CdkComboboxPanel.prototype._registerContent = function (contentId, contentType) {\n            this.contentId = contentId;\n            if (contentType !== 'listbox' && contentType !== 'dialog') {\n                throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n            }\n            this.contentType = contentType;\n            this.contentIdUpdated.next(this.contentId);\n            this.contentTypeUpdated.next(this.contentType);\n        };\n        return CdkComboboxPanel;\n    }());\n    CdkComboboxPanel.decorators = [\n        { type: core.Directive, args: [{\n                    host: {\n                        'class': 'cdk-combobox-panel'\n                    },\n                    selector: 'ng-template[cdkComboboxPanel]',\n                    exportAs: 'cdkComboboxPanel',\n                },] }\n    ];\n    CdkComboboxPanel.ctorParameters = function () { return [\n        { type: core.TemplateRef }\n    ]; };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PANEL = new core.InjectionToken('CdkComboboxPanel');\n    var nextId = 0;\n    var CdkComboboxPopup = /** @class */ (function () {\n        function CdkComboboxPopup(_parentPanel) {\n            this._parentPanel = _parentPanel;\n            this._role = 'dialog';\n            this.id = \"cdk-combobox-popup-\" + nextId++;\n        }\n        Object.defineProperty(CdkComboboxPopup.prototype, \"role\", {\n            get: function () {\n                return this._role;\n            },\n            set: function (value) {\n                this._role = value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CdkComboboxPopup.prototype.ngOnInit = function () {\n            this.registerWithPanel();\n        };\n        CdkComboboxPopup.prototype.registerWithPanel = function () {\n            if (this._parentPanel === null || this._parentPanel === undefined) {\n                this._explicitPanel._registerContent(this.id, this._role);\n            }\n            else {\n                this._parentPanel._registerContent(this.id, this._role);\n            }\n        };\n        return CdkComboboxPopup;\n    }());\n    CdkComboboxPopup.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[cdkComboboxPopup]',\n                    exportAs: 'cdkComboboxPopup',\n                    host: {\n                        'class': 'cdk-combobox-popup',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                        'tabindex': '-1'\n                    }\n                },] }\n    ];\n    CdkComboboxPopup.ctorParameters = function () { return [\n        { type: CdkComboboxPanel, decorators: [{ type: core.Optional }, { type: core.Inject, args: [PANEL,] }] }\n    ]; };\n    CdkComboboxPopup.propDecorators = {\n        role: [{ type: core.Input }],\n        id: [{ type: core.Input }],\n        _explicitPanel: [{ type: core.Input, args: ['parentPanel',] }]\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPanel, CdkComboboxPopup];\n    var CdkComboboxModule = /** @class */ (function () {\n        function CdkComboboxModule() {\n        }\n        return CdkComboboxModule;\n    }());\n    CdkComboboxModule.decorators = [\n        { type: core.NgModule, args: [{\n                    imports: [overlay.OverlayModule],\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                },] }\n    ];\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkCombobox = CdkCombobox;\n    exports.CdkComboboxModule = CdkComboboxModule;\n    exports.CdkComboboxPanel = CdkComboboxPanel;\n    exports.CdkComboboxPopup = CdkComboboxPopup;\n    exports.PANEL = PANEL;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-combobox.umd.js.map\n"]}