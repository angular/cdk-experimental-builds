{"version":3,"sources":["src/cdk-experimental/cdk-experimental-column-resize.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","columnResize","core","rxjs","operators","popoverEdit","common","cdk","coercion","portal","keycodes","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","HEADER_ROW_SELECTOR","nextId","ColumnResize","destroyed","ReplaySubject","selectorId","ngAfterViewInit","elementRef","nativeElement","classList","add","getUniqueCssClass","_listenForRowHoverEvents","_listenForResizeActivity","_listenForHoverActivity","ngOnDestroy","complete","_this","ngZone","runOutsideAngular","element","fromEvent","pipe","map","event","_closest","target","takeUntil","subscribe","eventDispatcher","headerCellHovered","filter","relatedTarget","_matches","mapTo","merge","overlayHandleActiveForCell","undefined","notifier","triggerResize","resizeCompleted","take","headerRowHoveredOrActiveDistinct","startWith","pairwise","_a","_b","previousRow","hoveredRow","remove","decorators","type","Directive","ColumnResizeNotifierSource","resizeCanceled","Subject","Injectable","ColumnResizeNotifier","_source","asObservable","resize","columnId","size","completeImmediately","ctorParameters","HeaderRowEventDispatcher","_ngZone","headerCellHoveredDistinct","distinctUntilChanged","share","combineLatest","cell","skip","_headerRowHoveredOrActiveDistinctReenterZone","_enterZone","_lastSeenRow","_lastSeenRowHover","resizeOverlayVisibleForHeaderRow","row","source","Observable","observer","run","err","NgZone","ResizeStrategy","TableLayoutFixedResizeStrategy","_super","apply","applyColumnSize","_","columnHeader","sizeInPx","style","width","coerceCssPixelValue","applyMinColumnSize","minWidth","applyMaxColumnSize","CdkFlexTableResizeStrategy","_columnResize","document","_columnIndexes","Map","_columnProperties","_indexSequence","defaultMinSize","defaultMaxSize","Number","MAX_SAFE_INTEGER","_document","cssFriendlyColumnName","cssSize","_applyProperty","getColumnCssClass","_styleElement","parentNode","removeChild","key","enable","properties","_getColumnPropertiesMap","set","delete","_applySizeCss","_getStyleSheet","createElement","appendChild","createTextNode","head","sheet","get","propertyKeys","from","keys","index","deleteRule","columnClassName","selector","body","join","insertRule","Inject","args","DOCUMENT","TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER","provide","useClass","FLEX_RESIZE_STRATEGY_PROVIDER","PROVIDERS","TABLE_PROVIDERS","FLEX_PROVIDERS","CdkColumnResize","columnResizeNotifier","providers","useExisting","ElementRef","CdkColumnResizeFlex","CdkDefaultEnabledColumnResize","CdkDefaultEnabledColumnResizeFlex","CdkColumnResizeDefaultEnabledModule","NgModule","declarations","CdkColumnResizeModule","ColumnSizeStore","ResizeRef","origin","overlayRef","minWidthPx","maxWidthPx","Resizable","minWidthPxInternal","maxWidthPxInternal","defineProperty","_applyMinWidthPx","enumerable","configurable","_applyMaxWidthPx","_listenForResizeEvents","_appendInlineHandle","inlineHandle","dispose","_createOverlayForHandle","positionStrategy","overlay","position","flexibleConnectedTo","withFlexibleDimensions","withGrowAfterOpen","withPush","withPositions","originX","originY","overlayX","overlayY","direction","directionality","disposeOnNavigation","scrollStrategy","scrollStrategies","reposition","takeUntilDestroyed","hoveringRow","_showHandleOverlay","detach","resizeNotifier","columnSize","columnDef","name","_applySize","_completeResizeOperation","_cleanUpAfterResize","offsetWidth","hasAttached","_updateOverlayHandleHeight","updatePosition","focus","_createHandlePortal","injector","PortalInjector","WeakMap","ComponentPortal","getOverlayHandleComponentType","viewContainerRef","attach","updateSize","height","offsetHeight","sizeInPixels","sizeToApply","Math","min","max","resizeStrategy","cssClassFriendlyName","tabIndex","className","getInlineHandleCssClassName","ResizeOverlayHandle","_listenForMouseEvents","resizeRef","mousedownEvent","_dragStarted","button","mouseup","mousemove","escape","keyCode","ESCAPE","startX","screenX","initialOverlayOffset","_getOverlayOffset","initialSize","_getOriginWidth","overlayOffset","originOffset","_getOriginOffset","overshot","updateResizeActive","_notifyResizeEnded","deltaX","remainingOvershot","computedNewSize","_isLtr","originNewSize","originNewOffset","originOffsetDeltaX","originSizeDeltaX","_updateOverlayOffset","active","originElement","offsetLeft","offsetParent","overlayElement","parseInt","left","right","offset","overlayOffsetCssValue","completedSuccessfully","sizeMessage","ɵangular_material_src_cdk_experimental_column_resize_column_resize_a","ɵangular_material_src_cdk_experimental_column_resize_column_resize_b"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk-experimental/popover-edit'), require('@angular/common'), require('@angular/cdk/coercion'), require('@angular/cdk/portal'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/column-resize', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/cdk-experimental/popover-edit', '@angular/common', '@angular/cdk/coercion', '@angular/cdk/portal', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.columnResize = {}), global.ng.core, global.rxjs, global.rxjs.operators, global.ng.cdkExperimental.popoverEdit, global.ng.common, global.ng.cdk.coercion, global.ng.cdk.portal, global.ng.cdk.keycodes));\n}(this, (function (exports, core, rxjs, operators, popoverEdit, common, coercion, portal, keycodes) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: Figure out how to remove `mat-` classes from the CDK part of the\n    // column resize implementation.\n    var HEADER_CELL_SELECTOR = '.cdk-header-cell, .mat-header-cell';\n    var HEADER_ROW_SELECTOR = '.cdk-header-row, .mat-header-row';\n    var RESIZE_OVERLAY_SELECTOR = '.mat-column-resize-overlay-thumb';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var HOVER_OR_ACTIVE_CLASS = 'cdk-column-resize-hover-or-active';\n    var WITH_RESIZED_COLUMN_CLASS = 'cdk-column-resize-with-resized-column';\n    var nextId = 0;\n    /**\n     * Base class for ColumnResize directives which attach to mat-table elements to\n     * provide common events and services for column resizing.\n     */\n    var ColumnResize = /** @class */ (function () {\n        function ColumnResize() {\n            this.destroyed = new rxjs.ReplaySubject();\n            /** Unique ID for this table instance. */\n            this.selectorId = \"\" + ++nextId;\n        }\n        ColumnResize.prototype.ngAfterViewInit = function () {\n            this.elementRef.nativeElement.classList.add(this.getUniqueCssClass());\n            this._listenForRowHoverEvents();\n            this._listenForResizeActivity();\n            this._listenForHoverActivity();\n        };\n        ColumnResize.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n        };\n        /** Gets the unique CSS class name for this table instance. */\n        ColumnResize.prototype.getUniqueCssClass = function () {\n            return \"cdk-column-resize-\" + this.selectorId;\n        };\n        ColumnResize.prototype._listenForRowHoverEvents = function () {\n            var _this = this;\n            this.ngZone.runOutsideAngular(function () {\n                var element = _this.elementRef.nativeElement;\n                rxjs.fromEvent(element, 'mouseover').pipe(operators.map(function (event) { return popoverEdit._closest(event.target, HEADER_CELL_SELECTOR); }), operators.takeUntil(_this.destroyed)).subscribe(_this.eventDispatcher.headerCellHovered);\n                rxjs.fromEvent(element, 'mouseleave').pipe(operators.filter(function (event) { return !!event.relatedTarget &&\n                    !popoverEdit._matches(event.relatedTarget, RESIZE_OVERLAY_SELECTOR); }), operators.mapTo(null), operators.takeUntil(_this.destroyed)).subscribe(_this.eventDispatcher.headerCellHovered);\n            });\n        };\n        ColumnResize.prototype._listenForResizeActivity = function () {\n            var _this = this;\n            rxjs.merge(this.eventDispatcher.overlayHandleActiveForCell.pipe(operators.mapTo(undefined)), this.notifier.triggerResize.pipe(operators.mapTo(undefined)), this.notifier.resizeCompleted.pipe(operators.mapTo(undefined))).pipe(operators.takeUntil(this.destroyed), operators.take(1)).subscribe(function () {\n                _this.elementRef.nativeElement.classList.add(WITH_RESIZED_COLUMN_CLASS);\n            });\n        };\n        ColumnResize.prototype._listenForHoverActivity = function () {\n            this.eventDispatcher.headerRowHoveredOrActiveDistinct.pipe(operators.startWith(null), operators.pairwise(), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var _b = __read(_a, 2), previousRow = _b[0], hoveredRow = _b[1];\n                if (hoveredRow) {\n                    hoveredRow.classList.add(HOVER_OR_ACTIVE_CLASS);\n                }\n                if (previousRow) {\n                    previousRow.classList.remove(HOVER_OR_ACTIVE_CLASS);\n                }\n            });\n        };\n        ColumnResize.decorators = [\n            { type: core.Directive }\n        ];\n        return ColumnResize;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Originating source of column resize events within a table. */\n    var ColumnResizeNotifierSource = /** @class */ (function () {\n        function ColumnResizeNotifierSource() {\n            /** Emits when an in-progress resize is canceled. */\n            this.resizeCanceled = new rxjs.Subject();\n            /** Emits when a resize is applied. */\n            this.resizeCompleted = new rxjs.Subject();\n            /** Triggers a resize action. */\n            this.triggerResize = new rxjs.Subject();\n        }\n        ColumnResizeNotifierSource.decorators = [\n            { type: core.Injectable }\n        ];\n        return ColumnResizeNotifierSource;\n    }());\n    /** Service for triggering column resizes imperatively or being notified of them. */\n    var ColumnResizeNotifier = /** @class */ (function () {\n        function ColumnResizeNotifier(_source) {\n            this._source = _source;\n            /** Emits whenever a column is resized. */\n            this.resizeCompleted = this._source.resizeCompleted.asObservable();\n        }\n        /** Instantly resizes the specified column. */\n        ColumnResizeNotifier.prototype.resize = function (columnId, size) {\n            this._source.triggerResize.next({ columnId: columnId, size: size, completeImmediately: true });\n        };\n        ColumnResizeNotifier.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        ColumnResizeNotifier.ctorParameters = function () { return [\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return ColumnResizeNotifier;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Coordinates events between the column resize directives. */\n    var HeaderRowEventDispatcher = /** @class */ (function () {\n        function HeaderRowEventDispatcher(_ngZone) {\n            this._ngZone = _ngZone;\n            /**\n             * Emits the currently hovered header cell or null when no header cells are hovered.\n             * Exposed publicly for events to feed in, but subscribers should use headerCellHoveredDistinct,\n             * defined below.\n             */\n            this.headerCellHovered = new rxjs.Subject();\n            /**\n             * Emits the header cell for which a user-triggered resize is active or null\n             * when no resize is in progress.\n             */\n            this.overlayHandleActiveForCell = new rxjs.Subject();\n            /** Distinct and shared version of headerCellHovered. */\n            this.headerCellHoveredDistinct = this.headerCellHovered.pipe(operators.distinctUntilChanged(), operators.share());\n            /**\n             * Emits the header that is currently hovered or hosting an active resize event (with active\n             * taking precedence).\n             */\n            this.headerRowHoveredOrActiveDistinct = rxjs.combineLatest(this.headerCellHoveredDistinct.pipe(operators.map(function (cell) { return popoverEdit._closest(cell, HEADER_ROW_SELECTOR); }), operators.startWith(null), operators.distinctUntilChanged()), this.overlayHandleActiveForCell.pipe(operators.map(function (cell) { return popoverEdit._closest(cell, HEADER_ROW_SELECTOR); }), operators.startWith(null), operators.distinctUntilChanged())).pipe(operators.skip(1), // Ignore initial [null, null] emission.\n            operators.map(function (_a) {\n                var _b = __read(_a, 2), hovered = _b[0], active = _b[1];\n                return active || hovered;\n            }), operators.distinctUntilChanged(), operators.share());\n            this._headerRowHoveredOrActiveDistinctReenterZone = this.headerRowHoveredOrActiveDistinct.pipe(this._enterZone(), operators.share());\n            // Optimization: Share row events observable with subsequent callers.\n            // At startup, calls will be sequential by row (and typically there's only one).\n            this._lastSeenRow = null;\n            this._lastSeenRowHover = null;\n        }\n        /**\n         * Emits whether the specified row should show its overlay controls.\n         * Emission occurs within the NgZone.\n         */\n        HeaderRowEventDispatcher.prototype.resizeOverlayVisibleForHeaderRow = function (row) {\n            if (row !== this._lastSeenRow) {\n                this._lastSeenRow = row;\n                this._lastSeenRowHover = this._headerRowHoveredOrActiveDistinctReenterZone.pipe(operators.map(function (hoveredRow) { return hoveredRow === row; }), operators.distinctUntilChanged(), operators.share());\n            }\n            return this._lastSeenRowHover;\n        };\n        HeaderRowEventDispatcher.prototype._enterZone = function () {\n            var _this = this;\n            return function (source) {\n                return new rxjs.Observable(function (observer) { return source.subscribe({\n                    next: function (value) { return _this._ngZone.run(function () { return observer.next(value); }); },\n                    error: function (err) { return observer.error(err); },\n                    complete: function () { return observer.complete(); }\n                }); });\n            };\n        };\n        HeaderRowEventDispatcher.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HeaderRowEventDispatcher.ctorParameters = function () { return [\n            { type: core.NgZone }\n        ]; };\n        return HeaderRowEventDispatcher;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides an implementation for resizing a column.\n     * The details of how resizing works for tables for flex mat-tables are quite different.\n     */\n    var ResizeStrategy = /** @class */ (function () {\n        function ResizeStrategy() {\n        }\n        ResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        return ResizeStrategy;\n    }());\n    /**\n     * The optimially performing resize strategy for &lt;table&gt; elements with table-layout: fixed.\n     * Tested against and outperformed:\n     *   CSS selector\n     *   CSS selector w/ CSS variable\n     *   Updating all cell nodes\n     */\n    var TableLayoutFixedResizeStrategy = /** @class */ (function (_super) {\n        __extends(TableLayoutFixedResizeStrategy, _super);\n        function TableLayoutFixedResizeStrategy() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        TableLayoutFixedResizeStrategy.prototype.applyColumnSize = function (_, columnHeader, sizeInPx) {\n            columnHeader.style.width = coercion.coerceCssPixelValue(sizeInPx);\n        };\n        TableLayoutFixedResizeStrategy.prototype.applyMinColumnSize = function (_, columnHeader, sizeInPx) {\n            columnHeader.style.minWidth = coercion.coerceCssPixelValue(sizeInPx);\n        };\n        TableLayoutFixedResizeStrategy.prototype.applyMaxColumnSize = function () {\n            // Intentionally omitted as max-width causes strange rendering issues in Chrome.\n            // Max size will still apply when the user is resizing this column.\n        };\n        TableLayoutFixedResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        return TableLayoutFixedResizeStrategy;\n    }(ResizeStrategy));\n    /**\n     * The optimally performing resize strategy for flex mat-tables.\n     * Tested against and outperformed:\n     *   CSS selector w/ CSS variable\n     *   Updating all mat-cell nodes\n     */\n    var CdkFlexTableResizeStrategy = /** @class */ (function (_super) {\n        __extends(CdkFlexTableResizeStrategy, _super);\n        function CdkFlexTableResizeStrategy(_columnResize, document) {\n            var _this = _super.call(this) || this;\n            _this._columnResize = _columnResize;\n            _this._columnIndexes = new Map();\n            _this._columnProperties = new Map();\n            _this._indexSequence = 0;\n            _this.defaultMinSize = 0;\n            _this.defaultMaxSize = Number.MAX_SAFE_INTEGER;\n            _this._document = document;\n            return _this;\n        }\n        CdkFlexTableResizeStrategy.prototype.applyColumnSize = function (cssFriendlyColumnName, _, sizeInPx) {\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'flex', \"0 0.01 \" + cssSize);\n        };\n        CdkFlexTableResizeStrategy.prototype.applyMinColumnSize = function (cssFriendlyColumnName, _, sizeInPx) {\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'min-width', cssSize, sizeInPx !== this.defaultMinSize);\n        };\n        CdkFlexTableResizeStrategy.prototype.applyMaxColumnSize = function (cssFriendlyColumnName, _, sizeInPx) {\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'max-width', cssSize, sizeInPx !== this.defaultMaxSize);\n        };\n        CdkFlexTableResizeStrategy.prototype.getColumnCssClass = function (cssFriendlyColumnName) {\n            return \"cdk-column-\" + cssFriendlyColumnName;\n        };\n        CdkFlexTableResizeStrategy.prototype.ngOnDestroy = function () {\n            // TODO: Use remove() once we're off IE11.\n            if (this._styleElement && this._styleElement.parentNode) {\n                this._styleElement.parentNode.removeChild(this._styleElement);\n                this._styleElement = undefined;\n            }\n        };\n        CdkFlexTableResizeStrategy.prototype._applyProperty = function (cssFriendlyColumnName, key, value, enable) {\n            if (enable === void 0) { enable = true; }\n            var properties = this._getColumnPropertiesMap(cssFriendlyColumnName);\n            if (enable) {\n                properties.set(key, value);\n            }\n            else {\n                properties.delete(key);\n            }\n            this._applySizeCss(cssFriendlyColumnName);\n        };\n        CdkFlexTableResizeStrategy.prototype._getStyleSheet = function () {\n            if (!this._styleElement) {\n                this._styleElement = this._document.createElement('style');\n                this._styleElement.appendChild(this._document.createTextNode(''));\n                this._document.head.appendChild(this._styleElement);\n            }\n            return this._styleElement.sheet;\n        };\n        CdkFlexTableResizeStrategy.prototype._getColumnPropertiesMap = function (cssFriendlyColumnName) {\n            var properties = this._columnProperties.get(cssFriendlyColumnName);\n            if (properties === undefined) {\n                properties = new Map();\n                this._columnProperties.set(cssFriendlyColumnName, properties);\n            }\n            return properties;\n        };\n        CdkFlexTableResizeStrategy.prototype._applySizeCss = function (cssFriendlyColumnName) {\n            var properties = this._getColumnPropertiesMap(cssFriendlyColumnName);\n            var propertyKeys = Array.from(properties.keys());\n            var index = this._columnIndexes.get(cssFriendlyColumnName);\n            if (index === undefined) {\n                if (!propertyKeys.length) {\n                    // Nothing to set or unset.\n                    return;\n                }\n                index = this._indexSequence++;\n                this._columnIndexes.set(cssFriendlyColumnName, index);\n            }\n            else {\n                this._getStyleSheet().deleteRule(index);\n            }\n            var columnClassName = this.getColumnCssClass(cssFriendlyColumnName);\n            var tableClassName = this._columnResize.getUniqueCssClass();\n            var selector = \".\" + tableClassName + \" .\" + columnClassName;\n            var body = propertyKeys.map(function (key) { return key + \":\" + properties.get(key); }).join(';');\n            this._getStyleSheet().insertRule(selector + \" {\" + body + \"}\", index);\n        };\n        CdkFlexTableResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        CdkFlexTableResizeStrategy.ctorParameters = function () { return [\n            { type: ColumnResize },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        return CdkFlexTableResizeStrategy;\n    }(ResizeStrategy));\n    var TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER = {\n        provide: ResizeStrategy,\n        useClass: TableLayoutFixedResizeStrategy,\n    };\n    var FLEX_RESIZE_STRATEGY_PROVIDER = {\n        provide: ResizeStrategy,\n        useClass: CdkFlexTableResizeStrategy,\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PROVIDERS = [\n        ColumnResizeNotifier,\n        HeaderRowEventDispatcher,\n        ColumnResizeNotifierSource,\n    ];\n    var TABLE_PROVIDERS = __spread(PROVIDERS, [\n        TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n    ]);\n    var FLEX_PROVIDERS = __spread(PROVIDERS, [FLEX_RESIZE_STRATEGY_PROVIDER]);\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a table-based cdk-table.\n     * Individual columns must be annotated specifically.\n     */\n    var CdkColumnResize = /** @class */ (function (_super) {\n        __extends(CdkColumnResize, _super);\n        function CdkColumnResize(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[cdk-table][columnResize]',\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkColumnResize.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkColumnResize;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a flexbox-based cdk-table.\n     * Individual columns must be annotated specifically.\n     */\n    var CdkColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(CdkColumnResizeFlex, _super);\n        function CdkColumnResizeFlex(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'cdk-table[columnResize]',\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkColumnResizeFlex.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkColumnResizeFlex;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a table-based cdk-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var CdkDefaultEnabledColumnResize = /** @class */ (function (_super) {\n        __extends(CdkDefaultEnabledColumnResize, _super);\n        function CdkDefaultEnabledColumnResize(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkDefaultEnabledColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[cdk-table]',\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkDefaultEnabledColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkDefaultEnabledColumnResize.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkDefaultEnabledColumnResize;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a flex cdk-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var CdkDefaultEnabledColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(CdkDefaultEnabledColumnResizeFlex, _super);\n        function CdkDefaultEnabledColumnResizeFlex(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkDefaultEnabledColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'cdk-table',\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkDefaultEnabledColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkDefaultEnabledColumnResizeFlex.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkDefaultEnabledColumnResizeFlex;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * One of two NgModules for use with CdkColumnResize.\n     * When using this module, columns are resizable by default.\n     */\n    var CdkColumnResizeDefaultEnabledModule = /** @class */ (function () {\n        function CdkColumnResizeDefaultEnabledModule() {\n        }\n        CdkColumnResizeDefaultEnabledModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [CdkDefaultEnabledColumnResize, CdkDefaultEnabledColumnResizeFlex],\n                        exports: [CdkDefaultEnabledColumnResize, CdkDefaultEnabledColumnResizeFlex],\n                    },] }\n        ];\n        return CdkColumnResizeDefaultEnabledModule;\n    }());\n    /**\n     * One of two NgModules for use with CdkColumnResize.\n     * When using this module, columns are not resizable by default.\n     */\n    var CdkColumnResizeModule = /** @class */ (function () {\n        function CdkColumnResizeModule() {\n        }\n        CdkColumnResizeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [CdkColumnResize, CdkColumnResizeFlex],\n                        exports: [CdkColumnResize, CdkColumnResizeFlex],\n                    },] }\n        ];\n        return CdkColumnResizeModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Can be provided by the host application to enable persistence of column resize state.\n     */\n    var ColumnSizeStore = /** @class */ (function () {\n        function ColumnSizeStore() {\n        }\n        ColumnSizeStore.decorators = [\n            { type: core.Injectable }\n        ];\n        return ColumnSizeStore;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Tracks state of resize events in progress. */\n    var ResizeRef = /** @class */ (function () {\n        function ResizeRef(origin, overlayRef, minWidthPx, maxWidthPx) {\n            this.origin = origin;\n            this.overlayRef = overlayRef;\n            this.minWidthPx = minWidthPx;\n            this.maxWidthPx = maxWidthPx;\n        }\n        return ResizeRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var OVERLAY_ACTIVE_CLASS = 'cdk-resizable-overlay-thumb-active';\n    /**\n     * Base class for Resizable directives which are applied to column headers to make those columns\n     * resizable.\n     */\n    var Resizable = /** @class */ (function () {\n        function Resizable() {\n            this.minWidthPxInternal = 0;\n            this.maxWidthPxInternal = Number.MAX_SAFE_INTEGER;\n            this.destroyed = new rxjs.ReplaySubject();\n        }\n        Object.defineProperty(Resizable.prototype, \"minWidthPx\", {\n            /** The minimum width to allow the column to be sized to. */\n            get: function () {\n                return this.minWidthPxInternal;\n            },\n            set: function (value) {\n                this.minWidthPxInternal = value;\n                if (this.elementRef.nativeElement) {\n                    this._applyMinWidthPx();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Resizable.prototype, \"maxWidthPx\", {\n            /** The maximum width to allow the column to be sized to. */\n            get: function () {\n                return this.maxWidthPxInternal;\n            },\n            set: function (value) {\n                this.maxWidthPxInternal = value;\n                if (this.elementRef.nativeElement) {\n                    this._applyMaxWidthPx();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Resizable.prototype.ngAfterViewInit = function () {\n            this._listenForRowHoverEvents();\n            this._listenForResizeEvents();\n            this._appendInlineHandle();\n            this._applyMinWidthPx();\n            this._applyMaxWidthPx();\n        };\n        Resizable.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n            if (this.inlineHandle) {\n                this.elementRef.nativeElement.removeChild(this.inlineHandle);\n            }\n            if (this.overlayRef) {\n                this.overlayRef.dispose();\n            }\n        };\n        Resizable.prototype._createOverlayForHandle = function () {\n            // Use of overlays allows us to properly capture click events spanning parts\n            // of two table cells and is also useful for displaying a resize thumb\n            // over both cells and extending it down the table as needed.\n            var positionStrategy = this.overlay.position()\n                .flexibleConnectedTo(this.elementRef.nativeElement)\n                .withFlexibleDimensions(false)\n                .withGrowAfterOpen(false)\n                .withPush(false)\n                .withPositions([{\n                    originX: 'end',\n                    originY: 'top',\n                    overlayX: 'center',\n                    overlayY: 'top',\n                }]);\n            return this.overlay.create({\n                direction: this.directionality,\n                disposeOnNavigation: true,\n                positionStrategy: positionStrategy,\n                scrollStrategy: this.overlay.scrollStrategies.reposition(),\n                width: '16px',\n            });\n        };\n        Resizable.prototype._listenForRowHoverEvents = function () {\n            var _this = this;\n            var element = this.elementRef.nativeElement;\n            var takeUntilDestroyed = operators.takeUntil(this.destroyed);\n            this.eventDispatcher.resizeOverlayVisibleForHeaderRow(popoverEdit._closest(element, HEADER_ROW_SELECTOR))\n                .pipe(takeUntilDestroyed).subscribe(function (hoveringRow) {\n                if (hoveringRow) {\n                    if (!_this.overlayRef) {\n                        _this.overlayRef = _this._createOverlayForHandle();\n                    }\n                    _this._showHandleOverlay();\n                }\n                else if (_this.overlayRef) {\n                    // todo - can't detach during an active resize - need to work that out\n                    _this.overlayRef.detach();\n                }\n            });\n        };\n        Resizable.prototype._listenForResizeEvents = function () {\n            var _this = this;\n            var takeUntilDestroyed = operators.takeUntil(this.destroyed);\n            rxjs.merge(this.resizeNotifier.resizeCanceled, this.resizeNotifier.triggerResize).pipe(takeUntilDestroyed, operators.filter(function (columnSize) { return columnSize.columnId === _this.columnDef.name; })).subscribe(function (_a) {\n                var size = _a.size, completeImmediately = _a.completeImmediately;\n                _this.elementRef.nativeElement.classList.add(OVERLAY_ACTIVE_CLASS);\n                _this._applySize(size);\n                if (completeImmediately) {\n                    _this._completeResizeOperation();\n                }\n            });\n            rxjs.merge(this.resizeNotifier.resizeCanceled, this.resizeNotifier.resizeCompleted).pipe(takeUntilDestroyed).subscribe(function (columnSize) {\n                _this._cleanUpAfterResize(columnSize);\n            });\n        };\n        Resizable.prototype._completeResizeOperation = function () {\n            var _this = this;\n            this.ngZone.run(function () {\n                _this.resizeNotifier.resizeCompleted.next({\n                    columnId: _this.columnDef.name,\n                    size: _this.elementRef.nativeElement.offsetWidth,\n                });\n            });\n        };\n        Resizable.prototype._cleanUpAfterResize = function (columnSize) {\n            this.elementRef.nativeElement.classList.remove(OVERLAY_ACTIVE_CLASS);\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this._updateOverlayHandleHeight();\n                this.overlayRef.updatePosition();\n                if (columnSize.columnId === this.columnDef.name) {\n                    this.inlineHandle.focus();\n                }\n            }\n        };\n        Resizable.prototype._createHandlePortal = function () {\n            var injector = new portal.PortalInjector(this.injector, new WeakMap([[\n                    ResizeRef,\n                    new ResizeRef(this.elementRef, this.overlayRef, this.minWidthPx, this.maxWidthPx),\n                ]]));\n            return new portal.ComponentPortal(this.getOverlayHandleComponentType(), this.viewContainerRef, injector);\n        };\n        Resizable.prototype._showHandleOverlay = function () {\n            this._updateOverlayHandleHeight();\n            this.overlayRef.attach(this._createHandlePortal());\n        };\n        Resizable.prototype._updateOverlayHandleHeight = function () {\n            this.overlayRef.updateSize({ height: this.elementRef.nativeElement.offsetHeight });\n        };\n        Resizable.prototype._applySize = function (sizeInPixels) {\n            var sizeToApply = Math.min(Math.max(sizeInPixels, this.minWidthPx, 0), this.maxWidthPx);\n            this.resizeStrategy.applyColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, sizeToApply);\n        };\n        Resizable.prototype._applyMinWidthPx = function () {\n            this.resizeStrategy.applyMinColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, this.minWidthPx);\n        };\n        Resizable.prototype._applyMaxWidthPx = function () {\n            this.resizeStrategy.applyMaxColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, this.maxWidthPx);\n        };\n        Resizable.prototype._appendInlineHandle = function () {\n            this.inlineHandle = this.document.createElement('div');\n            this.inlineHandle.tabIndex = 0;\n            this.inlineHandle.className = this.getInlineHandleCssClassName();\n            // TODO: Apply correct aria role (probably slider) after a11y spec questions resolved.\n            this.elementRef.nativeElement.appendChild(this.inlineHandle);\n        };\n        Resizable.decorators = [\n            { type: core.Directive }\n        ];\n        return Resizable;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: Take another look at using cdk drag drop. IIRC I ran into a couple\n    // good reasons for not using it but I don't remember what they were at this point.\n    /**\n     * Base class for a component shown over the edge of a resizable column that is responsible\n     * for handling column resize mouse events and displaying any visible UI on the column edge.\n     */\n    var ResizeOverlayHandle = /** @class */ (function () {\n        function ResizeOverlayHandle() {\n            this.destroyed = new rxjs.ReplaySubject();\n        }\n        ResizeOverlayHandle.prototype.ngAfterViewInit = function () {\n            this._listenForMouseEvents();\n        };\n        ResizeOverlayHandle.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n        };\n        ResizeOverlayHandle.prototype._listenForMouseEvents = function () {\n            var _this = this;\n            this.ngZone.runOutsideAngular(function () {\n                var takeUntilDestroyed = operators.takeUntil(_this.destroyed);\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mouseenter').pipe(takeUntilDestroyed, operators.mapTo(_this.resizeRef.origin.nativeElement)).subscribe(function (cell) { return _this.eventDispatcher.headerCellHovered.next(cell); });\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mouseleave').pipe(takeUntilDestroyed, operators.map(function (event) { return event.relatedTarget &&\n                    popoverEdit._closest(event.relatedTarget, HEADER_CELL_SELECTOR); })).subscribe(function (cell) { return _this.eventDispatcher.headerCellHovered.next(cell); });\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mousedown')\n                    .pipe(takeUntilDestroyed).subscribe(function (mousedownEvent) {\n                    _this._dragStarted(mousedownEvent);\n                });\n            });\n        };\n        ResizeOverlayHandle.prototype._dragStarted = function (mousedownEvent) {\n            var _this = this;\n            // Only allow dragging using the left mouse button.\n            if (mousedownEvent.button !== 0) {\n                return;\n            }\n            var mouseup = rxjs.fromEvent(this.document, 'mouseup');\n            var mousemove = rxjs.fromEvent(this.document, 'mousemove');\n            var escape = rxjs.fromEvent(this.document, 'keyup')\n                .pipe(operators.filter(function (event) { return event.keyCode === keycodes.ESCAPE; }));\n            var startX = mousedownEvent.screenX;\n            var initialOverlayOffset = this._getOverlayOffset();\n            var initialSize = this._getOriginWidth();\n            var overlayOffset = initialOverlayOffset;\n            var originOffset = this._getOriginOffset();\n            var size = initialSize;\n            var overshot = 0;\n            this.updateResizeActive(true);\n            mouseup.pipe(operators.takeUntil(escape), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var screenX = _a.screenX;\n                _this._notifyResizeEnded(size, screenX !== startX);\n            });\n            escape.pipe(operators.takeUntil(mouseup), operators.takeUntil(this.destroyed)).subscribe(function () {\n                _this._notifyResizeEnded(initialSize);\n            });\n            mousemove.pipe(operators.map(function (_a) {\n                var screenX = _a.screenX;\n                return screenX;\n            }), operators.startWith(startX), operators.distinctUntilChanged(), operators.pairwise(), operators.takeUntil(mouseup), operators.takeUntil(escape), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var _b = __read(_a, 2), prevX = _b[0], currX = _b[1];\n                var deltaX = currX - prevX;\n                // If the mouse moved further than the resize was able to match, limit the\n                // movement of the overlay to match the actual size and position of the origin.\n                if (overshot !== 0) {\n                    if (overshot < 0 && deltaX < 0 || overshot > 0 && deltaX > 0) {\n                        overshot += deltaX;\n                        return;\n                    }\n                    else {\n                        var remainingOvershot = overshot + deltaX;\n                        overshot = overshot > 0 ?\n                            Math.max(remainingOvershot, 0) : Math.min(remainingOvershot, 0);\n                        deltaX = remainingOvershot - overshot;\n                        if (deltaX === 0) {\n                            return;\n                        }\n                    }\n                }\n                var computedNewSize = size + (_this._isLtr() ? deltaX : -deltaX);\n                computedNewSize = Math.min(Math.max(computedNewSize, _this.resizeRef.minWidthPx, 0), _this.resizeRef.maxWidthPx);\n                _this.resizeNotifier.triggerResize.next({ columnId: _this.columnDef.name, size: computedNewSize });\n                var originNewSize = _this._getOriginWidth();\n                var originNewOffset = _this._getOriginOffset();\n                var originOffsetDeltaX = originNewOffset - originOffset;\n                var originSizeDeltaX = originNewSize - size;\n                size = originNewSize;\n                originOffset = originNewOffset;\n                overshot += deltaX + (_this._isLtr() ? -originSizeDeltaX : originSizeDeltaX);\n                overlayOffset += originSizeDeltaX + originOffsetDeltaX;\n                _this._updateOverlayOffset(overlayOffset);\n            });\n        };\n        ResizeOverlayHandle.prototype.updateResizeActive = function (active) {\n            this.eventDispatcher.overlayHandleActiveForCell.next(active ? this.resizeRef.origin.nativeElement : null);\n        };\n        ResizeOverlayHandle.prototype._getOriginWidth = function () {\n            return this.resizeRef.origin.nativeElement.offsetWidth;\n        };\n        ResizeOverlayHandle.prototype._getOriginOffset = function () {\n            var originElement = this.resizeRef.origin.nativeElement;\n            var offsetLeft = originElement.offsetLeft;\n            return this._isLtr() ?\n                offsetLeft :\n                originElement.offsetParent.offsetWidth - (offsetLeft + this._getOriginWidth());\n        };\n        ResizeOverlayHandle.prototype._getOverlayOffset = function () {\n            var overlayElement = this.resizeRef.overlayRef.overlayElement;\n            return this._isLtr() ?\n                parseInt(overlayElement.style.left, 10) : parseInt(overlayElement.style.right, 10);\n        };\n        ResizeOverlayHandle.prototype._updateOverlayOffset = function (offset) {\n            var overlayElement = this.resizeRef.overlayRef.overlayElement;\n            var overlayOffsetCssValue = coercion.coerceCssPixelValue(offset);\n            if (this._isLtr()) {\n                overlayElement.style.left = overlayOffsetCssValue;\n            }\n            else {\n                overlayElement.style.right = overlayOffsetCssValue;\n            }\n        };\n        ResizeOverlayHandle.prototype._isLtr = function () {\n            return this.directionality.value === 'ltr';\n        };\n        ResizeOverlayHandle.prototype._notifyResizeEnded = function (size, completedSuccessfully) {\n            var _this = this;\n            if (completedSuccessfully === void 0) { completedSuccessfully = false; }\n            this.updateResizeActive(false);\n            this.ngZone.run(function () {\n                var sizeMessage = { columnId: _this.columnDef.name, size: size };\n                if (completedSuccessfully) {\n                    _this.resizeNotifier.resizeCompleted.next(sizeMessage);\n                }\n                else {\n                    _this.resizeNotifier.resizeCanceled.next(sizeMessage);\n                }\n            });\n        };\n        ResizeOverlayHandle.decorators = [\n            { type: core.Directive }\n        ];\n        return ResizeOverlayHandle;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkColumnResize = CdkColumnResize;\n    exports.CdkColumnResizeDefaultEnabledModule = CdkColumnResizeDefaultEnabledModule;\n    exports.CdkColumnResizeFlex = CdkColumnResizeFlex;\n    exports.CdkColumnResizeModule = CdkColumnResizeModule;\n    exports.CdkDefaultEnabledColumnResize = CdkDefaultEnabledColumnResize;\n    exports.CdkDefaultEnabledColumnResizeFlex = CdkDefaultEnabledColumnResizeFlex;\n    exports.CdkFlexTableResizeStrategy = CdkFlexTableResizeStrategy;\n    exports.ColumnResize = ColumnResize;\n    exports.ColumnResizeNotifier = ColumnResizeNotifier;\n    exports.ColumnResizeNotifierSource = ColumnResizeNotifierSource;\n    exports.ColumnSizeStore = ColumnSizeStore;\n    exports.FLEX_RESIZE_STRATEGY_PROVIDER = FLEX_RESIZE_STRATEGY_PROVIDER;\n    exports.HeaderRowEventDispatcher = HeaderRowEventDispatcher;\n    exports.Resizable = Resizable;\n    exports.ResizeOverlayHandle = ResizeOverlayHandle;\n    exports.ResizeRef = ResizeRef;\n    exports.ResizeStrategy = ResizeStrategy;\n    exports.TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER = TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER;\n    exports.TableLayoutFixedResizeStrategy = TableLayoutFixedResizeStrategy;\n    exports.ɵangular_material_src_cdk_experimental_column_resize_column_resize_a = TABLE_PROVIDERS;\n    exports.ɵangular_material_src_cdk_experimental_column_resize_column_resize_b = FLEX_PROVIDERS;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-column-resize.umd.js.map\n"]}