{"version":3,"sources":["src/cdk-experimental/cdk-experimental-column-resize.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","cdkExperimental","columnResize","core","rxjs","operators","popoverEdit","common","cdk","coercion","portal","keycodes","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","HEADER_ROW_SELECTOR","nextId","ColumnResize","destroyed","ReplaySubject","selectorId","ngAfterViewInit","elementRef","nativeElement","classList","add","getUniqueCssClass","_listenForRowHoverEvents","_listenForResizeActivity","_listenForHoverActivity","ngOnDestroy","complete","setResized","_this","ngZone","runOutsideAngular","element","fromEvent","pipe","map","event","_closest","target","takeUntil","subscribe","eventDispatcher","headerCellHovered","filter","relatedTarget","_matches","mapTo","merge","overlayHandleActiveForCell","undefined","notifier","triggerResize","resizeCompleted","take","headerRowHoveredOrActiveDistinct","startWith","pairwise","_a","_b","previousRow","hoveredRow","remove","decorators","type","Directive","ColumnResizeNotifierSource","resizeCanceled","Subject","Injectable","ColumnResizeNotifier","_source","asObservable","resize","columnId","size","completeImmediately","ctorParameters","HeaderRowEventDispatcher","_ngZone","headerCellHoveredDistinct","distinctUntilChanged","share","combineLatest","cell","skip","_headerRowHoveredOrActiveDistinctReenterZone","_enterZone","_lastSeenRow","_lastSeenRowHover","resizeOverlayVisibleForHeaderRow","row","source","Observable","observer","run","err","NgZone","ResizeStrategy","updateTableWidth","delta","table","tableWidth","getElementWidth","style","width","coerceCssPixelValue","TableLayoutFixedResizeStrategy","_super","applyColumnSize","_","columnHeader","sizeInPx","previousSizeInPx","applyMinColumnSize","currentWidth","newWidth","Math","max","applyMaxColumnSize","min","CdkFlexTableResizeStrategy","document","_columnIndexes","Map","_columnProperties","_indexSequence","defaultMinSize","defaultMaxSize","Number","MAX_SAFE_INTEGER","_document","cssFriendlyColumnName","_getAppliedWidth","offsetWidth","cssSize","_applyProperty","getColumnCssClass","_styleElement","parentNode","removeChild","_getPropertyValue","key","_getColumnPropertiesMap","get","cssFriendslyColumnName","coercePixelsFromFlexValue","flexValue","match","enable","properties","set","delete","_applySizeCss","_getStyleSheet","createElement","appendChild","createTextNode","head","sheet","propertyKeys","from","keys","index","deleteRule","columnClassName","selector","body","join","insertRule","Inject","args","DOCUMENT","coercePixelsFromCssValue","cssValue","TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER","provide","useClass","FLEX_RESIZE_STRATEGY_PROVIDER","PROVIDERS","TABLE_PROVIDERS","FLEX_PROVIDERS","CdkColumnResize","columnResizeNotifier","providers","useExisting","ElementRef","CdkColumnResizeFlex","CdkDefaultEnabledColumnResize","CdkDefaultEnabledColumnResizeFlex","CdkColumnResizeDefaultEnabledModule","NgModule","declarations","CdkColumnResizeModule","ColumnSizeStore","ResizeRef","origin","overlayRef","minWidthPx","maxWidthPx","Resizable","minWidthPxInternal","maxWidthPxInternal","defineProperty","_applyMinWidthPx","enumerable","configurable","_applyMaxWidthPx","_listenForResizeEvents","_appendInlineHandle","inlineHandle","dispose","_createOverlayForHandle","isRtl","directionality","positionStrategy","overlay","position","flexibleConnectedTo","withFlexibleDimensions","withGrowAfterOpen","withPush","withDefaultOffsetX","withPositions","originX","originY","overlayX","overlayY","direction","disposeOnNavigation","scrollStrategy","scrollStrategies","reposition","takeUntilDestroyed","hoveringRow","_showHandleOverlay","detach","resizeNotifier","columnSize","columnDef","name","previousSize","_applySize","_completeResizeOperation","_cleanUpAfterResize","hasAttached","_updateOverlayHandleHeight","updatePosition","focus","_createHandlePortal","injector","PortalInjector","WeakMap","ComponentPortal","getOverlayHandleComponentType","viewContainerRef","attach","updateSize","height","offsetHeight","sizeInPixels","sizeToApply","resizeStrategy","cssClassFriendlyName","tabIndex","className","getInlineHandleCssClassName","ResizeOverlayHandle","_listenForMouseEvents","resizeRef","mousedownEvent","_dragStarted","button","mouseup","mousemove","escape","keyCode","ESCAPE","startX","screenX","initialSize","_getOriginWidth","overlayOffset","_getOverlayOffset","originOffset","_getOriginOffset","overshot","updateResizeActive","_notifyResizeEnded","deltaX","remainingOvershot","computedNewSize","_isLtr","originNewSize","originNewOffset","originOffsetDeltaX","originSizeDeltaX","_updateOverlayOffset","active","offsetLeft","parseInt","overlayElement","left","offset","completedSuccessfully","sizeMessage","ɵangular_material_src_cdk_experimental_column_resize_column_resize_a","ɵangular_material_src_cdk_experimental_column_resize_column_resize_b"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs'), require('rxjs/operators'), require('@angular/cdk-experimental/popover-edit'), require('@angular/common'), require('@angular/cdk/coercion'), require('@angular/cdk/portal'), require('@angular/cdk/keycodes')) :\n    typeof define === 'function' && define.amd ? define('@angular/cdk-experimental/column-resize', ['exports', '@angular/core', 'rxjs', 'rxjs/operators', '@angular/cdk-experimental/popover-edit', '@angular/common', '@angular/cdk/coercion', '@angular/cdk/portal', '@angular/cdk/keycodes'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.cdkExperimental = global.ng.cdkExperimental || {}, global.ng.cdkExperimental.columnResize = {}), global.ng.core, global.rxjs, global.rxjs.operators, global.ng.cdkExperimental.popoverEdit, global.ng.common, global.ng.cdk.coercion, global.ng.cdk.portal, global.ng.cdk.keycodes));\n}(this, (function (exports, core, rxjs, operators, popoverEdit, common, coercion, portal, keycodes) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: Figure out how to remove `mat-` classes from the CDK part of the\n    // column resize implementation.\n    var HEADER_CELL_SELECTOR = '.cdk-header-cell, .mat-header-cell';\n    var HEADER_ROW_SELECTOR = '.cdk-header-row, .mat-header-row';\n    var RESIZE_OVERLAY_SELECTOR = '.mat-column-resize-overlay-thumb';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var HOVER_OR_ACTIVE_CLASS = 'cdk-column-resize-hover-or-active';\n    var WITH_RESIZED_COLUMN_CLASS = 'cdk-column-resize-with-resized-column';\n    var nextId = 0;\n    /**\n     * Base class for ColumnResize directives which attach to mat-table elements to\n     * provide common events and services for column resizing.\n     */\n    var ColumnResize = /** @class */ (function () {\n        function ColumnResize() {\n            this.destroyed = new rxjs.ReplaySubject();\n            /** Unique ID for this table instance. */\n            this.selectorId = \"\" + ++nextId;\n        }\n        ColumnResize.prototype.ngAfterViewInit = function () {\n            this.elementRef.nativeElement.classList.add(this.getUniqueCssClass());\n            this._listenForRowHoverEvents();\n            this._listenForResizeActivity();\n            this._listenForHoverActivity();\n        };\n        ColumnResize.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n        };\n        /** Gets the unique CSS class name for this table instance. */\n        ColumnResize.prototype.getUniqueCssClass = function () {\n            return \"cdk-column-resize-\" + this.selectorId;\n        };\n        /** Called when a column in the table is resized. Applies a css class to the table element. */\n        ColumnResize.prototype.setResized = function () {\n            this.elementRef.nativeElement.classList.add(WITH_RESIZED_COLUMN_CLASS);\n        };\n        ColumnResize.prototype._listenForRowHoverEvents = function () {\n            var _this = this;\n            this.ngZone.runOutsideAngular(function () {\n                var element = _this.elementRef.nativeElement;\n                rxjs.fromEvent(element, 'mouseover').pipe(operators.map(function (event) { return popoverEdit._closest(event.target, HEADER_CELL_SELECTOR); }), operators.takeUntil(_this.destroyed)).subscribe(_this.eventDispatcher.headerCellHovered);\n                rxjs.fromEvent(element, 'mouseleave').pipe(operators.filter(function (event) { return !!event.relatedTarget &&\n                    !popoverEdit._matches(event.relatedTarget, RESIZE_OVERLAY_SELECTOR); }), operators.mapTo(null), operators.takeUntil(_this.destroyed)).subscribe(_this.eventDispatcher.headerCellHovered);\n            });\n        };\n        ColumnResize.prototype._listenForResizeActivity = function () {\n            var _this = this;\n            rxjs.merge(this.eventDispatcher.overlayHandleActiveForCell.pipe(operators.mapTo(undefined)), this.notifier.triggerResize.pipe(operators.mapTo(undefined)), this.notifier.resizeCompleted.pipe(operators.mapTo(undefined))).pipe(operators.takeUntil(this.destroyed), operators.take(1)).subscribe(function () {\n                _this.setResized();\n            });\n        };\n        ColumnResize.prototype._listenForHoverActivity = function () {\n            this.eventDispatcher.headerRowHoveredOrActiveDistinct.pipe(operators.startWith(null), operators.pairwise(), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var _b = __read(_a, 2), previousRow = _b[0], hoveredRow = _b[1];\n                if (hoveredRow) {\n                    hoveredRow.classList.add(HOVER_OR_ACTIVE_CLASS);\n                }\n                if (previousRow) {\n                    previousRow.classList.remove(HOVER_OR_ACTIVE_CLASS);\n                }\n            });\n        };\n        ColumnResize.decorators = [\n            { type: core.Directive }\n        ];\n        return ColumnResize;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Originating source of column resize events within a table.\n     * @docs-private\n     */\n    var ColumnResizeNotifierSource = /** @class */ (function () {\n        function ColumnResizeNotifierSource() {\n            /** Emits when an in-progress resize is canceled. */\n            this.resizeCanceled = new rxjs.Subject();\n            /** Emits when a resize is applied. */\n            this.resizeCompleted = new rxjs.Subject();\n            /** Triggers a resize action. */\n            this.triggerResize = new rxjs.Subject();\n        }\n        ColumnResizeNotifierSource.decorators = [\n            { type: core.Injectable }\n        ];\n        return ColumnResizeNotifierSource;\n    }());\n    /** Service for triggering column resizes imperatively or being notified of them. */\n    var ColumnResizeNotifier = /** @class */ (function () {\n        function ColumnResizeNotifier(_source) {\n            this._source = _source;\n            /** Emits whenever a column is resized. */\n            this.resizeCompleted = this._source.resizeCompleted.asObservable();\n        }\n        /** Instantly resizes the specified column. */\n        ColumnResizeNotifier.prototype.resize = function (columnId, size) {\n            this._source.triggerResize.next({ columnId: columnId, size: size, completeImmediately: true });\n        };\n        ColumnResizeNotifier.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        ColumnResizeNotifier.ctorParameters = function () { return [\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return ColumnResizeNotifier;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Coordinates events between the column resize directives. */\n    var HeaderRowEventDispatcher = /** @class */ (function () {\n        function HeaderRowEventDispatcher(_ngZone) {\n            this._ngZone = _ngZone;\n            /**\n             * Emits the currently hovered header cell or null when no header cells are hovered.\n             * Exposed publicly for events to feed in, but subscribers should use headerCellHoveredDistinct,\n             * defined below.\n             */\n            this.headerCellHovered = new rxjs.Subject();\n            /**\n             * Emits the header cell for which a user-triggered resize is active or null\n             * when no resize is in progress.\n             */\n            this.overlayHandleActiveForCell = new rxjs.Subject();\n            /** Distinct and shared version of headerCellHovered. */\n            this.headerCellHoveredDistinct = this.headerCellHovered.pipe(operators.distinctUntilChanged(), operators.share());\n            /**\n             * Emits the header that is currently hovered or hosting an active resize event (with active\n             * taking precedence).\n             */\n            this.headerRowHoveredOrActiveDistinct = rxjs.combineLatest(this.headerCellHoveredDistinct.pipe(operators.map(function (cell) { return popoverEdit._closest(cell, HEADER_ROW_SELECTOR); }), operators.startWith(null), operators.distinctUntilChanged()), this.overlayHandleActiveForCell.pipe(operators.map(function (cell) { return popoverEdit._closest(cell, HEADER_ROW_SELECTOR); }), operators.startWith(null), operators.distinctUntilChanged())).pipe(operators.skip(1), // Ignore initial [null, null] emission.\n            operators.map(function (_a) {\n                var _b = __read(_a, 2), hovered = _b[0], active = _b[1];\n                return active || hovered;\n            }), operators.distinctUntilChanged(), operators.share());\n            this._headerRowHoveredOrActiveDistinctReenterZone = this.headerRowHoveredOrActiveDistinct.pipe(this._enterZone(), operators.share());\n            // Optimization: Share row events observable with subsequent callers.\n            // At startup, calls will be sequential by row (and typically there's only one).\n            this._lastSeenRow = null;\n            this._lastSeenRowHover = null;\n        }\n        /**\n         * Emits whether the specified row should show its overlay controls.\n         * Emission occurs within the NgZone.\n         */\n        HeaderRowEventDispatcher.prototype.resizeOverlayVisibleForHeaderRow = function (row) {\n            if (row !== this._lastSeenRow) {\n                this._lastSeenRow = row;\n                this._lastSeenRowHover = this._headerRowHoveredOrActiveDistinctReenterZone.pipe(operators.map(function (hoveredRow) { return hoveredRow === row; }), operators.distinctUntilChanged(), operators.share());\n            }\n            return this._lastSeenRowHover;\n        };\n        HeaderRowEventDispatcher.prototype._enterZone = function () {\n            var _this = this;\n            return function (source) {\n                return new rxjs.Observable(function (observer) { return source.subscribe({\n                    next: function (value) { return _this._ngZone.run(function () { return observer.next(value); }); },\n                    error: function (err) { return observer.error(err); },\n                    complete: function () { return observer.complete(); }\n                }); });\n            };\n        };\n        HeaderRowEventDispatcher.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        HeaderRowEventDispatcher.ctorParameters = function () { return [\n            { type: core.NgZone }\n        ]; };\n        return HeaderRowEventDispatcher;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides an implementation for resizing a column.\n     * The details of how resizing works for tables for flex mat-tables are quite different.\n     */\n    var ResizeStrategy = /** @class */ (function () {\n        function ResizeStrategy() {\n        }\n        /** Adjusts the width of the table element by the specified delta. */\n        ResizeStrategy.prototype.updateTableWidth = function (delta) {\n            var table = this.columnResize.elementRef.nativeElement;\n            var tableWidth = getElementWidth(table);\n            table.style.width = coercion.coerceCssPixelValue(tableWidth + delta);\n        };\n        ResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        return ResizeStrategy;\n    }());\n    /**\n     * The optimially performing resize strategy for &lt;table&gt; elements with table-layout: fixed.\n     * Tested against and outperformed:\n     *   CSS selector\n     *   CSS selector w/ CSS variable\n     *   Updating all cell nodes\n     */\n    var TableLayoutFixedResizeStrategy = /** @class */ (function (_super) {\n        __extends(TableLayoutFixedResizeStrategy, _super);\n        function TableLayoutFixedResizeStrategy(columnResize) {\n            var _this = _super.call(this) || this;\n            _this.columnResize = columnResize;\n            return _this;\n        }\n        TableLayoutFixedResizeStrategy.prototype.applyColumnSize = function (_, columnHeader, sizeInPx, previousSizeInPx) {\n            var delta = sizeInPx - (previousSizeInPx !== null && previousSizeInPx !== void 0 ? previousSizeInPx : getElementWidth(columnHeader));\n            columnHeader.style.width = coercion.coerceCssPixelValue(sizeInPx);\n            this.updateTableWidth(delta);\n        };\n        TableLayoutFixedResizeStrategy.prototype.applyMinColumnSize = function (_, columnHeader, sizeInPx) {\n            var currentWidth = getElementWidth(columnHeader);\n            var newWidth = Math.max(currentWidth, sizeInPx);\n            this.applyColumnSize(_, columnHeader, newWidth, currentWidth);\n        };\n        TableLayoutFixedResizeStrategy.prototype.applyMaxColumnSize = function (_, columnHeader, sizeInPx) {\n            var currentWidth = getElementWidth(columnHeader);\n            var newWidth = Math.min(currentWidth, sizeInPx);\n            this.applyColumnSize(_, columnHeader, newWidth, currentWidth);\n        };\n        TableLayoutFixedResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        TableLayoutFixedResizeStrategy.ctorParameters = function () { return [\n            { type: ColumnResize }\n        ]; };\n        return TableLayoutFixedResizeStrategy;\n    }(ResizeStrategy));\n    /**\n     * The optimally performing resize strategy for flex mat-tables.\n     * Tested against and outperformed:\n     *   CSS selector w/ CSS variable\n     *   Updating all mat-cell nodes\n     */\n    var CdkFlexTableResizeStrategy = /** @class */ (function (_super) {\n        __extends(CdkFlexTableResizeStrategy, _super);\n        function CdkFlexTableResizeStrategy(columnResize, document) {\n            var _this = _super.call(this) || this;\n            _this.columnResize = columnResize;\n            _this._columnIndexes = new Map();\n            _this._columnProperties = new Map();\n            _this._indexSequence = 0;\n            _this.defaultMinSize = 0;\n            _this.defaultMaxSize = Number.MAX_SAFE_INTEGER;\n            _this._document = document;\n            return _this;\n        }\n        CdkFlexTableResizeStrategy.prototype.applyColumnSize = function (cssFriendlyColumnName, columnHeader, sizeInPx, previousSizeInPx) {\n            // Optimization: Check applied width first as we probably set it already before reading\n            // offsetWidth which triggers layout.\n            var delta = sizeInPx - (previousSizeInPx !== null && previousSizeInPx !== void 0 ? previousSizeInPx : (this._getAppliedWidth(cssFriendlyColumnName) || columnHeader.offsetWidth));\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'flex', \"0 0.01 \" + cssSize);\n            this.updateTableWidth(delta);\n        };\n        CdkFlexTableResizeStrategy.prototype.applyMinColumnSize = function (cssFriendlyColumnName, _, sizeInPx) {\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'min-width', cssSize, sizeInPx !== this.defaultMinSize);\n        };\n        CdkFlexTableResizeStrategy.prototype.applyMaxColumnSize = function (cssFriendlyColumnName, _, sizeInPx) {\n            var cssSize = coercion.coerceCssPixelValue(sizeInPx);\n            this._applyProperty(cssFriendlyColumnName, 'max-width', cssSize, sizeInPx !== this.defaultMaxSize);\n        };\n        CdkFlexTableResizeStrategy.prototype.getColumnCssClass = function (cssFriendlyColumnName) {\n            return \"cdk-column-\" + cssFriendlyColumnName;\n        };\n        CdkFlexTableResizeStrategy.prototype.ngOnDestroy = function () {\n            // TODO: Use remove() once we're off IE11.\n            if (this._styleElement && this._styleElement.parentNode) {\n                this._styleElement.parentNode.removeChild(this._styleElement);\n                this._styleElement = undefined;\n            }\n        };\n        CdkFlexTableResizeStrategy.prototype._getPropertyValue = function (cssFriendlyColumnName, key) {\n            var properties = this._getColumnPropertiesMap(cssFriendlyColumnName);\n            return properties.get(key);\n        };\n        CdkFlexTableResizeStrategy.prototype._getAppliedWidth = function (cssFriendslyColumnName) {\n            return coercePixelsFromFlexValue(this._getPropertyValue(cssFriendslyColumnName, 'flex'));\n        };\n        CdkFlexTableResizeStrategy.prototype._applyProperty = function (cssFriendlyColumnName, key, value, enable) {\n            if (enable === void 0) { enable = true; }\n            var properties = this._getColumnPropertiesMap(cssFriendlyColumnName);\n            if (enable) {\n                properties.set(key, value);\n            }\n            else {\n                properties.delete(key);\n            }\n            this._applySizeCss(cssFriendlyColumnName);\n        };\n        CdkFlexTableResizeStrategy.prototype._getStyleSheet = function () {\n            if (!this._styleElement) {\n                this._styleElement = this._document.createElement('style');\n                this._styleElement.appendChild(this._document.createTextNode(''));\n                this._document.head.appendChild(this._styleElement);\n            }\n            return this._styleElement.sheet;\n        };\n        CdkFlexTableResizeStrategy.prototype._getColumnPropertiesMap = function (cssFriendlyColumnName) {\n            var properties = this._columnProperties.get(cssFriendlyColumnName);\n            if (properties === undefined) {\n                properties = new Map();\n                this._columnProperties.set(cssFriendlyColumnName, properties);\n            }\n            return properties;\n        };\n        CdkFlexTableResizeStrategy.prototype._applySizeCss = function (cssFriendlyColumnName) {\n            var properties = this._getColumnPropertiesMap(cssFriendlyColumnName);\n            var propertyKeys = Array.from(properties.keys());\n            var index = this._columnIndexes.get(cssFriendlyColumnName);\n            if (index === undefined) {\n                if (!propertyKeys.length) {\n                    // Nothing to set or unset.\n                    return;\n                }\n                index = this._indexSequence++;\n                this._columnIndexes.set(cssFriendlyColumnName, index);\n            }\n            else {\n                this._getStyleSheet().deleteRule(index);\n            }\n            var columnClassName = this.getColumnCssClass(cssFriendlyColumnName);\n            var tableClassName = this.columnResize.getUniqueCssClass();\n            var selector = \".\" + tableClassName + \" .\" + columnClassName;\n            var body = propertyKeys.map(function (key) { return key + \":\" + properties.get(key); }).join(';');\n            this._getStyleSheet().insertRule(selector + \" {\" + body + \"}\", index);\n        };\n        CdkFlexTableResizeStrategy.decorators = [\n            { type: core.Injectable }\n        ];\n        /** @nocollapse */\n        CdkFlexTableResizeStrategy.ctorParameters = function () { return [\n            { type: ColumnResize },\n            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }\n        ]; };\n        return CdkFlexTableResizeStrategy;\n    }(ResizeStrategy));\n    /** Converts CSS pixel values to numbers, eg \"123px\" to 123. Returns NaN for non pixel values. */\n    function coercePixelsFromCssValue(cssValue) {\n        var _a;\n        return Number((_a = cssValue.match(/(\\d+)px/)) === null || _a === void 0 ? void 0 : _a[1]);\n    }\n    /** Gets the style.width pixels on the specified element if present, otherwise its offsetWidth. */\n    function getElementWidth(element) {\n        // Optimization: Check style.width first as we probably set it already before reading\n        // offsetWidth which triggers layout.\n        return coercePixelsFromCssValue(element.style.width) || element.offsetWidth;\n    }\n    /**\n     * Converts CSS flex values as set in CdkFlexTableResizeStrategy to numbers,\n     * eg \"0 0.01 123px\" to 123.\n     */\n    function coercePixelsFromFlexValue(flexValue) {\n        var _a;\n        return Number((_a = flexValue === null || flexValue === void 0 ? void 0 : flexValue.match(/0 0\\.01 (\\d+)px/)) === null || _a === void 0 ? void 0 : _a[1]);\n    }\n    var TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER = {\n        provide: ResizeStrategy,\n        useClass: TableLayoutFixedResizeStrategy,\n    };\n    var FLEX_RESIZE_STRATEGY_PROVIDER = {\n        provide: ResizeStrategy,\n        useClass: CdkFlexTableResizeStrategy,\n    };\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PROVIDERS = [\n        ColumnResizeNotifier,\n        HeaderRowEventDispatcher,\n        ColumnResizeNotifierSource,\n    ];\n    var TABLE_PROVIDERS = __spread(PROVIDERS, [\n        TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER,\n    ]);\n    var FLEX_PROVIDERS = __spread(PROVIDERS, [FLEX_RESIZE_STRATEGY_PROVIDER]);\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a table-based cdk-table.\n     * Individual columns must be annotated specifically.\n     */\n    var CdkColumnResize = /** @class */ (function (_super) {\n        __extends(CdkColumnResize, _super);\n        function CdkColumnResize(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[cdk-table][columnResize]',\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkColumnResize.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkColumnResize;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Explicitly enables column resizing for a flexbox-based cdk-table.\n     * Individual columns must be annotated specifically.\n     */\n    var CdkColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(CdkColumnResizeFlex, _super);\n        function CdkColumnResizeFlex(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'cdk-table[columnResize]',\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkColumnResizeFlex.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkColumnResizeFlex;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a table-based cdk-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var CdkDefaultEnabledColumnResize = /** @class */ (function (_super) {\n        __extends(CdkDefaultEnabledColumnResize, _super);\n        function CdkDefaultEnabledColumnResize(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkDefaultEnabledColumnResize.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'table[cdk-table]',\n                        providers: __spread(TABLE_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkDefaultEnabledColumnResize },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkDefaultEnabledColumnResize.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkDefaultEnabledColumnResize;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Implicitly enables column resizing for a flex cdk-table.\n     * Individual columns will be resizable unless opted out.\n     */\n    var CdkDefaultEnabledColumnResizeFlex = /** @class */ (function (_super) {\n        __extends(CdkDefaultEnabledColumnResizeFlex, _super);\n        function CdkDefaultEnabledColumnResizeFlex(columnResizeNotifier, elementRef, eventDispatcher, ngZone, notifier) {\n            var _this = _super.call(this) || this;\n            _this.columnResizeNotifier = columnResizeNotifier;\n            _this.elementRef = elementRef;\n            _this.eventDispatcher = eventDispatcher;\n            _this.ngZone = ngZone;\n            _this.notifier = notifier;\n            return _this;\n        }\n        CdkDefaultEnabledColumnResizeFlex.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'cdk-table',\n                        providers: __spread(FLEX_PROVIDERS, [\n                            { provide: ColumnResize, useExisting: CdkDefaultEnabledColumnResizeFlex },\n                        ]),\n                    },] }\n        ];\n        /** @nocollapse */\n        CdkDefaultEnabledColumnResizeFlex.ctorParameters = function () { return [\n            { type: ColumnResizeNotifier },\n            { type: core.ElementRef },\n            { type: HeaderRowEventDispatcher },\n            { type: core.NgZone },\n            { type: ColumnResizeNotifierSource }\n        ]; };\n        return CdkDefaultEnabledColumnResizeFlex;\n    }(ColumnResize));\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * One of two NgModules for use with CdkColumnResize.\n     * When using this module, columns are resizable by default.\n     */\n    var CdkColumnResizeDefaultEnabledModule = /** @class */ (function () {\n        function CdkColumnResizeDefaultEnabledModule() {\n        }\n        CdkColumnResizeDefaultEnabledModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [CdkDefaultEnabledColumnResize, CdkDefaultEnabledColumnResizeFlex],\n                        exports: [CdkDefaultEnabledColumnResize, CdkDefaultEnabledColumnResizeFlex],\n                    },] }\n        ];\n        return CdkColumnResizeDefaultEnabledModule;\n    }());\n    /**\n     * One of two NgModules for use with CdkColumnResize.\n     * When using this module, columns are not resizable by default.\n     */\n    var CdkColumnResizeModule = /** @class */ (function () {\n        function CdkColumnResizeModule() {\n        }\n        CdkColumnResizeModule.decorators = [\n            { type: core.NgModule, args: [{\n                        declarations: [CdkColumnResize, CdkColumnResizeFlex],\n                        exports: [CdkColumnResize, CdkColumnResizeFlex],\n                    },] }\n        ];\n        return CdkColumnResizeModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Can be provided by the host application to enable persistence of column resize state.\n     */\n    var ColumnSizeStore = /** @class */ (function () {\n        function ColumnSizeStore() {\n        }\n        ColumnSizeStore.decorators = [\n            { type: core.Injectable }\n        ];\n        return ColumnSizeStore;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Tracks state of resize events in progress. */\n    var ResizeRef = /** @class */ (function () {\n        function ResizeRef(origin, overlayRef, minWidthPx, maxWidthPx) {\n            this.origin = origin;\n            this.overlayRef = overlayRef;\n            this.minWidthPx = minWidthPx;\n            this.maxWidthPx = maxWidthPx;\n        }\n        return ResizeRef;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var OVERLAY_ACTIVE_CLASS = 'cdk-resizable-overlay-thumb-active';\n    /**\n     * Base class for Resizable directives which are applied to column headers to make those columns\n     * resizable.\n     */\n    var Resizable = /** @class */ (function () {\n        function Resizable() {\n            this.minWidthPxInternal = 0;\n            this.maxWidthPxInternal = Number.MAX_SAFE_INTEGER;\n            this.destroyed = new rxjs.ReplaySubject();\n        }\n        Object.defineProperty(Resizable.prototype, \"minWidthPx\", {\n            /** The minimum width to allow the column to be sized to. */\n            get: function () {\n                return this.minWidthPxInternal;\n            },\n            set: function (value) {\n                this.minWidthPxInternal = value;\n                if (this.elementRef.nativeElement) {\n                    this.columnResize.setResized();\n                    this._applyMinWidthPx();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Resizable.prototype, \"maxWidthPx\", {\n            /** The maximum width to allow the column to be sized to. */\n            get: function () {\n                return this.maxWidthPxInternal;\n            },\n            set: function (value) {\n                this.maxWidthPxInternal = value;\n                if (this.elementRef.nativeElement) {\n                    this.columnResize.setResized();\n                    this._applyMaxWidthPx();\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Resizable.prototype.ngAfterViewInit = function () {\n            this._listenForRowHoverEvents();\n            this._listenForResizeEvents();\n            this._appendInlineHandle();\n            this._applyMinWidthPx();\n            this._applyMaxWidthPx();\n        };\n        Resizable.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n            if (this.inlineHandle) {\n                this.elementRef.nativeElement.removeChild(this.inlineHandle);\n            }\n            if (this.overlayRef) {\n                this.overlayRef.dispose();\n            }\n        };\n        Resizable.prototype._createOverlayForHandle = function () {\n            // Use of overlays allows us to properly capture click events spanning parts\n            // of two table cells and is also useful for displaying a resize thumb\n            // over both cells and extending it down the table as needed.\n            var isRtl = this.directionality.value === 'rtl';\n            var positionStrategy = this.overlay.position()\n                .flexibleConnectedTo(this.elementRef.nativeElement)\n                .withFlexibleDimensions(false)\n                .withGrowAfterOpen(false)\n                .withPush(false)\n                .withDefaultOffsetX(isRtl ? 1 : 0)\n                .withPositions([{\n                    originX: isRtl ? 'start' : 'end',\n                    originY: 'top',\n                    overlayX: 'center',\n                    overlayY: 'top',\n                }]);\n            return this.overlay.create({\n                // Always position the overlay based on left-indexed coordinates.\n                direction: 'ltr',\n                disposeOnNavigation: true,\n                positionStrategy: positionStrategy,\n                scrollStrategy: this.overlay.scrollStrategies.reposition(),\n                width: '16px',\n            });\n        };\n        Resizable.prototype._listenForRowHoverEvents = function () {\n            var _this = this;\n            var element = this.elementRef.nativeElement;\n            var takeUntilDestroyed = operators.takeUntil(this.destroyed);\n            this.eventDispatcher.resizeOverlayVisibleForHeaderRow(popoverEdit._closest(element, HEADER_ROW_SELECTOR))\n                .pipe(takeUntilDestroyed).subscribe(function (hoveringRow) {\n                if (hoveringRow) {\n                    if (!_this.overlayRef) {\n                        _this.overlayRef = _this._createOverlayForHandle();\n                    }\n                    _this._showHandleOverlay();\n                }\n                else if (_this.overlayRef) {\n                    // todo - can't detach during an active resize - need to work that out\n                    _this.overlayRef.detach();\n                }\n            });\n        };\n        Resizable.prototype._listenForResizeEvents = function () {\n            var _this = this;\n            var takeUntilDestroyed = operators.takeUntil(this.destroyed);\n            rxjs.merge(this.resizeNotifier.resizeCanceled, this.resizeNotifier.triggerResize).pipe(takeUntilDestroyed, operators.filter(function (columnSize) { return columnSize.columnId === _this.columnDef.name; })).subscribe(function (_a) {\n                var size = _a.size, previousSize = _a.previousSize, completeImmediately = _a.completeImmediately;\n                _this.elementRef.nativeElement.classList.add(OVERLAY_ACTIVE_CLASS);\n                _this._applySize(size, previousSize);\n                if (completeImmediately) {\n                    _this._completeResizeOperation();\n                }\n            });\n            rxjs.merge(this.resizeNotifier.resizeCanceled, this.resizeNotifier.resizeCompleted).pipe(takeUntilDestroyed).subscribe(function (columnSize) {\n                _this._cleanUpAfterResize(columnSize);\n            });\n        };\n        Resizable.prototype._completeResizeOperation = function () {\n            var _this = this;\n            this.ngZone.run(function () {\n                _this.resizeNotifier.resizeCompleted.next({\n                    columnId: _this.columnDef.name,\n                    size: _this.elementRef.nativeElement.offsetWidth,\n                });\n            });\n        };\n        Resizable.prototype._cleanUpAfterResize = function (columnSize) {\n            this.elementRef.nativeElement.classList.remove(OVERLAY_ACTIVE_CLASS);\n            if (this.overlayRef && this.overlayRef.hasAttached()) {\n                this._updateOverlayHandleHeight();\n                this.overlayRef.updatePosition();\n                if (columnSize.columnId === this.columnDef.name) {\n                    this.inlineHandle.focus();\n                }\n            }\n        };\n        Resizable.prototype._createHandlePortal = function () {\n            var injector = new portal.PortalInjector(this.injector, new WeakMap([[\n                    ResizeRef,\n                    new ResizeRef(this.elementRef, this.overlayRef, this.minWidthPx, this.maxWidthPx),\n                ]]));\n            return new portal.ComponentPortal(this.getOverlayHandleComponentType(), this.viewContainerRef, injector);\n        };\n        Resizable.prototype._showHandleOverlay = function () {\n            this._updateOverlayHandleHeight();\n            this.overlayRef.attach(this._createHandlePortal());\n        };\n        Resizable.prototype._updateOverlayHandleHeight = function () {\n            this.overlayRef.updateSize({ height: this.elementRef.nativeElement.offsetHeight });\n        };\n        Resizable.prototype._applySize = function (sizeInPixels, previousSize) {\n            var sizeToApply = Math.min(Math.max(sizeInPixels, this.minWidthPx, 0), this.maxWidthPx);\n            this.resizeStrategy.applyColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, sizeToApply, previousSize);\n        };\n        Resizable.prototype._applyMinWidthPx = function () {\n            this.resizeStrategy.applyMinColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, this.minWidthPx);\n        };\n        Resizable.prototype._applyMaxWidthPx = function () {\n            this.resizeStrategy.applyMaxColumnSize(this.columnDef.cssClassFriendlyName, this.elementRef.nativeElement, this.maxWidthPx);\n        };\n        Resizable.prototype._appendInlineHandle = function () {\n            this.inlineHandle = this.document.createElement('div');\n            this.inlineHandle.tabIndex = 0;\n            this.inlineHandle.className = this.getInlineHandleCssClassName();\n            // TODO: Apply correct aria role (probably slider) after a11y spec questions resolved.\n            this.elementRef.nativeElement.appendChild(this.inlineHandle);\n        };\n        Resizable.decorators = [\n            { type: core.Directive }\n        ];\n        return Resizable;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: Take another look at using cdk drag drop. IIRC I ran into a couple\n    // good reasons for not using it but I don't remember what they were at this point.\n    /**\n     * Base class for a component shown over the edge of a resizable column that is responsible\n     * for handling column resize mouse events and displaying any visible UI on the column edge.\n     */\n    var ResizeOverlayHandle = /** @class */ (function () {\n        function ResizeOverlayHandle() {\n            this.destroyed = new rxjs.ReplaySubject();\n        }\n        ResizeOverlayHandle.prototype.ngAfterViewInit = function () {\n            this._listenForMouseEvents();\n        };\n        ResizeOverlayHandle.prototype.ngOnDestroy = function () {\n            this.destroyed.next();\n            this.destroyed.complete();\n        };\n        ResizeOverlayHandle.prototype._listenForMouseEvents = function () {\n            var _this = this;\n            this.ngZone.runOutsideAngular(function () {\n                var takeUntilDestroyed = operators.takeUntil(_this.destroyed);\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mouseenter').pipe(takeUntilDestroyed, operators.mapTo(_this.resizeRef.origin.nativeElement)).subscribe(function (cell) { return _this.eventDispatcher.headerCellHovered.next(cell); });\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mouseleave').pipe(takeUntilDestroyed, operators.map(function (event) { return event.relatedTarget &&\n                    popoverEdit._closest(event.relatedTarget, HEADER_CELL_SELECTOR); })).subscribe(function (cell) { return _this.eventDispatcher.headerCellHovered.next(cell); });\n                rxjs.fromEvent(_this.elementRef.nativeElement, 'mousedown')\n                    .pipe(takeUntilDestroyed).subscribe(function (mousedownEvent) {\n                    _this._dragStarted(mousedownEvent);\n                });\n            });\n        };\n        ResizeOverlayHandle.prototype._dragStarted = function (mousedownEvent) {\n            var _this = this;\n            // Only allow dragging using the left mouse button.\n            if (mousedownEvent.button !== 0) {\n                return;\n            }\n            var mouseup = rxjs.fromEvent(this.document, 'mouseup');\n            var mousemove = rxjs.fromEvent(this.document, 'mousemove');\n            var escape = rxjs.fromEvent(this.document, 'keyup')\n                .pipe(operators.filter(function (event) { return event.keyCode === keycodes.ESCAPE; }));\n            var startX = mousedownEvent.screenX;\n            var initialSize = this._getOriginWidth();\n            var overlayOffset = this._getOverlayOffset();\n            var originOffset = this._getOriginOffset();\n            var size = initialSize;\n            var overshot = 0;\n            this.updateResizeActive(true);\n            mouseup.pipe(operators.takeUntil(escape), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var screenX = _a.screenX;\n                _this._notifyResizeEnded(size, screenX !== startX);\n            });\n            escape.pipe(operators.takeUntil(mouseup), operators.takeUntil(this.destroyed)).subscribe(function () {\n                _this._notifyResizeEnded(initialSize);\n            });\n            mousemove.pipe(operators.map(function (_a) {\n                var screenX = _a.screenX;\n                return screenX;\n            }), operators.startWith(startX), operators.distinctUntilChanged(), operators.pairwise(), operators.takeUntil(mouseup), operators.takeUntil(escape), operators.takeUntil(this.destroyed)).subscribe(function (_a) {\n                var _b = __read(_a, 2), prevX = _b[0], currX = _b[1];\n                var deltaX = currX - prevX;\n                // If the mouse moved further than the resize was able to match, limit the\n                // movement of the overlay to match the actual size and position of the origin.\n                if (overshot !== 0) {\n                    if (overshot < 0 && deltaX < 0 || overshot > 0 && deltaX > 0) {\n                        overshot += deltaX;\n                        return;\n                    }\n                    else {\n                        var remainingOvershot = overshot + deltaX;\n                        overshot = overshot > 0 ?\n                            Math.max(remainingOvershot, 0) : Math.min(remainingOvershot, 0);\n                        deltaX = remainingOvershot - overshot;\n                        if (deltaX === 0) {\n                            return;\n                        }\n                    }\n                }\n                var computedNewSize = size + (_this._isLtr() ? deltaX : -deltaX);\n                computedNewSize = Math.min(Math.max(computedNewSize, _this.resizeRef.minWidthPx, 0), _this.resizeRef.maxWidthPx);\n                _this.resizeNotifier.triggerResize.next({ columnId: _this.columnDef.name, size: computedNewSize, previousSize: size });\n                var originNewSize = _this._getOriginWidth();\n                var originNewOffset = _this._getOriginOffset();\n                var originOffsetDeltaX = originNewOffset - originOffset;\n                var originSizeDeltaX = originNewSize - size;\n                size = originNewSize;\n                originOffset = originNewOffset;\n                overshot += deltaX + (_this._isLtr() ? -originSizeDeltaX : originSizeDeltaX);\n                overlayOffset += originOffsetDeltaX + (_this._isLtr() ? originSizeDeltaX : 0);\n                _this._updateOverlayOffset(overlayOffset);\n            });\n        };\n        ResizeOverlayHandle.prototype.updateResizeActive = function (active) {\n            this.eventDispatcher.overlayHandleActiveForCell.next(active ? this.resizeRef.origin.nativeElement : null);\n        };\n        ResizeOverlayHandle.prototype._getOriginWidth = function () {\n            return this.resizeRef.origin.nativeElement.offsetWidth;\n        };\n        ResizeOverlayHandle.prototype._getOriginOffset = function () {\n            return this.resizeRef.origin.nativeElement.offsetLeft;\n        };\n        ResizeOverlayHandle.prototype._getOverlayOffset = function () {\n            return parseInt(this.resizeRef.overlayRef.overlayElement.style.left, 10);\n        };\n        ResizeOverlayHandle.prototype._updateOverlayOffset = function (offset) {\n            this.resizeRef.overlayRef.overlayElement.style.left = coercion.coerceCssPixelValue(offset);\n        };\n        ResizeOverlayHandle.prototype._isLtr = function () {\n            return this.directionality.value === 'ltr';\n        };\n        ResizeOverlayHandle.prototype._notifyResizeEnded = function (size, completedSuccessfully) {\n            var _this = this;\n            if (completedSuccessfully === void 0) { completedSuccessfully = false; }\n            this.updateResizeActive(false);\n            this.ngZone.run(function () {\n                var sizeMessage = { columnId: _this.columnDef.name, size: size };\n                if (completedSuccessfully) {\n                    _this.resizeNotifier.resizeCompleted.next(sizeMessage);\n                }\n                else {\n                    _this.resizeNotifier.resizeCanceled.next(sizeMessage);\n                }\n            });\n        };\n        ResizeOverlayHandle.decorators = [\n            { type: core.Directive }\n        ];\n        return ResizeOverlayHandle;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkColumnResize = CdkColumnResize;\n    exports.CdkColumnResizeDefaultEnabledModule = CdkColumnResizeDefaultEnabledModule;\n    exports.CdkColumnResizeFlex = CdkColumnResizeFlex;\n    exports.CdkColumnResizeModule = CdkColumnResizeModule;\n    exports.CdkDefaultEnabledColumnResize = CdkDefaultEnabledColumnResize;\n    exports.CdkDefaultEnabledColumnResizeFlex = CdkDefaultEnabledColumnResizeFlex;\n    exports.CdkFlexTableResizeStrategy = CdkFlexTableResizeStrategy;\n    exports.ColumnResize = ColumnResize;\n    exports.ColumnResizeNotifier = ColumnResizeNotifier;\n    exports.ColumnResizeNotifierSource = ColumnResizeNotifierSource;\n    exports.ColumnSizeStore = ColumnSizeStore;\n    exports.FLEX_RESIZE_STRATEGY_PROVIDER = FLEX_RESIZE_STRATEGY_PROVIDER;\n    exports.HeaderRowEventDispatcher = HeaderRowEventDispatcher;\n    exports.Resizable = Resizable;\n    exports.ResizeOverlayHandle = ResizeOverlayHandle;\n    exports.ResizeRef = ResizeRef;\n    exports.ResizeStrategy = ResizeStrategy;\n    exports.TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER = TABLE_LAYOUT_FIXED_RESIZE_STRATEGY_PROVIDER;\n    exports.TableLayoutFixedResizeStrategy = TableLayoutFixedResizeStrategy;\n    exports.ɵangular_material_src_cdk_experimental_column_resize_column_resize_a = TABLE_PROVIDERS;\n    exports.ɵangular_material_src_cdk_experimental_column_resize_column_resize_b = FLEX_PROVIDERS;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=cdk-experimental-column-resize.umd.js.map\n"]}