{"version":3,"file":"radio-button-BiqPDreS.mjs","sources":["../../../../../k8-fastbuild-ST-c646aa77115d/bin/src/cdk-experimental/ui-patterns/radio-group/radio-group.ts","../../../../../k8-fastbuild-ST-c646aa77115d/bin/src/cdk-experimental/ui-patterns/radio-group/radio-button.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed} from '@angular/core';\nimport {KeyboardEventManager} from '../behaviors/event-manager/keyboard-event-manager';\nimport {PointerEventManager} from '../behaviors/event-manager/pointer-event-manager';\nimport {ListFocus, ListFocusInputs} from '../behaviors/list-focus/list-focus';\nimport {ListNavigation, ListNavigationInputs} from '../behaviors/list-navigation/list-navigation';\nimport {ListSelection, ListSelectionInputs} from '../behaviors/list-selection/list-selection';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\nimport {RadioButtonPattern} from './radio-button';\n\n/** The selection operations that the radio group can perform. */\ninterface SelectOptions {\n  selectOne?: boolean;\n}\n\n/** Represents the required inputs for a radio group. */\nexport type RadioGroupInputs<V> = Omit<ListNavigationInputs<RadioButtonPattern<V>>, 'wrap'> &\n  // Radio groups are always single-select.\n  Omit<ListSelectionInputs<RadioButtonPattern<V>, V>, 'multi' | 'selectionMode'> &\n  ListFocusInputs<RadioButtonPattern<V>> & {\n    /** Whether the radio group is disabled. */\n    disabled: SignalLike<boolean>;\n    /** Whether the radio group is readonly. */\n    readonly: SignalLike<boolean>;\n  };\n\n/** Controls the state of a radio group. */\nexport class RadioGroupPattern<V> {\n  /** Controls navigation for the radio group. */\n  navigation: ListNavigation<RadioButtonPattern<V>>;\n\n  /** Controls selection for the radio group. */\n  selection: ListSelection<RadioButtonPattern<V>, V>;\n\n  /** Controls focus for the radio group. */\n  focusManager: ListFocus<RadioButtonPattern<V>>;\n\n  /** Whether the radio group is vertically or horizontally oriented. */\n  orientation: SignalLike<'vertical' | 'horizontal'>;\n\n  /** Whether the radio group is disabled. */\n  disabled = computed(() => this.inputs.disabled() || this.focusManager.isListDisabled());\n\n  /** The currently selected radio button. */\n  selectedItem = computed(() => this.selection.selectedItems()[0]);\n\n  /** Whether the radio group is readonly. */\n  readonly = computed(() => this.selectedItem()?.disabled() || this.inputs.readonly());\n\n  /** The tabindex of the radio group (if using activedescendant). */\n  tabindex = computed(() => this.focusManager.getListTabindex());\n\n  /** The id of the current active radio button (if using activedescendant). */\n  activedescendant = computed(() => this.focusManager.getActiveDescendant());\n\n  /** The key used to navigate to the previous radio button. */\n  prevKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowUp';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n  });\n\n  /** The key used to navigate to the next radio button. */\n  nextKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowDown';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n  });\n\n  /** The keydown event manager for the radio group. */\n  keydown = computed(() => {\n    const manager = new KeyboardEventManager();\n\n    // Readonly mode allows navigation but not selection changes.\n    if (this.readonly()) {\n      return manager\n        .on(this.prevKey, () => this.prev())\n        .on(this.nextKey, () => this.next())\n        .on('Home', () => this.first())\n        .on('End', () => this.last());\n    }\n\n    // Default behavior: navigate and select on arrow keys, home, end.\n    // Space/Enter also select the focused item.\n    return manager\n      .on(this.prevKey, () => this.prev({selectOne: true}))\n      .on(this.nextKey, () => this.next({selectOne: true}))\n      .on('Home', () => this.first({selectOne: true}))\n      .on('End', () => this.last({selectOne: true}))\n      .on(' ', () => this.selection.selectOne())\n      .on('Enter', () => this.selection.selectOne());\n  });\n\n  /** The pointerdown event manager for the radio group. */\n  pointerdown = computed(() => {\n    const manager = new PointerEventManager();\n\n    if (this.readonly()) {\n      // Navigate focus only in readonly mode.\n      return manager.on(e => this.goto(e));\n    }\n\n    // Default behavior: navigate and select on click.\n    return manager.on(e => this.goto(e, {selectOne: true}));\n  });\n\n  constructor(readonly inputs: RadioGroupInputs<V>) {\n    this.orientation = inputs.orientation;\n\n    this.focusManager = new ListFocus(inputs);\n    this.navigation = new ListNavigation({\n      ...inputs,\n      wrap: () => false,\n      focusManager: this.focusManager,\n    });\n    this.selection = new ListSelection({\n      ...inputs,\n      multi: () => false,\n      selectionMode: () => 'follow',\n      focusManager: this.focusManager,\n    });\n  }\n\n  /** Handles keydown events for the radio group. */\n  onKeydown(event: KeyboardEvent) {\n    if (!this.disabled()) {\n      this.keydown().handle(event);\n    }\n  }\n\n  /** Handles pointerdown events for the radio group. */\n  onPointerdown(event: PointerEvent) {\n    if (!this.disabled()) {\n      this.pointerdown().handle(event);\n    }\n  }\n\n  /** Navigates to the first enabled radio button in the group. */\n  first(opts?: SelectOptions) {\n    this._navigate(opts, () => this.navigation.first());\n  }\n\n  /** Navigates to the last enabled radio button in the group. */\n  last(opts?: SelectOptions) {\n    this._navigate(opts, () => this.navigation.last());\n  }\n\n  /** Navigates to the next enabled radio button in the group. */\n  next(opts?: SelectOptions) {\n    this._navigate(opts, () => this.navigation.next());\n  }\n\n  /** Navigates to the previous enabled radio button in the group. */\n  prev(opts?: SelectOptions) {\n    this._navigate(opts, () => this.navigation.prev());\n  }\n\n  /** Navigates to the radio button associated with the given pointer event. */\n  goto(event: PointerEvent, opts?: SelectOptions) {\n    const item = this._getItem(event);\n    this._navigate(opts, () => this.navigation.goto(item));\n  }\n\n  /**\n   * Sets the radio group to its default initial state.\n   *\n   * Sets the active index to the selected radio button if one exists and is focusable.\n   * Otherwise, sets the active index to the first focusable radio button.\n   */\n  setDefaultState() {\n    let firstItem: RadioButtonPattern<V> | null = null;\n\n    for (const item of this.inputs.items()) {\n      if (this.focusManager.isFocusable(item)) {\n        if (!firstItem) {\n          firstItem = item;\n        }\n        if (item.selected()) {\n          this.inputs.activeIndex.set(item.index());\n          return;\n        }\n      }\n    }\n\n    if (firstItem) {\n      this.inputs.activeIndex.set(firstItem.index());\n    }\n  }\n\n  /** Validates the state of the radio group and returns a list of accessibility violations. */\n  validate(): string[] {\n    const violations: string[] = [];\n\n    if (this.selectedItem()?.disabled() && this.inputs.skipDisabled()) {\n      violations.push(\n        \"Accessibility Violation: The selected radio button is disabled while 'skipDisabled' is true, making the selection unreachable via keyboard.\",\n      );\n    }\n\n    return violations;\n  }\n\n  /** Safely performs a navigation operation and updates selection if needed. */\n  private _navigate(opts: SelectOptions = {}, operation: () => boolean) {\n    const moved = operation();\n    if (moved && opts.selectOne) {\n      this.selection.selectOne();\n    }\n  }\n\n  /** Finds the RadioButtonPattern associated with a pointer event target. */\n  private _getItem(e: PointerEvent): RadioButtonPattern<V> | undefined {\n    if (!(e.target instanceof HTMLElement)) {\n      return undefined;\n    }\n\n    // Assumes the target or its ancestor has role=\"radio\"\n    const element = e.target.closest('[role=\"radio\"]');\n    return this.inputs.items().find(i => i.element() === element);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed} from '@angular/core';\nimport {ListSelection, ListSelectionItem} from '../behaviors/list-selection/list-selection';\nimport {ListNavigation, ListNavigationItem} from '../behaviors/list-navigation/list-navigation';\nimport {ListFocus, ListFocusItem} from '../behaviors/list-focus/list-focus';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\n\n/**\n * Represents the properties exposed by a radio group that need to be accessed by a radio button.\n * This exists to avoid circular dependency errors between the radio group and radio button.\n */\ninterface RadioGroupLike<V> {\n  focusManager: ListFocus<RadioButtonPattern<V>>;\n  selection: ListSelection<RadioButtonPattern<V>, V>;\n  navigation: ListNavigation<RadioButtonPattern<V>>;\n}\n\n/** Represents the required inputs for a radio button in a radio group. */\nexport interface RadioButtonInputs<V>\n  extends ListNavigationItem,\n    ListSelectionItem<V>,\n    ListFocusItem {\n  /** A reference to the parent radio group. */\n  group: SignalLike<RadioGroupLike<V> | undefined>;\n}\n\n/** Represents a radio button within a radio group. */\nexport class RadioButtonPattern<V> {\n  /** A unique identifier for the radio button. */\n  id: SignalLike<string>;\n\n  /** The value associated with the radio button. */\n  value: SignalLike<V>;\n\n  /** The position of the radio button within the group. */\n  index = computed(\n    () =>\n      this.group()\n        ?.navigation.inputs.items()\n        .findIndex(i => i.id() === this.id()) ?? -1,\n  );\n\n  /** Whether the radio button is currently the active one (focused). */\n  active = computed(() => this.group()?.focusManager.activeItem() === this);\n\n  /** Whether the radio button is selected. */\n  selected: SignalLike<boolean> = computed(\n    () => !!this.group()?.selection.inputs.value().includes(this.value()),\n  );\n\n  /** Whether the radio button is disabled. */\n  disabled: SignalLike<boolean>;\n\n  /** A reference to the parent radio group. */\n  group: SignalLike<RadioGroupLike<V> | undefined>;\n\n  /** The tabindex of the radio button. */\n  tabindex = computed(() => this.group()?.focusManager.getItemTabindex(this));\n\n  /** The HTML element associated with the radio button. */\n  element: SignalLike<HTMLElement>;\n\n  constructor(readonly inputs: RadioButtonInputs<V>) {\n    this.id = inputs.id;\n    this.value = inputs.value;\n    this.group = inputs.group;\n    this.element = inputs.element;\n    this.disabled = inputs.disabled;\n  }\n}\n"],"names":[],"mappings":"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"}