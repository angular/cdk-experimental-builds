{"version":3,"file":"combobox-ZZC2YlgZ.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/combobox/combobox.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {KeyboardEventManager, PointerEventManager} from '../behaviors/event-manager';\nimport {computed, signal} from '@angular/core';\nimport {SignalLike, WritableSignalLike} from '../behaviors/signal-like/signal-like';\nimport {ListItem} from '../behaviors/list/list';\n\n/** Represents the required inputs for a combobox. */\nexport interface ComboboxInputs<T extends ListItem<V>, V> {\n  /** The controls for the popup associated with the combobox. */\n  popupControls: SignalLike<ComboboxListboxControls<T, V> | ComboboxTreeControls<T, V> | undefined>;\n\n  /** The HTML input element that serves as the combobox input. */\n  inputEl: SignalLike<HTMLInputElement | undefined>;\n\n  /** The HTML element that serves as the combobox container. */\n  containerEl: SignalLike<HTMLElement | undefined>;\n\n  /** The filtering mode for the combobox. */\n  filterMode: SignalLike<'manual' | 'auto-select' | 'highlight'>;\n\n  /** The current value of the combobox. */\n  inputValue?: WritableSignalLike<string>;\n\n  /** The value of the first matching item in the popup. */\n  firstMatch: SignalLike<V | undefined>;\n}\n\n/** An interface that allows combobox popups to expose the necessary controls for the combobox. */\nexport interface ComboboxListboxControls<T extends ListItem<V>, V> {\n  /** A unique identifier for the popup. */\n  id: () => string;\n\n  /** The ARIA role for the popup. */\n  role: SignalLike<'listbox' | 'tree' | 'grid'>;\n\n  /** The ID of the active item in the popup. */\n  activeId: SignalLike<string | undefined>;\n\n  /** The list of items in the popup. */\n  items: SignalLike<T[]>;\n\n  /** Navigates to the given item in the popup. */\n  focus: (item: T) => void;\n\n  /** Navigates to the next item in the popup. */\n  next: () => void;\n\n  /** Navigates to the previous item in the popup. */\n  prev: () => void;\n\n  /** Navigates to the first item in the popup. */\n  first: () => void;\n\n  /** Navigates to the last item in the popup. */\n  last: () => void;\n\n  /** Selects the current item in the popup. */\n  select: (item?: T) => void;\n\n  /** Clears the selection state of the popup. */\n  clearSelection: () => void;\n\n  /** Removes focus from any item in the popup. */\n  unfocus: () => void;\n\n  /** Returns the item corresponding to the given event. */\n  getItem: (e: PointerEvent) => T | undefined;\n\n  /** Returns the currently selected item in the popup. */\n  getSelectedItem: () => T | undefined;\n\n  /** Sets the value of the combobox based on the selected item. */\n  setValue: (value: V | undefined) => void; // For re-setting the value if the popup was destroyed.\n}\n\nexport interface ComboboxTreeControls<T extends ListItem<V>, V>\n  extends ComboboxListboxControls<T, V> {\n  /** Whether the currently active item in the popup is collapsible. */\n  isItemCollapsible: () => boolean;\n\n  /** Expands the currently active item in the popup. */\n  expandItem: () => void;\n\n  /** Collapses the currently active item in the popup. */\n  collapseItem: () => void;\n\n  /** Checks if the currently active item in the popup is expandable. */\n  isItemExpandable: () => boolean;\n\n  /** Expands all nodes in the tree. */\n  expandAll: () => void;\n\n  /** Collapses all nodes in the tree. */\n  collapseAll: () => void;\n}\n\n/** Controls the state of a combobox. */\nexport class ComboboxPattern<T extends ListItem<V>, V> {\n  /** Whether the combobox is expanded. */\n  expanded = signal(false);\n\n  /** The ID of the active item in the combobox. */\n  activedescendant = computed(() => this.inputs.popupControls()?.activeId() ?? null);\n\n  /** The currently highlighted item in the combobox. */\n  highlightedItem = signal<T | undefined>(undefined);\n\n  /** Whether the most recent input event was a deletion. */\n  isDeleting = false;\n\n  /** Whether the combobox is focused. */\n  isFocused = signal(false);\n\n  /** The key used to navigate to the previous item in the list. */\n  expandKey = computed(() => 'ArrowRight'); // TODO: RTL support.\n\n  /** The key used to navigate to the next item in the list. */\n  collapseKey = computed(() => 'ArrowLeft'); // TODO: RTL support.\n\n  /** The ID of the popup associated with the combobox. */\n  popupId = computed(() => this.inputs.popupControls()?.id() || null);\n\n  /** The autocomplete behavior of the combobox. */\n  autocomplete = computed(() => (this.inputs.filterMode() === 'highlight' ? 'both' : 'list'));\n\n  /** The ARIA role of the popup associated with the combobox. */\n  hasPopup = computed(() => this.inputs.popupControls()?.role() || null);\n\n  /** The keydown event manager for the combobox. */\n  keydown = computed(() => {\n    if (!this.expanded()) {\n      return new KeyboardEventManager()\n        .on('ArrowDown', () => this.open({first: true}))\n        .on('ArrowUp', () => this.open({last: true}));\n    }\n\n    const popupControls = this.inputs.popupControls();\n\n    if (!popupControls) {\n      return new KeyboardEventManager();\n    }\n\n    const manager = new KeyboardEventManager()\n      .on('ArrowDown', () => this.next())\n      .on('ArrowUp', () => this.prev())\n      .on('Home', () => this.first())\n      .on('End', () => this.last())\n      .on('Escape', () => {\n        // TODO(wagnermaciel): We may want to fold this logic into the close() method.\n        if (this.inputs.filterMode() === 'highlight' && popupControls.activeId()) {\n          popupControls.unfocus();\n          popupControls.clearSelection();\n\n          const inputEl = this.inputs.inputEl();\n          if (inputEl) {\n            inputEl.value = this.inputs.inputValue!();\n          }\n        } else {\n          this.close();\n          this.inputs.popupControls()?.clearSelection();\n        }\n      }) // TODO: When filter mode is 'highlight', escape should revert to the last committed value.\n      .on('Enter', () => this.select({commit: true, close: true}));\n\n    if (popupControls.role() === 'tree') {\n      const treeControls = popupControls as ComboboxTreeControls<T, V>;\n\n      if (treeControls.isItemExpandable() || treeControls.isItemCollapsible()) {\n        manager.on(this.collapseKey(), () => this.collapseItem());\n      }\n\n      if (treeControls.isItemExpandable()) {\n        manager.on(this.expandKey(), () => this.expandItem());\n      }\n    }\n\n    return manager;\n  });\n\n  /** The pointerup event manager for the combobox. */\n  pointerup = computed(() =>\n    new PointerEventManager().on(e => {\n      const item = this.inputs.popupControls()?.getItem(e);\n\n      if (item) {\n        this.select({item, commit: true, close: true});\n        this.inputs.inputEl()?.focus(); // Return focus to the input after selecting.\n      }\n\n      if (e.target === this.inputs.inputEl()) {\n        this.open();\n      }\n    }),\n  );\n\n  constructor(readonly inputs: ComboboxInputs<T, V>) {}\n\n  /** Handles keydown events for the combobox. */\n  onKeydown(event: KeyboardEvent) {\n    this.keydown().handle(event);\n  }\n\n  /** Handles pointerup events for the combobox. */\n  onPointerup(event: PointerEvent) {\n    this.pointerup().handle(event);\n  }\n\n  /** Handles input events for the combobox. */\n  onInput(event: Event) {\n    const inputEl = this.inputs.inputEl();\n\n    if (!inputEl) {\n      return;\n    }\n\n    this.open();\n    this.inputs.inputValue?.set(inputEl.value);\n    this.isDeleting = event instanceof InputEvent && !!event.inputType.match(/^delete/);\n\n    if (this.inputs.filterMode() === 'manual') {\n      const searchTerm = this.inputs.popupControls()?.getSelectedItem()?.searchTerm();\n\n      if (searchTerm && this.inputs.inputValue!() !== searchTerm) {\n        this.inputs.popupControls()?.clearSelection();\n      }\n    }\n  }\n\n  onFocusIn() {\n    this.isFocused.set(true);\n  }\n\n  /** Handles focus out events for the combobox. */\n  onFocusOut(event: FocusEvent) {\n    if (\n      !(event.relatedTarget instanceof HTMLElement) ||\n      !this.inputs.containerEl()?.contains(event.relatedTarget)\n    ) {\n      this.isFocused.set(false);\n      if (this.inputs.filterMode() !== 'manual') {\n        this.commit();\n      } else {\n        const item = this.inputs\n          .popupControls()\n          ?.items()\n          .find(i => i.searchTerm() === this.inputs.inputEl()?.value);\n\n        if (item) {\n          this.select({item});\n        }\n      }\n\n      this.close();\n    }\n  }\n\n  firstMatch = computed(() => {\n    // TODO(wagnermaciel): Consider whether we should not provide this default behavior for the\n    // listbox. Instead, we may want to allow users to have no match so that typing does not focus\n    // any option.\n    if (this.inputs.popupControls()?.role() === 'listbox') {\n      return this.inputs.popupControls()?.items()[0];\n    }\n\n    return this.inputs\n      .popupControls()\n      ?.items()\n      .find(i => i.value() === this.inputs.firstMatch());\n  });\n\n  onFilter() {\n    // TODO(wagnermaciel)\n    // When the user first interacts with the combobox, the popup will lazily render for the first\n    // time. This is a simple way to detect this and avoid auto-focus & selection logic, but this\n    // should probably be moved to the component layer instead.\n    const isInitialRender = !this.inputs.inputValue?.().length && !this.isDeleting;\n\n    if (isInitialRender) {\n      return;\n    }\n\n    // Avoid refocusing the input if a filter event occurs after focus has left the combobox.\n    if (!this.isFocused()) {\n      return;\n    }\n\n    if (this.inputs.popupControls()?.role() === 'tree') {\n      const treeControls = this.inputs.popupControls() as ComboboxTreeControls<T, V>;\n      this.inputs.inputValue?.().length ? treeControls.expandAll() : treeControls.collapseAll();\n    }\n\n    const item = this.firstMatch();\n\n    if (!item) {\n      this.inputs.popupControls()?.clearSelection();\n      this.inputs.popupControls()?.unfocus();\n      return;\n    }\n\n    this.inputs.popupControls()?.focus(item);\n\n    if (this.inputs.filterMode() !== 'manual') {\n      this.select({item});\n    }\n\n    if (this.inputs.filterMode() === 'highlight' && !this.isDeleting) {\n      this.highlight();\n    }\n  }\n\n  highlight() {\n    const inputEl = this.inputs.inputEl();\n    const item = this.inputs.popupControls()?.getSelectedItem();\n\n    if (!inputEl || !item) {\n      return;\n    }\n\n    const isHighlightable = item\n      .searchTerm()\n      .toLowerCase()\n      .startsWith(this.inputs.inputValue!().toLowerCase());\n\n    if (isHighlightable) {\n      inputEl.value =\n        this.inputs.inputValue!() + item.searchTerm().slice(this.inputs.inputValue!().length);\n      inputEl.setSelectionRange(this.inputs.inputValue!().length, item.searchTerm().length);\n      this.highlightedItem.set(item);\n    }\n  }\n\n  /** Closes the combobox. */\n  close() {\n    this.expanded.set(false);\n    this.inputs.popupControls()?.unfocus();\n  }\n\n  /** Opens the combobox. */\n  open(nav?: {first?: boolean; last?: boolean}) {\n    this.expanded.set(true);\n\n    if (nav?.first) {\n      this.first();\n    }\n    if (nav?.last) {\n      this.last();\n    }\n  }\n\n  /** Navigates to the next focusable item in the combobox popup. */\n  next() {\n    this._navigate(() => this.inputs.popupControls()?.next());\n  }\n\n  /** Navigates to the previous focusable item in the combobox popup. */\n  prev() {\n    this._navigate(() => this.inputs.popupControls()?.prev());\n  }\n\n  /** Navigates to the first focusable item in the combobox popup. */\n  first() {\n    this._navigate(() => this.inputs.popupControls()?.first());\n  }\n\n  /** Navigates to the last focusable item in the combobox popup. */\n  last() {\n    this._navigate(() => this.inputs.popupControls()?.last());\n  }\n\n  collapseItem() {\n    const controls = this.inputs.popupControls() as ComboboxTreeControls<T, V>;\n    this._navigate(() => controls?.collapseItem());\n  }\n\n  expandItem() {\n    const controls = this.inputs.popupControls() as ComboboxTreeControls<T, V>;\n    this._navigate(() => controls?.expandItem());\n  }\n\n  /** Selects an item in the combobox popup. */\n  select(opts: {item?: T; commit?: boolean; close?: boolean} = {}) {\n    this.inputs.popupControls()?.select(opts.item);\n\n    if (opts.commit) {\n      this.commit();\n    }\n    if (opts.close) {\n      this.close();\n    }\n  }\n\n  /** Updates the value of the input based on the currently selected item. */\n  commit() {\n    const inputEl = this.inputs.inputEl();\n    const item = this.inputs.popupControls()?.getSelectedItem();\n\n    if (inputEl && item) {\n      inputEl.value = item.searchTerm();\n      this.inputs.inputValue?.set(item.searchTerm());\n\n      if (this.inputs.filterMode() === 'highlight') {\n        const length = inputEl.value.length;\n        inputEl.setSelectionRange(length, length);\n      }\n    }\n  }\n\n  /** Navigates and handles additional actions based on filter mode. */\n  private _navigate(operation: () => void) {\n    operation();\n\n    if (this.inputs.filterMode() !== 'manual') {\n      this.select();\n    }\n\n    if (this.inputs.filterMode() === 'highlight') {\n      // This is to handle when the user navigates back to the originally highlighted item.\n      // E.g. User types \"Al\", highlights \"Alice\", then navigates down and back up to \"Alice\".\n      const selectedItem = this.inputs.popupControls()?.getSelectedItem();\n\n      if (!selectedItem) {\n        return;\n      }\n\n      if (selectedItem === this.highlightedItem()) {\n        this.highlight();\n      } else {\n        const inputEl = this.inputs.inputEl()!;\n        inputEl.value = selectedItem?.searchTerm()!;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"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"}