{"version":3,"file":"toolbar-CGsEAlA3.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/toolbar/toolbar-widget.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/toolbar/toolbar-widget-group.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/toolbar/toolbar.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed} from '@angular/core';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\nimport {ListItem} from '../behaviors/list/list';\nimport type {ToolbarPattern} from './toolbar';\n\n/** Represents the required inputs for a toolbar widget in a toolbar. */\nexport interface ToolbarWidgetInputs<V>\n  extends Omit<ListItem<V>, 'searchTerm' | 'value' | 'index'> {\n  /** A reference to the parent toolbar. */\n  toolbar: SignalLike<ToolbarPattern<V>>;\n}\n\nexport class ToolbarWidgetPattern<V> implements ListItem<V> {\n  /** A unique identifier for the widget. */\n  readonly id: SignalLike<string>;\n\n  /** The html element that should receive focus. */\n  readonly element: SignalLike<HTMLElement>;\n\n  /** Whether the widget is disabled. */\n  readonly disabled: SignalLike<boolean>;\n\n  /** A reference to the parent toolbar. */\n  readonly toolbar: SignalLike<ToolbarPattern<V>>;\n\n  /** The tabindex of the widgdet. */\n  readonly tabindex = computed(() => this.toolbar().listBehavior.getItemTabindex(this));\n\n  /** The text used by the typeahead search. */\n  readonly searchTerm = () => ''; // Unused because toolbar does not support typeahead.\n\n  /** The value associated with the widget. */\n  readonly value = () => '' as V; // Unused because toolbar does not support selection.\n\n  /** The position of the widget within the toolbar. */\n  readonly index = computed(() => this.toolbar().inputs.items().indexOf(this) ?? -1);\n\n  /** Whether the widget is currently the active one (focused). */\n  readonly active = computed(() => this.toolbar().inputs.activeItem() === this);\n\n  constructor(readonly inputs: ToolbarWidgetInputs<V>) {\n    this.id = inputs.id;\n    this.element = inputs.element;\n    this.disabled = inputs.disabled;\n    this.toolbar = inputs.toolbar;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed} from '@angular/core';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\nimport {ListItem} from '../behaviors/list/list';\nimport type {ToolbarPattern} from './toolbar';\n\n/** An interface that allows sub patterns to expose the necessary controls for the toolbar. */\nexport interface ToolbarWidgetGroupControls {\n  /** Whether the widget group is currently on the first item. */\n  isOnFirstItem(): boolean;\n\n  /** Whether the widget group is currently on the last item. */\n  isOnLastItem(): boolean;\n\n  /** Navigates to the next widget in the group. */\n  next(wrap: boolean): void;\n\n  /** Navigates to the previous widget in the group. */\n  prev(wrap: boolean): void;\n\n  /** Navigates to the first widget in the group. */\n  first(): void;\n\n  /** Navigates to the last widget in the group. */\n  last(): void;\n\n  /** Removes focus from the widget group. */\n  unfocus(): void;\n\n  /** Triggers the action of the currently active widget in the group. */\n  trigger(): void;\n\n  /** Navigates to the widget targeted by a pointer event. */\n  goto(event: PointerEvent): void;\n\n  /** Sets the widget group to its default initial state. */\n  setDefaultState(): void;\n}\n\n/** Represents the required inputs for a toolbar widget group. */\nexport interface ToolbarWidgetGroupInputs<V>\n  extends Omit<ListItem<V>, 'searchTerm' | 'value' | 'index'> {\n  /** A reference to the parent toolbar. */\n  toolbar: SignalLike<ToolbarPattern<V> | undefined>;\n\n  /** The controls for the sub patterns associated with the toolbar. */\n  controls: SignalLike<ToolbarWidgetGroupControls | undefined>;\n}\n\n/** A group of widgets within a toolbar that provides nested navigation. */\nexport class ToolbarWidgetGroupPattern<V> implements ListItem<V> {\n  /** A unique identifier for the widget. */\n  readonly id: SignalLike<string>;\n\n  /** The html element that should receive focus. */\n  readonly element: SignalLike<HTMLElement>;\n\n  /** Whether the widget is disabled. */\n  readonly disabled: SignalLike<boolean>;\n\n  /** A reference to the parent toolbar. */\n  readonly toolbar: SignalLike<ToolbarPattern<V> | undefined>;\n\n  /** The text used by the typeahead search. */\n  readonly searchTerm = () => ''; // Unused because toolbar does not support typeahead.\n\n  /** The value associated with the widget. */\n  readonly value = () => '' as V; // Unused because toolbar does not support selection.\n\n  /** The position of the widget within the toolbar. */\n  readonly index = computed(() => this.toolbar()?.inputs.items().indexOf(this) ?? -1);\n\n  /** The actions that can be performed on the widget group. */\n  readonly controls: SignalLike<ToolbarWidgetGroupControls> = computed(\n    () => this.inputs.controls() ?? this._defaultControls,\n  );\n\n  /** Default toolbar widget group controls when no controls provided. */\n  private readonly _defaultControls: ToolbarWidgetGroupControls = {\n    isOnFirstItem: () => true,\n    isOnLastItem: () => true,\n    next: () => {},\n    prev: () => {},\n    first: () => {},\n    last: () => {},\n    unfocus: () => {},\n    trigger: () => {},\n    goto: () => {},\n    setDefaultState: () => {},\n  };\n\n  constructor(readonly inputs: ToolbarWidgetGroupInputs<V>) {\n    this.id = inputs.id;\n    this.element = inputs.element;\n    this.disabled = inputs.disabled;\n    this.toolbar = inputs.toolbar;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed, signal} from '@angular/core';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\nimport {KeyboardEventManager, PointerEventManager} from '../behaviors/event-manager';\nimport {List, ListInputs} from '../behaviors/list/list';\nimport {ToolbarWidgetPattern} from './toolbar-widget';\nimport {ToolbarWidgetGroupPattern} from './toolbar-widget-group';\n\n/** Represents the required inputs for a toolbar. */\nexport type ToolbarInputs<V> = Omit<\n  ListInputs<ToolbarWidgetPattern<V> | ToolbarWidgetGroupPattern<V>, V>,\n  'multi' | 'typeaheadDelay' | 'value' | 'selectionMode' | 'focusMode'\n> & {\n  /** A function that returns the toolbar item associated with a given element. */\n  getItem: (e: Element) => ToolbarWidgetPattern<V> | ToolbarWidgetGroupPattern<V> | undefined;\n};\n\n/** Controls the state of a toolbar. */\nexport class ToolbarPattern<V> {\n  /** The list behavior for the toolbar. */\n  readonly listBehavior: List<ToolbarWidgetPattern<V> | ToolbarWidgetGroupPattern<V>, V>;\n\n  /** Whether the tablist is vertically or horizontally oriented. */\n  readonly orientation: SignalLike<'vertical' | 'horizontal'>;\n\n  /** Whether disabled items in the group should be skipped when navigating. */\n  readonly skipDisabled: SignalLike<boolean>;\n\n  /** Whether the toolbar is disabled. */\n  readonly disabled = computed(() => this.listBehavior.disabled());\n\n  /** The tabindex of the toolbar (if using activedescendant). */\n  readonly tabindex = computed(() => this.listBehavior.tabindex());\n\n  /** The id of the current active widget (if using activedescendant). */\n  readonly activedescendant = computed(() => this.listBehavior.activedescendant());\n\n  /** The key used to navigate to the previous widget. */\n  private readonly _prevKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowUp';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n  });\n\n  /** The key used to navigate to the next widget. */\n  private readonly _nextKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowDown';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n  });\n\n  /** The alternate key used to navigate to the previous widget. */\n  private readonly _altPrevKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return this.inputs.textDirection() === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n    }\n    return 'ArrowUp';\n  });\n\n  /** The alternate key used to navigate to the next widget. */\n  private readonly _altNextKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return this.inputs.textDirection() === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n    }\n    return 'ArrowDown';\n  });\n\n  /** The keydown event manager for the toolbar. */\n  private readonly _keydown = computed(() => {\n    const manager = new KeyboardEventManager();\n\n    return manager\n      .on(this._nextKey, () => this._next())\n      .on(this._prevKey, () => this._prev())\n      .on(this._altNextKey, () => this._groupNext())\n      .on(this._altPrevKey, () => this._groupPrev())\n      .on(' ', () => this._trigger())\n      .on('Enter', () => this._trigger())\n      .on('Home', () => this._first())\n      .on('End', () => this._last());\n  });\n\n  /** The pointerdown event manager for the toolbar. */\n  private readonly _pointerdown = computed(() => new PointerEventManager().on(e => this._goto(e)));\n\n  /** Navigates to the next widget in the toolbar. */\n  private _next() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      if (!item.disabled() && !item.controls().isOnLastItem()) {\n        item.controls().next(false);\n        return;\n      }\n      item.controls().unfocus();\n    }\n\n    this.listBehavior.next();\n    const newItem = this.inputs.activeItem();\n    if (newItem instanceof ToolbarWidgetGroupPattern) {\n      newItem.controls().first();\n    }\n  }\n\n  /** Navigates to the previous widget in the toolbar. */\n  private _prev() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      if (!item.disabled() && !item.controls().isOnFirstItem()) {\n        item.controls().prev(false);\n        return;\n      }\n      item.controls().unfocus();\n    }\n\n    this.listBehavior.prev();\n    const newItem = this.inputs.activeItem();\n    if (newItem instanceof ToolbarWidgetGroupPattern) {\n      newItem.controls().last();\n    }\n  }\n\n  private _groupNext() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetPattern) return;\n    item?.controls().next(true);\n  }\n\n  private _groupPrev() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetPattern) return;\n    item?.controls().prev(true);\n  }\n\n  /** Triggers the action of the currently active widget. */\n  private _trigger() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      item.controls().trigger();\n    }\n  }\n\n  /** Navigates to the first widget in the toolbar. */\n  private _first() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      item.controls().unfocus();\n    }\n\n    this.listBehavior.first();\n    const newItem = this.inputs.activeItem();\n    if (newItem instanceof ToolbarWidgetGroupPattern) {\n      newItem.controls().first();\n    }\n  }\n\n  /** Navigates to the last widget in the toolbar. */\n  private _last() {\n    const item = this.inputs.activeItem();\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      item.controls().unfocus();\n    }\n\n    this.listBehavior.last();\n    const newItem = this.inputs.activeItem();\n    if (newItem instanceof ToolbarWidgetGroupPattern) {\n      newItem.controls().last();\n    }\n  }\n\n  /** Navigates to the widget targeted by a pointer event. */\n  private _goto(e: PointerEvent) {\n    const item = this.inputs.getItem(e.target as Element);\n    if (!item) return;\n\n    this.listBehavior.goto(item);\n    if (item instanceof ToolbarWidgetGroupPattern) {\n      item.controls().goto(e);\n    }\n  }\n\n  constructor(readonly inputs: ToolbarInputs<V>) {\n    this.orientation = inputs.orientation;\n    this.skipDisabled = inputs.skipDisabled;\n\n    this.listBehavior = new List({\n      ...inputs,\n      multi: () => false,\n      focusMode: () => 'roving',\n      selectionMode: () => 'explicit',\n      value: signal([] as V[]),\n      typeaheadDelay: () => 0, // Toolbar widgets do not support typeahead.\n    });\n  }\n\n  /** Handles keydown events for the toolbar. */\n  onKeydown(event: KeyboardEvent) {\n    if (this.disabled()) return;\n    this._keydown().handle(event);\n  }\n\n  /** Handles pointerdown events for the toolbar. */\n  onPointerdown(event: PointerEvent) {\n    if (this.disabled()) return;\n    this._pointerdown().handle(event);\n  }\n\n  /**\n   * Sets the toolbar to its default initial state.\n   *\n   * Sets the active index to the selected widget if one exists and is focusable.\n   * Otherwise, sets the active index to the first focusable widget.\n   */\n  setDefaultState() {\n    let firstItem: ToolbarWidgetPattern<V> | ToolbarWidgetGroupPattern<V> | null = null;\n\n    for (const item of this.inputs.items()) {\n      if (this.listBehavior.isFocusable(item)) {\n        if (!firstItem) {\n          firstItem = item;\n        }\n      }\n    }\n\n    if (firstItem) {\n      this.inputs.activeItem.set(firstItem);\n    }\n    if (firstItem instanceof ToolbarWidgetGroupPattern) {\n      firstItem.controls().setDefaultState();\n    }\n  }\n\n  /** Validates the state of the toolbar and returns a list of accessibility violations. */\n  validate(): string[] {\n    const violations: string[] = [];\n\n    return violations;\n  }\n}\n"],"names":[],"mappings":"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"}