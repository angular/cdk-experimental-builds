{"version":3,"file":"tabs-D7mgfcPg.mjs","sources":["../../../../../k8-fastbuild-ST-46c76129e412/bin/src/cdk-experimental/ui-patterns/tabs/tabs.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed} from '@angular/core';\nimport {KeyboardEventManager} from '../behaviors/event-manager/keyboard-event-manager';\nimport {PointerEventManager} from '../behaviors/event-manager/pointer-event-manager';\nimport {ListFocus, ListFocusInputs, ListFocusItem} from '../behaviors/list-focus/list-focus';\nimport {\n  ListNavigation,\n  ListNavigationInputs,\n  ListNavigationItem,\n} from '../behaviors/list-navigation/list-navigation';\nimport {\n  ListSelection,\n  ListSelectionInputs,\n  ListSelectionItem,\n} from '../behaviors/list-selection/list-selection';\nimport {\n  ExpansionItem,\n  ExpansionControl,\n  ListExpansionInputs,\n  ListExpansion,\n} from '../behaviors/expansion/expansion';\nimport {SignalLike} from '../behaviors/signal-like/signal-like';\n\n/** The required inputs to tabs. */\nexport interface TabInputs\n  extends ListNavigationItem,\n    ListSelectionItem<string>,\n    ListFocusItem,\n    Omit<ExpansionItem, 'expansionId' | 'expandable'> {\n  /** The parent tablist that controls the tab. */\n  tablist: SignalLike<TabListPattern>;\n\n  /** The remote tabpanel controlled by the tab. */\n  tabpanel: SignalLike<TabPanelPattern | undefined>;\n}\n\n/** A tab in a tablist. */\nexport class TabPattern {\n  /** A global unique identifier for the tab. */\n  id: SignalLike<string>;\n\n  /** A local unique identifier for the tab. */\n  value: SignalLike<string>;\n\n  /** Whether the tab is disabled. */\n  disabled: SignalLike<boolean>;\n\n  /** The html element that should receive focus. */\n  element: SignalLike<HTMLElement>;\n\n  /** Whether this tab has expandable content. */\n  expandable: SignalLike<boolean>;\n\n  /** The unique identifier used by the expansion behavior. */\n  expansionId: SignalLike<string>;\n\n  /** Whether the tab is expanded. */\n  expanded: SignalLike<boolean>;\n\n  /** Whether the tab is active. */\n  active = computed(() => this.inputs.tablist().focusManager.activeItem() === this);\n\n  /** Whether the tab is selected. */\n  selected = computed(\n    () => !!this.inputs.tablist().selection.inputs.value().includes(this.value()),\n  );\n\n  /** The tabindex of the tab. */\n  tabindex = computed(() => this.inputs.tablist().focusManager.getItemTabindex(this));\n\n  /** The id of the tabpanel associated with the tab. */\n  controls = computed(() => this.inputs.tabpanel()?.id());\n\n  constructor(readonly inputs: TabInputs) {\n    this.id = inputs.id;\n    this.value = inputs.value;\n    this.disabled = inputs.disabled;\n    this.element = inputs.element;\n    const expansionControl = new ExpansionControl({\n      ...inputs,\n      expansionId: inputs.value,\n      expandable: () => true,\n      expansionManager: inputs.tablist().expansionManager,\n    });\n    this.expansionId = expansionControl.expansionId;\n    this.expandable = expansionControl.isExpandable;\n    this.expanded = expansionControl.isExpanded;\n  }\n}\n\n/** The required inputs for the tabpanel. */\nexport interface TabPanelInputs {\n  id: SignalLike<string>;\n  tab: SignalLike<TabPattern | undefined>;\n  value: SignalLike<string>;\n}\n\n/** A tabpanel associated with a tab. */\nexport class TabPanelPattern {\n  /** A global unique identifier for the tabpanel. */\n  id: SignalLike<string>;\n\n  /** A local unique identifier for the tabpanel. */\n  value: SignalLike<string>;\n\n  /** Whether the tabpanel is hidden. */\n  hidden = computed(() => this.inputs.tab()?.expanded() === false);\n\n  constructor(readonly inputs: TabPanelInputs) {\n    this.id = inputs.id;\n    this.value = inputs.value;\n  }\n}\n\n/** The selection operations that the tablist can perform. */\ninterface SelectOptions {\n  select?: boolean;\n}\n\n/** The required inputs for the tablist. */\nexport type TabListInputs = ListNavigationInputs<TabPattern> &\n  Omit<ListSelectionInputs<TabPattern, string>, 'multi'> &\n  ListFocusInputs<TabPattern> &\n  Omit<ListExpansionInputs<TabPattern>, 'multiExpandable' | 'expandedIds'> & {\n    disabled: SignalLike<boolean>;\n  };\n\n/** Controls the state of a tablist. */\nexport class TabListPattern {\n  /** Controls navigation for the tablist. */\n  navigation: ListNavigation<TabPattern>;\n\n  /** Controls selection for the tablist. */\n  selection: ListSelection<TabPattern, string>;\n\n  /** Controls focus for the tablist. */\n  focusManager: ListFocus<TabPattern>;\n\n  /** Controls expansion for the tablist. */\n  expansionManager: ListExpansion<TabPattern>;\n\n  /** Whether the tablist is vertically or horizontally oriented. */\n  orientation: SignalLike<'vertical' | 'horizontal'>;\n\n  /** Whether the tablist is disabled. */\n  disabled: SignalLike<boolean>;\n\n  /** The tabindex of the tablist. */\n  tabindex = computed(() => this.focusManager.getListTabindex());\n\n  /** The id of the current active tab. */\n  activedescendant = computed(() => this.focusManager.getActiveDescendant());\n\n  /** Whether selection should follow focus. */\n  followFocus = computed(() => this.inputs.selectionMode() === 'follow');\n\n  /** The key used to navigate to the previous tab in the tablist. */\n  prevKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowUp';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowRight' : 'ArrowLeft';\n  });\n\n  /** The key used to navigate to the next item in the list. */\n  nextKey = computed(() => {\n    if (this.inputs.orientation() === 'vertical') {\n      return 'ArrowDown';\n    }\n    return this.inputs.textDirection() === 'rtl' ? 'ArrowLeft' : 'ArrowRight';\n  });\n\n  /** The keydown event manager for the tablist. */\n  keydown = computed(() => {\n    return new KeyboardEventManager()\n      .on(this.prevKey, () => this.prev({select: this.followFocus()}))\n      .on(this.nextKey, () => this.next({select: this.followFocus()}))\n      .on('Home', () => this.first({select: this.followFocus()}))\n      .on('End', () => this.last({select: this.followFocus()}))\n      .on(' ', () => this._select({select: true}))\n      .on('Enter', () => this._select({select: true}));\n  });\n\n  /** The pointerdown event manager for the tablist. */\n  pointerdown = computed(() => {\n    return new PointerEventManager().on(e => this.goto(e, {select: true}));\n  });\n\n  constructor(readonly inputs: TabListInputs) {\n    this.disabled = inputs.disabled;\n    this.orientation = inputs.orientation;\n\n    this.focusManager = new ListFocus(inputs);\n    this.navigation = new ListNavigation({...inputs, focusManager: this.focusManager});\n\n    this.selection = new ListSelection({\n      ...inputs,\n      multi: () => false,\n      focusManager: this.focusManager,\n    });\n\n    this.expansionManager = new ListExpansion({\n      ...inputs,\n      multiExpandable: () => false,\n      expandedIds: this.inputs.value,\n      focusManager: this.focusManager,\n    });\n  }\n\n  /** Handles keydown events for the tablist. */\n  onKeydown(event: KeyboardEvent) {\n    if (!this.disabled()) {\n      this.keydown().handle(event);\n    }\n  }\n\n  /** The pointerdown event manager for the tablist. */\n  onPointerdown(event: PointerEvent) {\n    if (!this.disabled()) {\n      this.pointerdown().handle(event);\n    }\n  }\n\n  /** Navigates to the first option in the tablist. */\n  first(opts?: SelectOptions) {\n    this.navigation.first();\n    this._select(opts);\n  }\n\n  /** Navigates to the last option in the tablist. */\n  last(opts?: SelectOptions) {\n    this.navigation.last();\n    this._select(opts);\n  }\n\n  /** Navigates to the next option in the tablist. */\n  next(opts?: SelectOptions) {\n    this.navigation.next();\n    this._select(opts);\n  }\n\n  /** Navigates to the previous option in the tablist. */\n  prev(opts?: SelectOptions) {\n    this.navigation.prev();\n    this._select(opts);\n  }\n\n  /** Navigates to the given item in the tablist. */\n  goto(event: PointerEvent, opts?: SelectOptions) {\n    const item = this._getItem(event);\n\n    if (item) {\n      this.navigation.goto(item);\n      this._select(opts);\n    }\n  }\n\n  /** Handles updating selection for the tablist. */\n  private _select(opts?: SelectOptions) {\n    if (opts?.select) {\n      this.selection.selectOne();\n      this.expansionManager.open();\n    }\n  }\n\n  private _getItem(e: PointerEvent) {\n    if (!(e.target instanceof HTMLElement)) {\n      return;\n    }\n\n    const element = e.target.closest('[role=\"tab\"]');\n    return this.inputs.items().find(i => i.element() === element);\n  }\n}\n"],"names":[],"mappings":"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"}