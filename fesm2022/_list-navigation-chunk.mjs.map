{"version":3,"file":"_list-navigation-chunk.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/behaviors/list-focus/list-focus.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/behaviors/list-navigation/list-navigation.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {computed, signal} from '@angular/core';\nimport {SignalLike, WritableSignalLike} from '../signal-like/signal-like';\n\n/** Represents an item in a collection, such as a listbox option, than may receive focus. */\nexport interface ListFocusItem {\n  /** A unique identifier for the item. */\n  id: SignalLike<string>;\n\n  /** The html element that should receive focus. */\n  element: SignalLike<HTMLElement>;\n\n  /** Whether an item is disabled. */\n  disabled: SignalLike<boolean>;\n\n  /** The index of the item in the list. */\n  index: SignalLike<number>;\n}\n\n/** Represents the required inputs for a collection that contains focusable items. */\nexport interface ListFocusInputs<T extends ListFocusItem> {\n  /** The focus strategy used by the list. */\n  focusMode: SignalLike<'roving' | 'activedescendant'>;\n\n  /** Whether the list is disabled. */\n  disabled: SignalLike<boolean>;\n\n  /** The items in the list. */\n  items: SignalLike<T[]>;\n\n  /** The active item. */\n  activeItem: WritableSignalLike<T | undefined>;\n\n  /** Whether disabled items in the list should be skipped when navigating. */\n  skipDisabled: SignalLike<boolean>;\n\n  element: SignalLike<HTMLElement | undefined>;\n}\n\n/** Controls focus for a list of items. */\nexport class ListFocus<T extends ListFocusItem> {\n  /** The last item that was active. */\n  prevActiveItem = signal<T | undefined>(undefined);\n\n  /** The index of the last item that was active. */\n  prevActiveIndex = computed(() => {\n    return this.prevActiveItem() ? this.inputs.items().indexOf(this.prevActiveItem()!) : -1;\n  });\n\n  /** The current active index in the list. */\n  activeIndex = computed(() => {\n    return this.inputs.activeItem() ? this.inputs.items().indexOf(this.inputs.activeItem()!) : -1;\n  });\n\n  constructor(readonly inputs: ListFocusInputs<T>) {}\n\n  /** Whether the list is in a disabled state. */\n  isListDisabled(): boolean {\n    return this.inputs.disabled() || this.inputs.items().every(i => i.disabled());\n  }\n\n  /** The id of the current active item. */\n  getActiveDescendant(): string | undefined {\n    if (this.isListDisabled()) {\n      return undefined;\n    }\n    if (this.inputs.focusMode() === 'roving') {\n      return undefined;\n    }\n    return this.inputs.activeItem()?.id() ?? undefined;\n  }\n\n  /** The tabindex for the list. */\n  getListTabindex(): -1 | 0 {\n    if (this.isListDisabled()) {\n      return 0;\n    }\n    return this.inputs.focusMode() === 'activedescendant' ? 0 : -1;\n  }\n\n  /** Returns the tabindex for the given item. */\n  getItemTabindex(item: T): -1 | 0 {\n    if (this.isListDisabled()) {\n      return -1;\n    }\n    if (this.inputs.focusMode() === 'activedescendant') {\n      return -1;\n    }\n    return this.inputs.activeItem() === item ? 0 : -1;\n  }\n\n  /** Moves focus to the given item if it is focusable. */\n  focus(item: T): boolean {\n    if (this.isListDisabled() || !this.isFocusable(item)) {\n      return false;\n    }\n\n    this.prevActiveItem.set(this.inputs.activeItem());\n    this.inputs.activeItem.set(item);\n\n    this.inputs.focusMode() === 'roving' ? item.element().focus() : this.inputs.element()?.focus();\n\n    return true;\n  }\n\n  /** Returns true if the given item can be navigated to. */\n  isFocusable(item: T): boolean {\n    return !item.disabled() || !this.inputs.skipDisabled();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {SignalLike} from '../signal-like/signal-like';\nimport {ListFocus, ListFocusInputs, ListFocusItem} from '../list-focus/list-focus';\n\n/** Represents an item in a collection, such as a listbox option, than can be navigated to. */\nexport interface ListNavigationItem extends ListFocusItem {}\n\n/** Represents the required inputs for a collection that has navigable items. */\nexport interface ListNavigationInputs<T extends ListNavigationItem> extends ListFocusInputs<T> {\n  /** Whether focus should wrap when navigating. */\n  wrap: SignalLike<boolean>;\n\n  /** Whether the list is vertically or horizontally oriented. */\n  orientation: SignalLike<'vertical' | 'horizontal'>;\n\n  /** The direction that text is read based on the users locale. */\n  textDirection: SignalLike<'rtl' | 'ltr'>;\n}\n\n/** Controls navigation for a list of items. */\nexport class ListNavigation<T extends ListNavigationItem> {\n  constructor(readonly inputs: ListNavigationInputs<T> & {focusManager: ListFocus<T>}) {}\n\n  /** Navigates to the given item. */\n  goto(item?: T): boolean {\n    return item ? this.inputs.focusManager.focus(item) : false;\n  }\n\n  /** Navigates to the next item in the list. */\n  next(): boolean {\n    return this._advance(1);\n  }\n\n  /** Peeks the next item in the list. */\n  peekNext(): T | undefined {\n    return this._peek(1);\n  }\n\n  /** Navigates to the previous item in the list. */\n  prev(): boolean {\n    return this._advance(-1);\n  }\n\n  /** Peeks the previous item in the list. */\n  peekPrev(): T | undefined {\n    return this._peek(-1);\n  }\n\n  /** Navigates to the first item in the list. */\n  first(): boolean {\n    const item = this.inputs.items().find(i => this.inputs.focusManager.isFocusable(i));\n    return item ? this.goto(item) : false;\n  }\n\n  /** Navigates to the last item in the list. */\n  last(): boolean {\n    const items = this.inputs.items();\n    for (let i = items.length - 1; i >= 0; i--) {\n      if (this.inputs.focusManager.isFocusable(items[i])) {\n        return this.goto(items[i]);\n      }\n    }\n    return false;\n  }\n\n  /** Advances to the next or previous focusable item in the list based on the given delta. */\n  private _advance(delta: 1 | -1): boolean {\n    const item = this._peek(delta);\n    return item ? this.goto(item) : false;\n  }\n\n  /** Peeks the next or previous focusable item in the list based on the given delta. */\n  private _peek(delta: 1 | -1): T | undefined {\n    const items = this.inputs.items();\n    const itemCount = items.length;\n    const startIndex = this.inputs.focusManager.activeIndex();\n    const step = (i: number) =>\n      this.inputs.wrap() ? (i + delta + itemCount) % itemCount : i + delta;\n\n    // If wrapping is enabled, this loop ultimately terminates when `i` gets back to `startIndex`\n    // in the case that all options are disabled. If wrapping is disabled, the loop terminates\n    // when the index goes out of bounds.\n    for (let i = step(startIndex); i !== startIndex && i < itemCount && i >= 0; i = step(i)) {\n      if (this.inputs.focusManager.isFocusable(items[i])) {\n        return items[i];\n      }\n    }\n\n    return;\n  }\n}\n"],"names":[],"mappings":"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"}