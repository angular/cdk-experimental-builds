{"version":3,"file":"radio-group.mjs","sources":["../../../../../k8-fastbuild-ST-46c76129e412/bin/src/cdk-experimental/radio-group/radio-group.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  afterRenderEffect,\n  booleanAttribute,\n  computed,\n  contentChildren,\n  Directive,\n  ElementRef,\n  inject,\n  input,\n  linkedSignal,\n  model,\n  signal,\n  WritableSignal,\n} from '@angular/core';\nimport {RadioButtonPattern, RadioGroupPattern} from '../ui-patterns';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {_IdGenerator} from '@angular/cdk/a11y';\n\n// TODO: Move mapSignal to it's own file so it can be reused across components.\n\n/**\n * Creates a new writable signal (signal V) whose value is connected to the given original\n * writable signal (signal T) such that updating signal V updates signal T and vice-versa.\n *\n * This function establishes a two-way synchronization between the source signal and the new mapped\n * signal. When the source signal changes, the mapped signal updates by applying the `transform`\n * function. When the mapped signal is explicitly set or updated, the change is propagated back to\n * the source signal by applying the `reverse` function.\n */\nexport function mapSignal<T, V>(\n  originalSignal: WritableSignal<T>,\n  operations: {\n    transform: (value: T) => V;\n    reverse: (value: V) => T;\n  },\n) {\n  const mappedSignal = linkedSignal(() => operations.transform(originalSignal()));\n  const updateMappedSignal = mappedSignal.update;\n  const setMappedSignal = mappedSignal.set;\n\n  mappedSignal.set = (newValue: V) => {\n    setMappedSignal(newValue);\n    originalSignal.set(operations.reverse(newValue));\n  };\n\n  mappedSignal.update = (updateFn: (value: V) => V) => {\n    updateMappedSignal(oldValue => updateFn(oldValue));\n    originalSignal.update(oldValue => operations.reverse(updateFn(operations.transform(oldValue))));\n  };\n\n  return mappedSignal;\n}\n\n/**\n * A radio button group container.\n *\n * Radio groups are used to group multiple radio buttons or radio group labels so they function as\n * a single form control. The CdkRadioGroup is meant to be used in conjunction with CdkRadioButton\n * as follows:\n *\n * ```html\n * <div cdkRadioGroup>\n *   <label cdkRadioButton value=\"1\">Option 1</label>\n *   <label cdkRadioButton value=\"2\">Option 2</label>\n *   <label cdkRadioButton value=\"3\">Option 3</label>\n * </div>\n * ```\n */\n@Directive({\n  selector: '[cdkRadioGroup]',\n  exportAs: 'cdkRadioGroup',\n  host: {\n    'role': 'radiogroup',\n    'class': 'cdk-radio-group',\n    '[attr.tabindex]': 'pattern.tabindex()',\n    '[attr.aria-readonly]': 'pattern.readonly()',\n    '[attr.aria-disabled]': 'pattern.disabled()',\n    '[attr.aria-orientation]': 'pattern.orientation()',\n    '[attr.aria-activedescendant]': 'pattern.activedescendant()',\n    '(keydown)': 'pattern.onKeydown($event)',\n    '(pointerdown)': 'pattern.onPointerdown($event)',\n    '(focusin)': 'onFocus()',\n  },\n})\nexport class CdkRadioGroup<V> {\n  /** The CdkRadioButtons nested inside of the CdkRadioGroup. */\n  private readonly _cdkRadioButtons = contentChildren(CdkRadioButton, {descendants: true});\n\n  /** A signal wrapper for directionality. */\n  protected textDirection = inject(Directionality).valueSignal;\n\n  /** The RadioButton UIPatterns of the child CdkRadioButtons. */\n  protected items = computed(() => this._cdkRadioButtons().map(radio => radio.pattern));\n\n  /** Whether the radio group is vertically or horizontally oriented. */\n  orientation = input<'vertical' | 'horizontal'>('vertical');\n\n  /** Whether disabled items in the group should be skipped when navigating. */\n  skipDisabled = input(true, {transform: booleanAttribute});\n\n  /** The focus strategy used by the radio group. */\n  focusMode = input<'roving' | 'activedescendant'>('roving');\n\n  /** Whether the radio group is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /** Whether the radio group is readonly. */\n  readonly = input(false, {transform: booleanAttribute});\n\n  /** The value of the currently selected radio button. */\n  value = model<V | null>(null);\n\n  /** The internal selection state for the radio group. */\n  private readonly _value = mapSignal<V | null, V[]>(this.value, {\n    transform: value => (value !== null ? [value] : []),\n    reverse: values => (values.length === 0 ? null : values[0]),\n  });\n\n  /** The RadioGroup UIPattern. */\n  pattern: RadioGroupPattern<V> = new RadioGroupPattern<V>({\n    ...this,\n    items: this.items,\n    value: this._value,\n    activeIndex: signal(0),\n    textDirection: this.textDirection,\n  });\n\n  /** Whether the radio group has received focus yet. */\n  private _hasFocused = signal(false);\n\n  constructor() {\n    afterRenderEffect(() => {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        const violations = this.pattern.validate();\n        for (const violation of violations) {\n          console.error(violation);\n        }\n      }\n    });\n\n    afterRenderEffect(() => {\n      if (!this._hasFocused()) {\n        this.pattern.setDefaultState();\n      }\n    });\n  }\n\n  onFocus() {\n    this._hasFocused.set(true);\n  }\n}\n\n/** A selectable radio button in a CdkRadioGroup. */\n@Directive({\n  selector: '[cdkRadioButton]',\n  exportAs: 'cdkRadioButton',\n  host: {\n    'role': 'radio',\n    'class': 'cdk-radio-button',\n    '[class.cdk-active]': 'pattern.active()',\n    '[attr.tabindex]': 'pattern.tabindex()',\n    '[attr.aria-checked]': 'pattern.selected()',\n    '[attr.aria-disabled]': 'pattern.disabled()',\n    '[id]': 'pattern.id()',\n  },\n})\nexport class CdkRadioButton<V> {\n  /** A reference to the radio button element. */\n  private readonly _elementRef = inject(ElementRef);\n\n  /** The parent CdkRadioGroup. */\n  private readonly _cdkRadioGroup = inject(CdkRadioGroup);\n\n  /** A unique identifier for the radio button. */\n  private readonly _generatedId = inject(_IdGenerator).getId('cdk-radio-button-');\n\n  /** A unique identifier for the radio button. */\n  protected id = computed(() => this._generatedId);\n\n  /** The value associated with the radio button. */\n  protected value = input.required<V>();\n\n  /** The parent RadioGroup UIPattern. */\n  protected group = computed(() => this._cdkRadioGroup.pattern);\n\n  /** A reference to the radio button element to be focused on navigation. */\n  protected element = computed(() => this._elementRef.nativeElement);\n\n  /** Whether the radio button is disabled. */\n  disabled = input(false, {transform: booleanAttribute});\n\n  /** The RadioButton UIPattern. */\n  pattern = new RadioButtonPattern<V>({\n    ...this,\n    id: this.id,\n    value: this.value,\n    group: this.group,\n    element: this.element,\n  });\n}\n"],"names":[],"mappings":"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"}