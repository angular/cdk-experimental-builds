{"version":3,"file":"expansion-BRQMRoGR.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/ui-patterns/behaviors/expansion/expansion.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\nimport {computed} from '@angular/core';\nimport {SignalLike, WritableSignalLike} from '../signal-like/signal-like';\n\n/** Represents an item that can be expanded or collapsed. */\nexport interface ExpansionItem {\n  /** Whether the item is expandable. */\n  expandable: SignalLike<boolean>;\n\n  /** Used to uniquely identify an expansion item. */\n  expansionId: SignalLike<string>;\n\n  /** Whether the expansion is disabled. */\n  disabled: SignalLike<boolean>;\n}\n\nexport interface ExpansionControl extends ExpansionItem {}\n/**\n * Controls a single item's expansion state and interactions,\n * delegating actual state changes to an Expansion manager.\n */\nexport class ExpansionControl {\n  /** Whether this specific item is currently expanded. Derived from the Expansion manager. */\n  readonly isExpanded = computed(() => this.inputs.expansionManager.isExpanded(this));\n\n  /** Whether this item can be expanded. */\n  readonly isExpandable = computed(() => this.inputs.expansionManager.isExpandable(this));\n\n  constructor(readonly inputs: ExpansionItem & {expansionManager: ListExpansion}) {\n    this.expansionId = inputs.expansionId;\n    this.expandable = inputs.expandable;\n    this.disabled = inputs.disabled;\n  }\n\n  /** Requests the Expansion manager to open this item. */\n  open() {\n    this.inputs.expansionManager.open(this);\n  }\n\n  /** Requests the Expansion manager to close this item. */\n  close() {\n    this.inputs.expansionManager.close(this);\n  }\n\n  /** Requests the Expansion manager to toggle this item. */\n  toggle() {\n    this.inputs.expansionManager.toggle(this);\n  }\n}\n\n/** Represents the required inputs for an expansion behavior. */\nexport interface ListExpansionInputs {\n  /** Whether multiple items can be expanded at once. */\n  multiExpandable: SignalLike<boolean>;\n\n  /** An array of ids of the currently expanded items. */\n  expandedIds: WritableSignalLike<string[]>;\n\n  /** An array of expansion items. */\n  items: SignalLike<ExpansionItem[]>;\n\n  /** Whether all expansions are disabled. */\n  disabled: SignalLike<boolean>;\n}\n\n/** Manages the expansion state of a list of items. */\nexport class ListExpansion {\n  /** A signal holding an array of ids of the currently expanded items. */\n  expandedIds: WritableSignalLike<string[]>;\n\n  constructor(readonly inputs: ListExpansionInputs) {\n    this.expandedIds = inputs.expandedIds;\n  }\n\n  /** Opens the specified item. */\n  open(item: ExpansionItem) {\n    if (!this.isExpandable(item)) return;\n    if (this.isExpanded(item)) return;\n    if (!this.inputs.multiExpandable()) {\n      this.closeAll();\n    }\n    this.expandedIds.update(ids => ids.concat(item.expansionId()));\n  }\n\n  /** Closes the specified item. */\n  close(item: ExpansionItem) {\n    if (this.isExpandable(item)) {\n      this.expandedIds.update(ids => ids.filter(id => id !== item.expansionId()));\n    }\n  }\n\n  /** Toggles the expansion state of the specified item. */\n  toggle(item: ExpansionItem) {\n    this.expandedIds().includes(item.expansionId()) ? this.close(item) : this.open(item);\n  }\n\n  /** Opens all focusable items in the list. */\n  openAll() {\n    if (this.inputs.multiExpandable()) {\n      for (const item of this.inputs.items()) {\n        this.open(item);\n      }\n    }\n  }\n\n  /** Closes all focusable items in the list. */\n  closeAll() {\n    for (const item of this.inputs.items()) {\n      this.close(item);\n    }\n  }\n\n  /** Checks whether the specified item is expandable / collapsible. */\n  isExpandable(item: ExpansionItem) {\n    return !this.inputs.disabled() && !item.disabled() && item.expandable();\n  }\n\n  /** Checks whether the specified item is currently expanded. */\n  isExpanded(item: ExpansionItem): boolean {\n    return this.expandedIds().includes(item.expansionId());\n  }\n}\n"],"names":[],"mappings":"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"}