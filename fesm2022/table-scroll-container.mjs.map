{"version":3,"file":"table-scroll-container.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/table-scroll-container/table-scroll-container.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/cdk-experimental/table-scroll-container/table-scroll-container-module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {CSP_NONCE, Directive, ElementRef, OnDestroy, OnInit, inject, DOCUMENT} from '@angular/core';\nimport {_IdGenerator} from '@angular/cdk/a11y';\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {_getShadowRoot} from '@angular/cdk/platform';\nimport {\n  STICKY_POSITIONING_LISTENER,\n  StickyPositioningListener,\n  StickySize,\n  StickyUpdate,\n} from '@angular/cdk/table';\n\n/**\n * Applies styles to the host element that make its scrollbars match up with\n * the non-sticky scrollable portions of the CdkTable contained within.\n *\n * This visual effect only works in Webkit and Blink based browsers (eg Chrome,\n * Safari, Edge). Other browsers such as Firefox will gracefully degrade to\n * normal scrollbar appearance.\n * Further note: These styles have no effect when the browser is using OS-default\n * scrollbars. The easiest way to force them into custom mode is to specify width\n * and height for the scrollbar and thumb.\n */\n@Directive({\n  selector: '[cdkTableScrollContainer]',\n  host: {\n    'class': 'cdk-table-scroll-container',\n  },\n  providers: [{provide: STICKY_POSITIONING_LISTENER, useExisting: CdkTableScrollContainer}],\n})\nexport class CdkTableScrollContainer implements StickyPositioningListener, OnDestroy, OnInit {\n  private readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n  private readonly _document = inject<Document>(DOCUMENT);\n  private readonly _directionality = inject(Directionality, {optional: true});\n  private readonly _nonce = inject(CSP_NONCE, {optional: true});\n\n  private readonly _uniqueClassName = inject(_IdGenerator).getId('cdk-table-scroll-container-');\n  private _styleRoot!: Node;\n  private _styleElement?: HTMLStyleElement;\n\n  /** The most recent sticky column size values from the CdkTable. */\n  private _startSizes: StickySize[] = [];\n  private _endSizes: StickySize[] = [];\n  private _headerSizes: StickySize[] = [];\n  private _footerSizes: StickySize[] = [];\n\n  ngOnInit() {\n    this._elementRef.nativeElement.classList.add(this._uniqueClassName);\n    this._styleRoot = _getShadowRoot(this._elementRef.nativeElement) ?? this._document.head;\n  }\n\n  ngOnDestroy(): void {\n    this._styleElement?.remove();\n    this._styleElement = undefined;\n  }\n\n  stickyColumnsUpdated({sizes}: StickyUpdate): void {\n    this._startSizes = sizes;\n    this._updateScrollbar();\n  }\n\n  stickyEndColumnsUpdated({sizes}: StickyUpdate): void {\n    this._endSizes = sizes;\n    this._updateScrollbar();\n  }\n\n  stickyHeaderRowsUpdated({sizes}: StickyUpdate): void {\n    this._headerSizes = sizes;\n    this._updateScrollbar();\n  }\n\n  stickyFooterRowsUpdated({sizes}: StickyUpdate): void {\n    this._footerSizes = sizes;\n    this._updateScrollbar();\n  }\n\n  /**\n   * Set padding on the scrollbar track based on the sticky states from CdkTable.\n   */\n  private _updateScrollbar(): void {\n    const topMargin = computeMargin(this._headerSizes);\n    const bottomMargin = computeMargin(this._footerSizes);\n    const startMargin = computeMargin(this._startSizes);\n    const endMargin = computeMargin(this._endSizes);\n\n    if (topMargin === 0 && bottomMargin === 0 && startMargin === 0 && endMargin === 0) {\n      this._clearCss();\n      return;\n    }\n\n    const direction = this._directionality ? this._directionality.value : 'ltr';\n    const leftMargin = direction === 'rtl' ? endMargin : startMargin;\n    const rightMargin = direction === 'rtl' ? startMargin : endMargin;\n\n    this._applyCss(`${topMargin}px ${rightMargin}px ${bottomMargin}px ${leftMargin}px`);\n  }\n\n  /** Gets the stylesheet for the scrollbar styles and creates it if need be. */\n  private _getStyleSheet(): CSSStyleSheet {\n    if (!this._styleElement) {\n      this._styleElement = this._document.createElement('style');\n\n      if (this._nonce) {\n        this._styleElement.setAttribute('nonce', this._nonce);\n      }\n\n      this._styleRoot.appendChild(this._styleElement);\n    }\n\n    return this._styleElement.sheet as CSSStyleSheet;\n  }\n\n  /** Updates the stylesheet with the specified scrollbar style. */\n  private _applyCss(value: string) {\n    this._clearCss();\n\n    const selector = `.${this._uniqueClassName}::-webkit-scrollbar-track`;\n    this._getStyleSheet().insertRule(`${selector} {margin: ${value}}`, 0);\n  }\n\n  private _clearCss() {\n    const styleSheet = this._getStyleSheet();\n    if (styleSheet.cssRules.length > 0) {\n      styleSheet.deleteRule(0);\n    }\n  }\n}\n\nfunction computeMargin(sizes: (number | null | undefined)[]): number {\n  let margin = 0;\n  for (const size of sizes) {\n    if (size == null) {\n      break;\n    }\n    margin += size;\n  }\n  return margin;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {CdkTableScrollContainer} from './table-scroll-container';\n\n@NgModule({\n  imports: [CdkTableScrollContainer],\n  exports: [CdkTableScrollContainer],\n})\nexport class CdkTableScrollContainerModule {}\n"],"names":["_startSizes","_endSizes","_headerSizes","_footerSizes","ngOnInit","_elementRef","nativeElement","classList","add","_uniqueClassName","_document","head","ngOnDestroy","_styleElement","remove","undefined","sizes","stickyEndColumnsUpdated","_updateScrollbar","stickyHeaderRowsUpdated","stickyFooterRowsUpdated","topMargin","computeMargin","bottomMargin","_clearCss","direction","_directionality","value","leftMargin","startMargin","rightMargin","endMargin","_applyCss","createElement","_nonce","setAttribute","_styleRoot","appendChild","sheet","selector","_getStyleSheet","insertRule","i0","ɵɵngDeclareClassMetadata","minVersion","version","ngImport","type","CdkTableScrollContainerModule","decorators"],"mappings":"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"}