{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-interface.ts","../../../../../../src/cdk-experimental/menu/menu-item-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-item-selectable.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu-errors.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-item-radio.ts","../../../../../../src/cdk-experimental/menu/menu-item-checkbox.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Menu} from './menu-interface';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu?: Menu;\n\n  constructor(readonly _templateRef: TemplateRef<unknown>) {}\n\n  /**\n   * Set the Menu component on the menu panel. Since we cannot use ContentChild to fetch the\n   * child Menu component, the child Menu must register its self with the parent MenuPanel.\n   */\n  _registerMenu(child: Menu) {\n    this._menu = child;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Injection token used to return classes implementing the Menu interface */\nexport const CDK_MENU = new InjectionToken<Menu>('cdk-menu');\n\n/** Interface which specifies Menu operations and used to break circular dependency issues */\nexport interface Menu {\n  /** The orientation of the menu */\n  orientation: 'horizontal' | 'vertical';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  OverlayRef,\n  Overlay,\n  OverlayConfig,\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\n\n/**\n * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n * hover regardless of its sibling state.\n *\n * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n * functionality.\n */\n@Directive({\n  selector: '[cdkMenuItem][cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuTriggerFor',\n  host: {\n    'aria-haspopup': 'menu',\n    '[attr.aria-expanded]': 'isMenuOpen()',\n  },\n})\nexport class CdkMenuItemTrigger implements OnDestroy {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor') _menuPanel?: CdkMenuPanel;\n\n  /** Emits when the attached menu is requested to open */\n  @Output('cdkMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close */\n  @Output('cdkMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** A reference to the overlay which manages the triggered menu */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _panelContent: TemplatePortal;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _directionality: Directionality,\n    @Inject(CDK_MENU) private readonly _parentMenu: Menu\n  ) {}\n\n  /** Open/close the attached menu if the trigger has been configured with one */\n  toggle() {\n    if (this.hasMenu()) {\n      this.isMenuOpen() ? this._closeMenu() : this._openMenu();\n    }\n  }\n\n  /** Return true if the trigger has an attached menu */\n  hasMenu() {\n    return !!this._menuPanel;\n  }\n\n  /** Whether the menu this button is a trigger for is open */\n  isMenuOpen() {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /** Open the attached menu */\n  private _openMenu() {\n    this.opened.next();\n\n    this._overlayRef = this._overlay.create(this._getOverlayConfig());\n    this._overlayRef.attach(this._getPortal());\n  }\n\n  /** Close the opened menu */\n  private _closeMenu() {\n    if (this.isMenuOpen()) {\n      this.closed.next();\n\n      this._overlayRef!.detach();\n    }\n  }\n\n  /** Get the configuration object used to create the overlay */\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /** Build the position strategy for the overlay which specifies where to place the menu */\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /** Determine and return where to position the opened menu relative to the menu item */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    // TODO: use a common positioning config from (possibly) cdk/overlay\n    return this._parentMenu.orientation === 'horizontal'\n      ? [\n          {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n          {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n          {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n        ]\n      : [\n          {originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top'},\n          {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top'},\n          {originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'},\n        ];\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getPortal() {\n    if (!this._panelContent || this._panelContent.templateRef !== this._menuPanel?._templateRef) {\n      this._panelContent = new TemplatePortal(\n        this._menuPanel!._templateRef,\n        this._viewContainerRef\n      );\n    }\n    return this._panelContent;\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n  }\n\n  /** Destroy and unset the overlay reference it if exists */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, Optional, Self} from '@angular/core';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\n\n/**\n * Directive which provides the ability for an element to be focused and navigated to using the\n * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n * behavior when clicked.\n */\n@Directive({\n  selector: '[cdkMenuItem]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    'type': 'button',\n    'role': 'menuitem',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n})\nexport class CdkMenuItem {\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  constructor(\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    @Self() @Optional() private readonly _menuTrigger?: CdkMenuItemTrigger\n  ) {}\n\n  /** Open the menu if one is attached */\n  trigger() {\n    if (!this.disabled && this.hasMenu()) {\n      this._menuTrigger!.toggle();\n    }\n  }\n\n  /** Whether the menu item opens a menu. */\n  hasMenu() {\n    return !!this._menuTrigger && this._menuTrigger.hasMenu();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Input, Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/** Counter used to set a unique id and name for a selectable item */\nlet nextId = 0;\n\n/**\n * Base class providing checked state for MenuItems along with outputting a clicked event when the\n * element is triggered. It provides functionality for selectable elements.\n */\n@Directive()\nexport abstract class CdkMenuItemSelectable extends CdkMenuItem {\n  /** Event emitted when the selectable item is clicked */\n  @Output() clicked: EventEmitter<CdkMenuItemSelectable> = new EventEmitter();\n\n  /** Whether the element is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** The name of the selectable element with a default value */\n  @Input() name: string = `cdk-selectable-item-${nextId++}`;\n\n  /** The id of the selectable element with a default value */\n  @Input() id: string = `cdk-selectable-item-${nextId++}`;\n\n  /** If the element is not disabled emit the click event */\n  trigger() {\n    if (!this.disabled) {\n      this.clicked.next(this);\n    }\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  AfterContentInit,\n  QueryList,\n  OnDestroy,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n  },\n  providers: [{provide: UniqueSelectionDispatcher, useClass: UniqueSelectionDispatcher}],\n})\nexport class CdkMenuGroup implements AfterContentInit, OnDestroy {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() readonly change: EventEmitter<CdkMenuItem> = new EventEmitter();\n\n  /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n  @ContentChildren(CdkMenuItemSelectable, {descendants: true})\n  private readonly _selectableItems: QueryList<CdkMenuItemSelectable>;\n\n  /** Emits when the _selectableItems QueryList triggers a change */\n  private readonly _selectableChanges: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this._registerMenuSelectionListeners();\n  }\n\n  /**\n   * Register the child selectable elements with the change emitter and ensure any new child\n   * elements do so as well.\n   */\n  private _registerMenuSelectionListeners() {\n    this._selectableItems.forEach(selectable => this._registerClickListener(selectable));\n\n    this._selectableItems.changes.subscribe((selectableItems: QueryList<CdkMenuItemSelectable>) => {\n      this._selectableChanges.next();\n      selectableItems.forEach(selectable => this._registerClickListener(selectable));\n    });\n  }\n\n  /** Register each selectable to emit on the change Emitter when clicked */\n  private _registerClickListener(selectable: CdkMenuItemSelectable) {\n    selectable.clicked\n      .pipe(takeUntil(this._selectableChanges))\n      .subscribe(() => this.change.next(selectable));\n  }\n\n  ngOnDestroy() {\n    this._selectableChanges.next();\n    this._selectableChanges.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when the CdkMenuPanel cannot be injected and the developer did not\n * explicitly provide a reference to the enclosing CdkMenuPanel.\n * @docs-private\n */\nexport function throwMissingMenuPanelError() {\n  throw Error(\n    'CdkMenu must be placed inside a CdkMenuPanel or a reference to CdkMenuPanel' +\n      ' must be explicitly provided if using ViewEngine'\n  );\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {throwMissingMenuPanelError} from './menu-errors';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessible keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menu',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenu},\n    {provide: CDK_MENU, useExisting: CdkMenu},\n  ],\n})\nexport class CdkMenu extends CdkMenuGroup implements Menu, AfterContentInit, OnDestroy {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  /** List of nested CdkMenuGroup elements */\n  @ContentChildren(CdkMenuGroup, {descendants: true})\n  private readonly _nestedGroups: QueryList<CdkMenuGroup>;\n\n  /**\n   * A reference to the enclosing parent menu panel.\n   *\n   * Required to be set when using ViewEngine since ViewEngine does support injecting a reference to\n   * the parent directive if the parent directive is placed on an `ng-template`. If using Ivy, the\n   * injected value will be used over this one.\n   */\n  @Input('cdkMenuPanel') private readonly _explicitPanel?: CdkMenuPanel;\n\n  constructor(@Optional() private readonly _menuPanel?: CdkMenuPanel) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._completeChangeEmitter();\n    this._registerWithParentPanel();\n  }\n\n  /** Register this menu with its enclosing parent menu panel */\n  private _registerWithParentPanel() {\n    const parent = this._getMenuPanel();\n    if (parent) {\n      parent._registerMenu(this);\n    } else {\n      throwMissingMenuPanelError();\n    }\n  }\n\n  /**\n   * Get the enclosing CdkMenuPanel defaulting to the injected reference over the developer\n   * provided reference.\n   */\n  private _getMenuPanel() {\n    return this._menuPanel || this._explicitPanel;\n  }\n\n  /**\n   * Complete the change emitter if there are any nested MenuGroups or register to complete the\n   * change emitter if a MenuGroup is rendered at some point\n   */\n  private _completeChangeEmitter() {\n    if (this._hasNestedGroups()) {\n      this.change.complete();\n    } else {\n      this._nestedGroups.changes.pipe(take(1)).subscribe(() => this.change.complete());\n    }\n  }\n\n  /** Return true if there are nested CdkMenuGroup elements within the Menu */\n  private _hasNestedGroups() {\n    // view engine has a bug where @ContentChildren will return the current element\n    // along with children if the selectors match - not just the children.\n    // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n    // order to ensure that we return true iff there are child CdkMenuGroup elements.\n    return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n  }\n\n  ngOnDestroy() {\n    this._emitClosedEvent();\n  }\n\n  /** Emit and complete the closed event emitter */\n  private _emitClosedEvent() {\n    this.closed.next();\n    this.closed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkMenuGroup} from './menu-group';\nimport {CDK_MENU, Menu} from './menu-interface';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenuBar},\n    {provide: CDK_MENU, useExisting: CdkMenuBar},\n  ],\n})\nexport class CdkMenuBar extends CdkMenuGroup implements Menu {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {Directive, OnDestroy} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\n\n/**\n * A directive providing behavior for the the \"menuitemradio\" ARIA role, which behaves similarly to\n * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n */\n@Directive({\n  selector: '[cdkMenuItemRadio]',\n  exportAs: 'cdkMenuItemRadio',\n  host: {\n    '(click)': 'trigger()',\n    'type': 'button',\n    'role': 'menuitemradio',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [{provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio}],\n})\nexport class CdkMenuItemRadio extends CdkMenuItemSelectable implements OnDestroy {\n  /** Function to unregister the selection dispatcher */\n  private _removeDispatcherListener: () => void;\n\n  constructor(private readonly _selectionDispatcher: UniqueSelectionDispatcher) {\n    super();\n\n    this._registerDispatcherListener();\n  }\n\n  /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n  private _registerDispatcherListener() {\n    this._removeDispatcherListener = this._selectionDispatcher.listen(\n      (id: string, name: string) => (this.checked = this.id === id && this.name === name)\n    );\n  }\n\n  /** Toggles the checked state of the radio-button. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this._selectionDispatcher.notify(this.id, this.name);\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeDispatcherListener();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\n\n/**\n * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n * conventional checkbox.\n */\n@Directive({\n  selector: '[cdkMenuItemCheckbox]',\n  exportAs: 'cdkMenuItemCheckbox',\n  host: {\n    '(click)': 'trigger()',\n    'type': 'button',\n    'role': 'menuitemcheckbox',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [{provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox}],\n})\nexport class CdkMenuItemCheckbox extends CdkMenuItemSelectable {\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuItemRadio} from './menu-item-radio';\nimport {CdkMenuItemCheckbox} from './menu-item-checkbox';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkMenuBar,\n  CdkMenu,\n  CdkMenuPanel,\n  CdkMenuItem,\n  CdkMenuItemRadio,\n  CdkMenuItemCheckbox,\n  CdkMenuItemTrigger,\n  CdkMenuGroup,\n];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-item-checkbox';\nexport * from './menu-item-radio';\nexport * from './menu-item-trigger';\nexport * from './menu-panel';\nexport * from './menu-group';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CDK_MENU as Éµangular_material_src_cdk_experimental_menu_menu_b,Menu as Éµangular_material_src_cdk_experimental_menu_menu_c} from './menu-interface';\nexport {CdkMenuItemSelectable as Éµangular_material_src_cdk_experimental_menu_menu_a} from './menu-item-selectable';"],"names":[],"mappings":"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"}