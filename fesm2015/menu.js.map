{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessable keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n})\nexport class CdkMenu {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  /** Emits the activated element when checkbox or radiobutton state changed  */\n  @Output() change: EventEmitter<CdkMenuItem>;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessable keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n})\nexport class CdkMenuBar {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenu} from './menu';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu: CdkMenu;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, Input, EventEmitter} from '@angular/core';\nimport {CdkMenuPanel} from './menu-panel';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\n\n/**\n * Directive which provides behavior for an element which when clicked:\n *  If located in a CdkMenuBar:\n *    - opens up an attached submenu\n *\n *  If located in a CdkMenu/CdkMenuGroup, one of:\n *    - executes the user defined click handler\n *    - toggles its checkbox state\n *    - toggles its radio button state (in relation to siblings)\n *\n * If it's in a CdkMenu and it triggers a sub-menu, hovering over the\n * CdkMenuItem will open the submenu.\n *\n */\n@Directive({\n  selector: '[cdkMenuItem], [cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    'type': 'button',\n    '[attr.role]': 'role',\n    '[attr.aria-checked]': '_getAriaChecked()',\n  },\n})\nexport class CdkMenuItem {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor') _menuPanel: CdkMenuPanel;\n\n  /** ARIA role for the menu item. */\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n  /** Whether the checkbox or radiobutton is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** Emits when the attached submenu is opened */\n  @Output() opened: EventEmitter<void> = new EventEmitter();\n\n  /** get the aria-checked value only if element is `menuitemradio` or `menuitemcheckbox` */\n  _getAriaChecked(): boolean | null {\n    if (this.role === 'menuitem') {\n      return null;\n    }\n    return this.checked;\n  }\n\n  /** Whether the menu item opens a menu */\n  hasSubmenu() {\n    return !!this._menuPanel;\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n  },\n})\nexport class CdkMenuGroup {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() change: EventEmitter<CdkMenuItem> = new EventEmitter();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\n\nconst EXPORTED_DECLARATIONS = [CdkMenuBar, CdkMenu, CdkMenuPanel, CdkMenuItem, CdkMenuGroup];\n@NgModule({\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-panel';\nexport * from './menu-group';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;AAAA;;;;;;;AAQA,AAGA;;;;;;;AAeA,MAAa,OAAO;IARpB;;;;;QAa+B,gBAAW,GAA8B,UAAU,CAAC;;QAG9D,WAAM,GAAoD,IAAI,YAAY,EAAE,CAAC;KAIjG;;;YApBA,SAAS,SAAC;gBACT,QAAQ,EAAE,WAAW;gBACrB,QAAQ,EAAE,SAAS;gBACnB,IAAI,EAAE;oBACJ,MAAM,EAAE,SAAS;oBACjB,yBAAyB,EAAE,aAAa;iBACzC;aACF;;;0BAME,KAAK,SAAC,oBAAoB;qBAG1B,MAAM;qBAGN,MAAM;;;ACrCT;;;;;;;AAQA,AAEA;;;;;;AAcA,MAAa,UAAU;IARvB;;;;;QAakC,gBAAW,GAA8B,YAAY,CAAC;KACvF;;;YAdA,SAAS,SAAC;gBACT,QAAQ,EAAE,cAAc;gBACxB,QAAQ,EAAE,YAAY;gBACtB,IAAI,EAAE;oBACJ,MAAM,EAAE,SAAS;oBACjB,yBAAyB,EAAE,aAAa;iBACzC;aACF;;;0BAME,KAAK,SAAC,uBAAuB;;;AC7BhC;;;;;;;AAQA,AAGA;;;;AAKA,MAAa,YAAY;;;YADxB,SAAS,SAAC,EAAC,QAAQ,EAAE,2BAA2B,EAAE,QAAQ,EAAE,cAAc,EAAC;;;ACf5E;;;;;;;AAQA,AAIA;;;;;;;;;;;;;;AAuBA,MAAa,WAAW;IATxB;;QAcW,SAAI,GAAsD,UAAU,CAAC;QAUtE,aAAQ,GAAG,KAAK,CAAC;;QAGf,WAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;KAgB3D;;IA1BC,IACI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC9C;;IAOD,eAAe;QACb,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;YAC5B,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;IAGD,UAAU;QACR,OAAO,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;KAC1B;;;YAxCF,SAAS,SAAC;gBACT,QAAQ,EAAE,oCAAoC;gBAC9C,QAAQ,EAAE,aAAa;gBACvB,IAAI,EAAE;oBACJ,MAAM,EAAE,QAAQ;oBAChB,aAAa,EAAE,MAAM;oBACrB,qBAAqB,EAAE,mBAAmB;iBAC3C;aACF;;;yBAGE,KAAK,SAAC,mBAAmB;mBAGzB,KAAK;sBAGL,KAAK;qBAUL,MAAM;;;ACrDT;;;;;;;AAQA,AAGA;;;;AAWA,MAAa,YAAY;IAPzB;;QASY,WAAM,GAA8B,IAAI,YAAY,EAAE,CAAC;KAClE;;;YAVA,SAAS,SAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,cAAc;gBACxB,IAAI,EAAE;oBACJ,MAAM,EAAE,OAAO;iBAChB;aACF;;;qBAGE,MAAM;;;ACxBT;;;;;;;AAQA,AAOA,MAAM,qBAAqB,GAAG,CAAC,UAAU,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;AAK7F,MAAa,aAAa;;;YAJzB,QAAQ,SAAC;gBACR,OAAO,EAAE,qBAAqB;gBAC9B,YAAY,EAAE,qBAAqB;aACpC;;;ACnBD;;;;;;GAMG;;ACNH;;GAEG;;;;"}