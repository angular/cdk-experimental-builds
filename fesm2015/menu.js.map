{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu-interface.ts","../../../../../../src/cdk-experimental/menu/menu-errors.ts","../../../../../../src/cdk-experimental/menu/menu-item-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-item-selectable.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-stack.ts","../../../../../../src/cdk-experimental/menu/item-pointer-entries.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-item-radio.ts","../../../../../../src/cdk-experimental/menu/menu-item-checkbox.ts","../../../../../../src/cdk-experimental/menu/context-menu.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {MenuStackItem} from './menu-stack';\nimport {FocusOrigin} from '@angular/cdk/a11y';\n\n/** Injection token used to return classes implementing the Menu interface */\nexport const CDK_MENU = new InjectionToken<Menu>('cdk-menu');\n\n/** Interface which specifies Menu operations and used to break circular dependency issues */\nexport interface Menu extends MenuStackItem {\n  /** The orientation of the menu */\n  orientation: 'horizontal' | 'vertical';\n\n  /** Place focus on the first MenuItem in the menu. */\n  focusFirstItem(focusOrigin: FocusOrigin): void;\n\n  /** Place focus on the last MenuItem in the menu. */\n  focusLastItem(focusOrigin: FocusOrigin): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when a menu panel already has a menu stack.\n * @docs-private\n */\nexport function throwExistingMenuStackError() {\n  throw Error(\n    'CdkMenuPanel is already referenced by different CdkMenuTrigger. Ensure that a menu is' +\n      ' opened by a single trigger only.'\n  );\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  ViewContainerRef,\n  Inject,\n  OnDestroy,\n  Optional,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  OverlayRef,\n  Overlay,\n  OverlayConfig,\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {SPACE, ENTER, RIGHT_ARROW, LEFT_ARROW, DOWN_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {FocusNext} from './menu-stack';\nimport {throwExistingMenuStackError} from './menu-errors';\n\n/**\n * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n * hover regardless of its sibling state.\n *\n * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n * functionality.\n */\n@Directive({\n  selector: '[cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuTriggerFor',\n  host: {\n    '(keydown)': '_toggleOnKeydown($event)',\n    '(mouseenter)': '_toggleOnMouseEnter()',\n    '(click)': 'toggle()',\n    'tabindex': '-1',\n    'aria-haspopup': 'menu',\n    '[attr.aria-expanded]': 'isMenuOpen()',\n  },\n})\nexport class CdkMenuItemTrigger implements OnDestroy {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor')\n  get menuPanel(): CdkMenuPanel | undefined {\n    return this._menuPanel;\n  }\n  set menuPanel(panel: CdkMenuPanel | undefined) {\n    // If the provided panel already has a stack, that means it already has a trigger configured.\n    // Note however that there are some edge cases where two triggers **may** share the same menu,\n    // e.g. two triggers in two separate menus.\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && panel?._menuStack) {\n      throwExistingMenuStackError();\n    }\n\n    this._menuPanel = panel;\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = this._getMenuStack();\n    }\n  }\n\n  /** Reference to the MenuPanel this trigger toggles. */\n  private _menuPanel?: CdkMenuPanel;\n\n  /** Emits when the attached menu is requested to open */\n  @Output('cdkMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close */\n  @Output('cdkMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** A reference to the overlay which manages the triggered menu */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _panelContent: TemplatePortal;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    @Inject(CDK_MENU) private readonly _parentMenu: Menu,\n    @Optional() private readonly _directionality?: Directionality\n  ) {}\n\n  /** Open/close the attached menu if the trigger has been configured with one */\n  toggle() {\n    if (this.hasMenu()) {\n      this.isMenuOpen() ? this.closeMenu() : this.openMenu();\n    }\n  }\n\n  /** Open the attached menu. */\n  openMenu() {\n    if (!this.isMenuOpen()) {\n      this.opened.next();\n\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPortal());\n    }\n  }\n\n  /** Close the opened menu. */\n  closeMenu() {\n    if (this.isMenuOpen()) {\n      this.closed.next();\n\n      this._overlayRef!.detach();\n    }\n    this._closeSiblingTriggers();\n  }\n\n  /** Return true if the trigger has an attached menu */\n  hasMenu() {\n    return !!this.menuPanel;\n  }\n\n  /** Whether the menu this button is a trigger for is open */\n  isMenuOpen() {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this.menuPanel?._menu;\n  }\n\n  /**\n   * If there are existing open menus and this menu is not open, close sibling menus and open\n   * this one.\n   */\n  _toggleOnMouseEnter() {\n    const menuStack = this._getMenuStack();\n    const isSiblingMenuOpen = !menuStack?.isEmpty() && !this.isMenuOpen();\n    if (isSiblingMenuOpen) {\n      this._closeSiblingTriggers();\n      this.openMenu();\n    }\n  }\n\n  /**\n   * Handles keyboard events for the menu item, specifically opening/closing the attached menu and\n   * focusing the appropriate submenu item.\n   * @param event the keyboard event to handle\n   */\n  _toggleOnKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        this.menuPanel?._menu?.focusFirstItem('keyboard');\n        break;\n\n      case RIGHT_ARROW:\n        if (this._isParentVertical()) {\n          event.preventDefault();\n          if (this._directionality?.value === 'rtl') {\n            this._getMenuStack()?.close(this._parentMenu, FocusNext.currentItem);\n          } else {\n            this.openMenu();\n            this.menuPanel?._menu?.focusFirstItem('keyboard');\n          }\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._isParentVertical()) {\n          event.preventDefault();\n          if (this._directionality?.value === 'rtl') {\n            this.openMenu();\n            this.menuPanel?._menu?.focusFirstItem('keyboard');\n          } else {\n            this._getMenuStack()?.close(this._parentMenu, FocusNext.currentItem);\n          }\n        }\n        break;\n\n      case DOWN_ARROW:\n      case UP_ARROW:\n        if (!this._isParentVertical()) {\n          event.preventDefault();\n          this.openMenu();\n          keyCode === DOWN_ARROW\n            ? this.menuPanel?._menu?.focusFirstItem('keyboard')\n            : this.menuPanel?._menu?.focusLastItem('keyboard');\n        }\n        break;\n    }\n  }\n\n  /** Close out any sibling menu trigger menus. */\n  private _closeSiblingTriggers() {\n    const menuStack = this._getMenuStack();\n\n    // If nothing was removed from the stack and the last element is not the parent item\n    // that means that the parent menu is a menu bar since we don't put the menu bar on the\n    // stack\n    const isParentMenuBar =\n      !menuStack?.closeSubMenuOf(this._parentMenu) && menuStack?.peek() !== this._parentMenu;\n\n    if (isParentMenuBar) {\n      menuStack?.closeAll();\n    }\n  }\n\n  /** Get the configuration object used to create the overlay */\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /** Build the position strategy for the overlay which specifies where to place the menu */\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /** Determine and return where to position the opened menu relative to the menu item */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    // TODO: use a common positioning config from (possibly) cdk/overlay\n    return this._parentMenu.orientation === 'horizontal'\n      ? [\n          {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n          {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n          {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n        ]\n      : [\n          {originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top'},\n          {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\n          {originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top'},\n          {originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'},\n        ];\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getPortal() {\n    const hasMenuContentChanged = this.menuPanel?._templateRef !== this._panelContent?.templateRef;\n    if (this.menuPanel && (!this._panelContent || hasMenuContentChanged)) {\n      this._panelContent = new TemplatePortal(this.menuPanel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  /**\n   * @return true if if the enclosing parent menu is configured in a vertical orientation.\n   */\n  private _isParentVertical() {\n    return this._parentMenu.orientation === 'vertical';\n  }\n\n  /** Get the menu stack from the parent. */\n  private _getMenuStack() {\n    // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n    // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n    // we want to use it.\n    return this._parentMenu._menuStack;\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this._resetPanelMenuStack();\n  }\n\n  /** Set the menu panels menu stack back to null. */\n  private _resetPanelMenuStack() {\n    // If a CdkMenuTrigger is placed in a submenu, each time the trigger is rendered (its parent\n    // menu is opened) the panel setter for CdkMenuPanel is called. From the first render onward,\n    // the attached CdkMenuPanel has the MenuStack set. Since we throw an error if a panel already\n    // has a stack set, we want to reset the attached stack here to prevent the error from being\n    // thrown if the trigger re-configures its attached panel (in the case where there is a 1:1\n    // relationship between the panel and trigger).\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = null;\n    }\n  }\n\n  /** Destroy and unset the overlay reference it if exists */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Optional,\n  Self,\n  ElementRef,\n  Output,\n  EventEmitter,\n  Inject,\n  HostListener,\n  NgZone,\n  OnDestroy,\n} from '@angular/core';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {SPACE, ENTER, RIGHT_ARROW, LEFT_ARROW} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Subject, fromEvent} from 'rxjs';\nimport {takeUntil, filter} from 'rxjs/operators';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {FocusNext} from './menu-stack';\nimport {FocusableElement} from './item-pointer-entries';\n\n// TODO refactor this to be configurable allowing for custom elements to be removed\n/** Removes all icons from within the given element. */\nfunction removeIcons(element: Element) {\n  for (const icon of Array.from(element.querySelectorAll('mat-icon, .material-icons'))) {\n    icon.parentNode?.removeChild(icon);\n  }\n}\n\n/**\n * Directive which provides the ability for an element to be focused and navigated to using the\n * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n * behavior when clicked.\n */\n@Directive({\n  selector: '[cdkMenuItem]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitem',\n    'class': 'cdk-menu-item',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n})\nexport class CdkMenuItem implements FocusableOption, FocusableElement, OnDestroy {\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * If this MenuItem is a regular MenuItem, outputs when it is triggered by a keyboard or mouse\n   * event.\n   */\n  @Output('cdkMenuItemTriggered') triggered: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * The tabindex for this menu item managed internally and used for implementing roving a\n   * tab index.\n   */\n  _tabindex: 0 | -1 = -1;\n\n  /** Emits when the menu item is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(\n    readonly _elementRef: ElementRef<HTMLElement>,\n    @Inject(CDK_MENU) private readonly _parentMenu: Menu,\n    private readonly _ngZone: NgZone,\n    @Optional() private readonly _dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItem` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() private readonly _menuTrigger?: CdkMenuItemTrigger\n  ) {\n    this._setupMouseEnter();\n  }\n\n  /** Place focus on the element. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('blur')\n  @HostListener('mouseout')\n  /** Reset the _tabindex to -1. */\n  _resetTabIndex() {\n    this._tabindex = -1;\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  @HostListener('mouseenter', ['$event'])\n  /**\n   * Set the tab index to 0 if not disabled and it's a focus event, or a mouse enter if this element\n   * is not in a menu bar.\n   */\n  _setTabIndex(event?: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    // don't set the tabindex if there are no open sibling or parent menus\n    if (!event || !this._getMenuStack()?.isEmpty()) {\n      this._tabindex = 0;\n    }\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('click')\n  /**\n   * If the menu item is not disabled and the element does not have a menu trigger attached, emit\n   * on the cdkMenuItemTriggered emitter and close all open menus.\n   */\n  trigger() {\n    if (!this.disabled && !this.hasMenu()) {\n      this.triggered.next();\n      this._getMenuStack()?.closeAll();\n    }\n  }\n\n  /** Whether the menu item opens a menu. */\n  hasMenu() {\n    return !!this._menuTrigger?.hasMenu();\n  }\n\n  /** Return true if this MenuItem has an attached menu and it is open. */\n  isMenuOpen() {\n    return !!this._menuTrigger?.isMenuOpen();\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this._menuTrigger?.getMenu();\n  }\n\n  /** Get the MenuItemTrigger associated with this element. */\n  getMenuTrigger(): CdkMenuItemTrigger | undefined {\n    return this._menuTrigger;\n  }\n\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel(): string {\n    // TODO cloning the tree may be expensive; implement a better method\n    // we know that the current node is an element type\n    const clone = this._elementRef.nativeElement.cloneNode(true) as Element;\n    removeIcons(clone);\n\n    return clone.textContent?.trim() || '';\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /**\n   * Handles keyboard events for the menu item, specifically either triggering the user defined\n   * callback or opening/closing the current menu based on whether the left or right arrow key was\n   * pressed.\n   * @param event the keyboard event to handle\n   */\n  _onKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.trigger();\n        break;\n\n      case RIGHT_ARROW:\n        if (this._isParentVertical() && !this.hasMenu()) {\n          event.preventDefault();\n          this._dir?.value === 'rtl'\n            ? this._getMenuStack()?.close(this._parentMenu, FocusNext.previousItem)\n            : this._getMenuStack()?.closeAll(FocusNext.nextItem);\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._isParentVertical() && !this.hasMenu()) {\n          event.preventDefault();\n          this._dir?.value === 'rtl'\n            ? this._getMenuStack()?.closeAll(FocusNext.nextItem)\n            : this._getMenuStack()?.close(this._parentMenu, FocusNext.previousItem);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Subscribe to the mouseenter events and close any sibling menu items if this element is moused\n   * into.\n   */\n  private _setupMouseEnter() {\n    this._ngZone.runOutsideAngular(() =>\n      fromEvent(this._elementRef.nativeElement, 'mouseenter')\n        .pipe(\n          filter(() => !this._getMenuStack()?.isEmpty() && !this.hasMenu()),\n          takeUntil(this._destroyed)\n        )\n        .subscribe(() => {\n          this._ngZone.run(() => this._getMenuStack()?.closeSubMenuOf(this._parentMenu));\n        })\n    );\n  }\n\n  /** Return true if the enclosing parent menu is configured in a horizontal orientation. */\n  private _isParentVertical() {\n    return this._parentMenu.orientation === 'vertical';\n  }\n\n  /** Get the MenuStack from the parent menu. */\n  private _getMenuStack() {\n    // We use a function since at the construction of the MenuItemTrigger the parent Menu won't have\n    // its menu stack set. Therefore we need to reference the menu stack from the parent each time\n    // we want to use it.\n    return this._parentMenu._menuStack;\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Input, Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/** Counter used to set a unique id and name for a selectable item */\nlet nextId = 0;\n\n/**\n * Base class providing checked state for MenuItems along with outputting a clicked event when the\n * element is triggered. It provides functionality for selectable elements.\n */\n@Directive()\nexport abstract class CdkMenuItemSelectable extends CdkMenuItem {\n  /** Event emitted when the selectable item is clicked */\n  @Output('cdkMenuItemToggled') toggled: EventEmitter<CdkMenuItemSelectable> = new EventEmitter();\n\n  /** Whether the element is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** The name of the selectable element with a default value */\n  @Input() name: string = `cdk-selectable-item-${nextId++}`;\n\n  /** The id of the selectable element with a default value */\n  @Input() id: string = `cdk-selectable-item-${nextId++}`;\n\n  /** If the element is not disabled emit the click event */\n  trigger() {\n    if (!this.disabled) {\n      this.toggled.next(this);\n    }\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  AfterContentInit,\n  QueryList,\n  OnDestroy,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n    'class': 'cdk-menu-group',\n  },\n  providers: [{provide: UniqueSelectionDispatcher, useClass: UniqueSelectionDispatcher}],\n})\nexport class CdkMenuGroup implements AfterContentInit, OnDestroy {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() readonly change: EventEmitter<CdkMenuItem> = new EventEmitter();\n\n  /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n  @ContentChildren(CdkMenuItemSelectable, {descendants: true})\n  private readonly _selectableItems: QueryList<CdkMenuItemSelectable>;\n\n  /** Emits when the _selectableItems QueryList triggers a change */\n  private readonly _selectableChanges: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this._registerMenuSelectionListeners();\n  }\n\n  /**\n   * Register the child selectable elements with the change emitter and ensure any new child\n   * elements do so as well.\n   */\n  private _registerMenuSelectionListeners() {\n    this._selectableItems.forEach(selectable => this._registerClickListener(selectable));\n\n    this._selectableItems.changes.subscribe((selectableItems: QueryList<CdkMenuItemSelectable>) => {\n      this._selectableChanges.next();\n      selectableItems.forEach(selectable => this._registerClickListener(selectable));\n    });\n  }\n\n  /** Register each selectable to emit on the change Emitter when clicked */\n  private _registerClickListener(selectable: CdkMenuItemSelectable) {\n    selectable.toggled\n      .pipe(takeUntil(this._selectableChanges))\n      .subscribe(() => this.change.next(selectable));\n  }\n\n  ngOnDestroy() {\n    this._selectableChanges.next();\n    this._selectableChanges.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Menu} from './menu-interface';\nimport {MenuStack} from './menu-stack';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu?: Menu;\n\n  /** Keep track of open Menus. */\n  _menuStack: MenuStack | null;\n\n  constructor(readonly _templateRef: TemplateRef<unknown>) {}\n\n  /**\n   * Set the Menu component on the menu panel. Since we cannot use ContentChild to fetch the\n   * child Menu component, the child Menu must register its self with the parent MenuPanel.\n   */\n  _registerMenu(child: Menu) {\n    this._menu = child;\n\n    // The ideal solution would be to affect the CdkMenuPanel injector from the CdkMenuTrigger and\n    // inject the menu stack reference into the child menu and menu items, however this isn't\n    // possible at this time.\n    this._menu._menuStack = this._menuStack;\n    this._menuStack?.push(child);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Subject, Observable} from 'rxjs';\n\n/** Events to emit as specified by the caller once the MenuStack is empty. */\nexport const enum FocusNext {\n  nextItem,\n  previousItem,\n  currentItem,\n}\n\n/**\n * Interface for the elements tracked in the MenuStack.\n */\nexport interface MenuStackItem {\n  /** A reference to the previous Menus MenuStack instance. */\n  _menuStack: MenuStack | null;\n}\n\n/**\n * MenuStack allows subscribers to listen for close events (when a MenuStackItem is popped off\n * of the stack) in order to perform closing actions. Upon the MenuStack being empty it emits\n * from the `empty` observable specifying the next focus action which the listener should perform\n * as requested by the closer.\n */\nexport class MenuStack {\n  /** All MenuStackItems tracked by this MenuStack. */\n  private readonly _elements: MenuStackItem[] = [];\n\n  /** Emits the element which was popped off of the stack when requested by a closer. */\n  private readonly _close: Subject<MenuStackItem> = new Subject();\n\n  /** Emits once the MenuStack has become empty after popping off elements. */\n  private readonly _empty: Subject<FocusNext> = new Subject();\n\n  /** Observable which emits the MenuStackItem which has been requested to close. */\n  readonly closed: Observable<MenuStackItem> = this._close;\n\n  /**\n   * Observable which emits when the MenuStack is empty after popping off the last element. It\n   * emits a FocusNext event which specifies the action the closer has requested the listener\n   * perform.\n   */\n  readonly emptied: Observable<FocusNext> = this._empty;\n\n  /** @param menu the MenuStackItem to put on the stack. */\n  push(menu: MenuStackItem) {\n    this._elements.push(menu);\n  }\n\n  /**\n   * Pop items off of the stack up to and including `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the last item to pop off the stack.\n   * @param focusNext the event to emit on the `empty` observable if the method call resulted in an\n   * empty stack. Does not emit if the stack was initially empty or if `lastItem` was not on the\n   * stack.\n   */\n  close(lastItem: MenuStackItem, focusNext?: FocusNext) {\n    if (this._elements.indexOf(lastItem) >= 0) {\n      let poppedElement;\n      do {\n        poppedElement = this._elements.pop();\n        this._close.next(poppedElement);\n      } while (poppedElement !== lastItem);\n\n      if (this.isEmpty()) {\n        this._empty.next(focusNext);\n      }\n    }\n  }\n\n  /**\n   * Pop items off of the stack up to but excluding `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the element which should be left on the stack\n   * @return whether or not an item was removed from the stack\n   */\n  closeSubMenuOf(lastItem: MenuStackItem) {\n    let removed = false;\n    if (this._elements.indexOf(lastItem) >= 0) {\n      removed = this.peek() !== lastItem;\n      while (this.peek() !== lastItem) {\n        this._close.next(this._elements.pop());\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Pop off all MenuStackItems and emit each one on the `close` observable one by one.\n   * @param focusNext the event to emit on the `empty` observable once the stack is emptied. Does\n   * not emit if the stack was initially empty.\n   */\n  closeAll(focusNext?: FocusNext) {\n    if (!this.isEmpty()) {\n      while (!this.isEmpty()) {\n        const menuStackItem = this._elements.pop();\n        if (menuStackItem) {\n          this._close.next(menuStackItem);\n        }\n      }\n\n      this._empty.next(focusNext);\n    }\n  }\n\n  /** Return true if this stack is empty. */\n  isEmpty() {\n    return !this._elements.length;\n  }\n\n  /** Return the length of the stack. */\n  length() {\n    return this._elements.length;\n  }\n\n  /** Get the top most element on the stack. */\n  peek(): MenuStackItem | undefined {\n    return this._elements[this._elements.length - 1];\n  }\n}\n\n/** NoopMenuStack is a placeholder MenuStack used for inline menus. */\nexport class NoopMenuStack extends MenuStack {\n  /** Noop push - does not add elements to the MenuStack. */\n  push(_: MenuStackItem) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList, ElementRef} from '@angular/core';\nimport {fromEvent, Observable, defer} from 'rxjs';\nimport {mapTo, mergeAll, takeUntil, startWith, mergeMap} from 'rxjs/operators';\n\n/** Item to track for mouse focus events. */\nexport interface FocusableElement {\n  /** A reference to the element to be tracked. */\n  _elementRef: ElementRef<HTMLElement>;\n}\n\n/**\n * Gets a stream of pointer (mouse) entries into the given items.\n * This should typically run outside the Angular zone.\n */\nexport function getItemPointerEntries<T extends FocusableElement>(\n  items: QueryList<T>\n): Observable<T> {\n  return defer(() =>\n    items.changes.pipe(\n      startWith(items),\n      mergeMap((list: QueryList<T>) =>\n        list.map(element =>\n          fromEvent(element._elementRef.nativeElement, 'mouseenter').pipe(\n            mapTo(element),\n            takeUntil(items.changes)\n          )\n        )\n      ),\n      mergeAll()\n    )\n  );\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n  OnDestroy,\n  Optional,\n  OnInit,\n  NgZone,\n  HostListener,\n} from '@angular/core';\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  UP_ARROW,\n  DOWN_ARROW,\n  ESCAPE,\n  TAB,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {take, takeUntil, startWith, mergeMap, mapTo, mergeAll, switchMap} from 'rxjs/operators';\nimport {merge, Observable} from 'rxjs';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuPanel} from './menu-panel';\nimport {Menu, CDK_MENU} from './menu-interface';\nimport {CdkMenuItem} from './menu-item';\nimport {MenuStack, MenuStackItem, FocusNext, NoopMenuStack} from './menu-stack';\nimport {getItemPointerEntries} from './item-pointer-entries';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessible keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    '[tabindex]': '_isInline() ? 0 : null',\n    'role': 'menu',\n    'class': 'cdk-menu',\n    '[class.cdk-menu-inline]': '_isInline()',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenu},\n    {provide: CDK_MENU, useExisting: CdkMenu},\n  ],\n})\nexport class CdkMenu extends CdkMenuGroup implements Menu, AfterContentInit, OnInit, OnDestroy {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  // We provide a default MenuStack implementation in case the menu is an inline menu.\n  // For Menus part of a MenuBar nested within a MenuPanel this will be overwritten\n  // to the correct parent MenuStack.\n  /** Track the Menus making up the open menu stack. */\n  _menuStack: MenuStack = new NoopMenuStack();\n\n  /** Handles keyboard events for the menu. */\n  private _keyManager: FocusKeyManager<CdkMenuItem>;\n\n  /** Emits when a child MenuItem is moused over. */\n  private _mouseFocusChanged: Observable<CdkMenuItem>;\n\n  /** List of nested CdkMenuGroup elements */\n  @ContentChildren(CdkMenuGroup, {descendants: true})\n  private readonly _nestedGroups: QueryList<CdkMenuGroup>;\n\n  /** All child MenuItem elements nested in this Menu. */\n  @ContentChildren(CdkMenuItem, {descendants: true})\n  private readonly _allItems: QueryList<CdkMenuItem>;\n\n  /** The Menu Item which triggered the open submenu. */\n  private _openItem?: CdkMenuItem;\n\n  /**\n   * A reference to the enclosing parent menu panel.\n   *\n   * Required to be set when using ViewEngine since ViewEngine does support injecting a reference to\n   * the parent directive if the parent directive is placed on an `ng-template`. If using Ivy, the\n   * injected value will be used over this one.\n   */\n  @Input('cdkMenuPanel') private readonly _explicitPanel?: CdkMenuPanel;\n\n  constructor(\n    private readonly _ngZone: NgZone,\n    @Optional() private readonly _dir?: Directionality,\n    // `CdkMenuPanel` is always used in combination with a `CdkMenu`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Optional() private readonly _menuPanel?: CdkMenuPanel\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this._registerWithParentPanel();\n  }\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._completeChangeEmitter();\n    this._setKeyManager();\n    this._subscribeToMenuOpen();\n    this._subscribeToMenuStack();\n    this._subscribeToMouseManager();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  /** Place focus on the first MenuItem in the menu and set the focus origin. */\n  focusFirstItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setFirstItemActive();\n  }\n\n  /** Place focus on the last MenuItem in the menu and set the focus origin. */\n  focusLastItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setLastItemActive();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /** Handle keyboard events for the Menu. */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this._keyManager;\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        if (this._isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case UP_ARROW:\n      case DOWN_ARROW:\n        if (!this._isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this._menuStack.close(this, FocusNext.currentItem);\n        }\n        break;\n\n      case TAB:\n        this._menuStack.closeAll();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /** Register this menu with its enclosing parent menu panel */\n  private _registerWithParentPanel() {\n    this._getMenuPanel()?._registerMenu(this);\n  }\n\n  /**\n   * Get the enclosing CdkMenuPanel defaulting to the injected reference over the developer\n   * provided reference.\n   */\n  private _getMenuPanel() {\n    return this._menuPanel || this._explicitPanel;\n  }\n\n  /**\n   * Complete the change emitter if there are any nested MenuGroups or register to complete the\n   * change emitter if a MenuGroup is rendered at some point\n   */\n  private _completeChangeEmitter() {\n    if (this._hasNestedGroups()) {\n      this.change.complete();\n    } else {\n      this._nestedGroups.changes.pipe(take(1)).subscribe(() => this.change.complete());\n    }\n  }\n\n  /** Return true if there are nested CdkMenuGroup elements within the Menu */\n  private _hasNestedGroups() {\n    // view engine has a bug where @ContentChildren will return the current element\n    // along with children if the selectors match - not just the children.\n    // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n    // order to ensure that we return true iff there are child CdkMenuGroup elements.\n    return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n  }\n\n  /** Setup the FocusKeyManager with the correct orientation for the menu. */\n  private _setKeyManager() {\n    this._keyManager = new FocusKeyManager(this._allItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n\n    if (this._isHorizontal()) {\n      this._keyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this._keyManager.withVerticalOrientation();\n    }\n  }\n\n  /**\n   * Set the FocusMouseManager and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this._mouseFocusChanged = getItemPointerEntries(this._allItems);\n      this._mouseFocusChanged\n        .pipe(takeUntil(this.closed))\n        .subscribe(item => this._keyManager.setActiveItem(item));\n    });\n  }\n\n  /** Subscribe to the MenuStack close and empty observables. */\n  private _subscribeToMenuStack() {\n    this._menuStack.closed\n      .pipe(takeUntil(this.closed))\n      .subscribe((item: MenuStackItem) => this._closeOpenMenu(item));\n\n    this._menuStack.emptied\n      .pipe(takeUntil(this.closed))\n      .subscribe((event: FocusNext) => this._toggleMenuFocus(event));\n  }\n\n  /**\n   * Close the open menu if the current active item opened the requested MenuStackItem.\n   * @param item the MenuStackItem requested to be closed.\n   */\n  private _closeOpenMenu(menu: MenuStackItem) {\n    const keyManager = this._keyManager;\n    const trigger = this._openItem;\n    if (menu === trigger?.getMenuTrigger()?.getMenu()) {\n      trigger.getMenuTrigger()?.closeMenu();\n      keyManager.setFocusOrigin('keyboard');\n      keyManager.setActiveItem(trigger);\n    }\n  }\n\n  /** Set focus the either the current, previous or next item based on the FocusNext event. */\n  private _toggleMenuFocus(event: FocusNext) {\n    const keyManager = this._keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  // TODO(andy9775): remove duplicate logic between menu an menu bar\n  /**\n   * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n   * and stop tracking it when the menu is closed.\n   */\n  private _subscribeToMenuOpen() {\n    const exitCondition = merge(this._allItems.changes, this.closed);\n    this._allItems.changes\n      .pipe(\n        startWith(this._allItems),\n        mergeMap((list: QueryList<CdkMenuItem>) =>\n          list\n            .filter(item => item.hasMenu())\n            .map(item => item.getMenuTrigger()!.opened.pipe(mapTo(item), takeUntil(exitCondition)))\n        ),\n        mergeAll(),\n        switchMap((item: CdkMenuItem) => {\n          this._openItem = item;\n          return item.getMenuTrigger()!.closed;\n        }),\n        takeUntil(this.closed)\n      )\n      .subscribe(() => (this._openItem = undefined));\n  }\n\n  /** Return true if this menu has been configured in a horizontal orientation. */\n  private _isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n\n  /**\n   * Return true if this menu is an inline menu. That is, it does not exist in a pop-up and is\n   * always visible in the dom.\n   */\n  _isInline() {\n    // NoopMenuStack is the default. If this menu is not inline than the NoopMenuStack is replaced\n    // automatically.\n    return this._menuStack instanceof NoopMenuStack;\n  }\n\n  ngOnDestroy() {\n    this._emitClosedEvent();\n  }\n\n  /** Emit and complete the closed event emitter */\n  private _emitClosedEvent() {\n    this.closed.next();\n    this.closed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  OnDestroy,\n  Optional,\n  NgZone,\n  HostListener,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, ESCAPE, TAB} from '@angular/cdk/keycodes';\nimport {takeUntil, mergeAll, mapTo, startWith, mergeMap, switchMap} from 'rxjs/operators';\nimport {Subject, merge, Observable} from 'rxjs';\nimport {CdkMenuGroup} from './menu-group';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {CdkMenuItem} from './menu-item';\nimport {MenuStack, MenuStackItem, FocusNext} from './menu-stack';\nimport {getItemPointerEntries} from './item-pointer-entries';\n\n/**\n * Whether the element is a menu bar or a popup menu.\n * @param target the element to check.\n * @return true if the given element is part of the menu module.\n */\nfunction isMenuElement(target: Element) {\n  return (\n    target.classList.contains('cdk-menu-bar') ||\n    (target.classList.contains('cdk-menu') && !target.classList.contains('cdk-menu-inline'))\n  );\n}\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    'class': 'cdk-menu-bar',\n    'tabindex': '0',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenuBar},\n    {provide: CDK_MENU, useExisting: CdkMenuBar},\n    {provide: MenuStack, useClass: MenuStack},\n  ],\n})\nexport class CdkMenuBar extends CdkMenuGroup implements Menu, AfterContentInit, OnDestroy {\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /** Handles keyboard events for the MenuBar. */\n  private _keyManager: FocusKeyManager<CdkMenuItem>;\n\n  /** Emits when a child MenuItem is moused over. */\n  private _mouseFocusChanged: Observable<CdkMenuItem>;\n\n  /** Emits when the MenuBar is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  /** All child MenuItem elements nested in this MenuBar. */\n  @ContentChildren(CdkMenuItem, {descendants: true})\n  private readonly _allItems: QueryList<CdkMenuItem>;\n\n  /** The Menu Item which triggered the open submenu. */\n  private _openItem?: CdkMenuItem;\n\n  constructor(\n    readonly _menuStack: MenuStack,\n    private readonly _ngZone: NgZone,\n    @Optional() private readonly _dir?: Directionality\n  ) {\n    super();\n  }\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._setKeyManager();\n    this._subscribeToMenuOpen();\n    this._subscribeToMenuStack();\n    this._subscribeToMouseManager();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('focus')\n  /** Place focus on the first MenuItem in the menu and set the focus origin. */\n  focusFirstItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setFirstItemActive();\n  }\n\n  /** Place focus on the last MenuItem in the menu and set the focus origin. */\n  focusLastItem(focusOrigin: FocusOrigin = 'program') {\n    this._keyManager.setFocusOrigin(focusOrigin);\n    this._keyManager.setLastItemActive();\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('keydown', ['$event'])\n  /**\n   * Handle keyboard events, specifically changing the focused element and/or toggling the active\n   * items menu.\n   * @param event the KeyboardEvent to handle.\n   */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this._keyManager;\n    switch (event.keyCode) {\n      case UP_ARROW:\n      case DOWN_ARROW:\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        const horizontalArrows = event.keyCode === LEFT_ARROW || event.keyCode === RIGHT_ARROW;\n        // For a horizontal menu if the left/right keys were clicked, or a vertical menu if the\n        // up/down keys were clicked: if the current menu is open, close it then focus and open the\n        // next  menu.\n        if (\n          (this._isHorizontal() && horizontalArrows) ||\n          (!this._isHorizontal() && !horizontalArrows)\n        ) {\n          event.preventDefault();\n\n          const prevIsOpen = keyManager.activeItem?.isMenuOpen();\n          keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n          if (prevIsOpen) {\n            keyManager.activeItem?.getMenuTrigger()?.openMenu();\n          }\n        }\n        break;\n\n      case ESCAPE:\n        event.preventDefault();\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      case TAB:\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /** Setup the FocusKeyManager with the correct orientation for the menu bar. */\n  private _setKeyManager() {\n    this._keyManager = new FocusKeyManager(this._allItems)\n      .withWrap()\n      .withTypeAhead()\n      .withHomeAndEnd();\n\n    if (this._isHorizontal()) {\n      this._keyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this._keyManager.withVerticalOrientation();\n    }\n  }\n\n  /**\n   * Set the FocusMouseManager and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this._mouseFocusChanged = getItemPointerEntries(this._allItems);\n      this._mouseFocusChanged.pipe(takeUntil(this._destroyed)).subscribe(item => {\n        if (this._hasOpenSubmenu()) {\n          this._keyManager.setActiveItem(item);\n        }\n      });\n    });\n  }\n\n  /** Subscribe to the MenuStack close and empty observables. */\n  private _subscribeToMenuStack() {\n    this._menuStack.closed\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((item: MenuStackItem) => this._closeOpenMenu(item));\n\n    this._menuStack.emptied\n      .pipe(takeUntil(this._destroyed))\n      .subscribe((event: FocusNext) => this._toggleOpenMenu(event));\n  }\n\n  /**\n   * Close the open menu if the current active item opened the requested MenuStackItem.\n   * @param item the MenuStackItem requested to be closed.\n   */\n  private _closeOpenMenu(menu: MenuStackItem) {\n    const trigger = this._openItem;\n    const keyManager = this._keyManager;\n    if (menu === trigger?.getMenuTrigger()?.getMenu()) {\n      trigger.getMenuTrigger()?.closeMenu();\n      keyManager.setFocusOrigin('keyboard');\n      keyManager.setActiveItem(trigger);\n    }\n  }\n\n  /**\n   * Set focus to either the current, previous or next item based on the FocusNext event, then\n   * open the previous or next item.\n   */\n  private _toggleOpenMenu(event: FocusNext) {\n    const keyManager = this._keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  /**\n   * @return true if the menu bar is configured to be horizontal.\n   */\n  private _isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n\n  // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n  // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n  // can move this back into `host`.\n  // tslint:disable:no-host-decorator-in-concrete\n  @HostListener('document:mousedown', ['$event'])\n  /** Close any open submenu if there was a click event which occurred outside the menu stack. */\n  _closeOnBackgroundClick(event: MouseEvent) {\n    if (this._hasOpenSubmenu()) {\n      // get target from composed path to account for shadow dom\n      let target = event.composedPath ? event.composedPath()[0] : event.target;\n      while (target instanceof Element) {\n        if (isMenuElement(target)) {\n          return;\n        }\n        target = target.parentElement;\n      }\n\n      this._menuStack.closeAll();\n    }\n  }\n\n  /**\n   * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n   * and stop tracking it when the menu is closed.\n   */\n  private _subscribeToMenuOpen() {\n    const exitCondition = merge(this._allItems.changes, this._destroyed);\n    this._allItems.changes\n      .pipe(\n        startWith(this._allItems),\n        mergeMap((list: QueryList<CdkMenuItem>) =>\n          list\n            .filter(item => item.hasMenu())\n            .map(item => item.getMenuTrigger()!.opened.pipe(mapTo(item), takeUntil(exitCondition)))\n        ),\n        mergeAll(),\n        switchMap((item: CdkMenuItem) => {\n          this._openItem = item;\n          return item.getMenuTrigger()!.closed;\n        }),\n        takeUntil(this._destroyed)\n      )\n      .subscribe(() => (this._openItem = undefined));\n  }\n\n  /** Return true if the MenuBar has an open submenu. */\n  private _hasOpenSubmenu() {\n    return !!this._openItem;\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {Directive, OnDestroy, ElementRef, Self, Optional, Inject, NgZone} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CDK_MENU, Menu} from './menu-interface';\n\n/**\n * A directive providing behavior for the the \"menuitemradio\" ARIA role, which behaves similarly to\n * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n */\n@Directive({\n  selector: '[cdkMenuItemRadio]',\n  exportAs: 'cdkMenuItemRadio',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemradio',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemRadio extends CdkMenuItemSelectable implements OnDestroy {\n  /** Function to unregister the selection dispatcher */\n  private _removeDispatcherListener: () => void;\n\n  constructor(\n    private readonly _selectionDispatcher: UniqueSelectionDispatcher,\n    element: ElementRef<HTMLElement>,\n    ngZone: NgZone,\n    @Inject(CDK_MENU) parentMenu: Menu,\n    @Optional() dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItemRadio` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() menuTrigger?: CdkMenuItemTrigger\n  ) {\n    super(element, parentMenu, ngZone, dir, menuTrigger);\n\n    this._registerDispatcherListener();\n  }\n\n  /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n  private _registerDispatcherListener() {\n    this._removeDispatcherListener = this._selectionDispatcher.listen(\n      (id: string, name: string) => (this.checked = this.id === id && this.name === name)\n    );\n  }\n\n  /** Toggles the checked state of the radio-button. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this._selectionDispatcher.notify(this.id, this.name);\n    }\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._removeDispatcherListener();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n * conventional checkbox.\n */\n@Directive({\n  selector: '[cdkMenuItemCheckbox]',\n  exportAs: 'cdkMenuItemCheckbox',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemcheckbox',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemCheckbox extends CdkMenuItemSelectable {\n  /** Toggle the checked state of the checkbox. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  ViewContainerRef,\n  Output,\n  EventEmitter,\n  Optional,\n  OnDestroy,\n  Inject,\n  Injectable,\n  InjectionToken,\n} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  OverlayRef,\n  Overlay,\n  OverlayConfig,\n  FlexibleConnectedPositionStrategy,\n  ConnectedPosition,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal, Portal} from '@angular/cdk/portal';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuPanel} from './menu-panel';\nimport {MenuStack, MenuStackItem} from './menu-stack';\nimport {throwExistingMenuStackError} from './menu-errors';\n\n/**\n * Check if the given element is part of the cdk menu module or nested within a cdk menu element.\n * @param target the element to check.\n * @return true if the given element is part of the menu module or nested within a cdk menu element.\n */\nfunction isWithinMenuElement(target: Element | null) {\n  while (target instanceof Element) {\n    if (target.classList.contains('cdk-menu') && !target.classList.contains('cdk-menu-inline')) {\n      return true;\n    }\n    target = target.parentElement;\n  }\n  return false;\n}\n\n/** Tracks the last open context menu trigger across the entire application. */\n@Injectable({providedIn: 'root'})\nexport class ContextMenuTracker {\n  /** The last open context menu trigger. */\n  private static _openContextMenuTrigger?: CdkContextMenuTrigger;\n\n  /**\n   * Close the previous open context menu and set the given one as being open.\n   * @param trigger the trigger for the currently open Context Menu.\n   */\n  update(trigger: CdkContextMenuTrigger) {\n    if (ContextMenuTracker._openContextMenuTrigger !== trigger) {\n      ContextMenuTracker._openContextMenuTrigger?.close();\n      ContextMenuTracker._openContextMenuTrigger = trigger;\n    }\n  }\n}\n\n/** Configuration options passed to the context menu. */\nexport type ContextMenuOptions = {\n  /** The opened menus X coordinate offset from the triggering position. */\n  offsetX: number;\n\n  /** The opened menus Y coordinate offset from the triggering position. */\n  offsetY: number;\n};\n\n/** Injection token for the ContextMenu options object. */\nexport const CDK_CONTEXT_MENU_DEFAULT_OPTIONS = new InjectionToken<ContextMenuOptions>(\n  'cdk-context-menu-default-options'\n);\n\n/** The coordinates of where the context menu should open. */\nexport type ContextMenuCoordinates = {x: number; y: number};\n\n/**\n * A directive which when placed on some element opens a the Menu it is bound to when a user\n * right-clicks within that element. It is aware of nested Context Menus and the lowest level\n * non-disabled context menu will trigger.\n */\n@Directive({\n  selector: '[cdkContextMenuTriggerFor]',\n  exportAs: 'cdkContextMenuTriggerFor',\n  host: {\n    '(contextmenu)': '_openOnContextMenu($event)',\n  },\n  providers: [\n    // In cases where the first menu item in the context menu is a trigger the submenu opens on a\n    // hover event. Offsetting the opened context menu by 2px prevents this from occurring.\n    {provide: CDK_CONTEXT_MENU_DEFAULT_OPTIONS, useValue: {offsetX: 2, offsetY: 2}},\n  ],\n})\nexport class CdkContextMenuTrigger implements OnDestroy {\n  /** Template reference variable to the menu to open on right click. */\n  @Input('cdkContextMenuTriggerFor')\n  get menuPanel(): CdkMenuPanel {\n    return this._menuPanel;\n  }\n  set menuPanel(panel: CdkMenuPanel) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && panel._menuStack) {\n      throwExistingMenuStackError();\n    }\n    this._menuPanel = panel;\n\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = this._menuStack;\n    }\n  }\n  /** Reference to the MenuPanel this trigger toggles. */\n  private _menuPanel: CdkMenuPanel;\n\n  /** Emits when the attached menu is requested to open. */\n  @Output('cdkContextMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close. */\n  @Output('cdkContextMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** Whether the context menu should be disabled. */\n  @Input('cdkContextMenuDisabled')\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /** A reference to the overlay which manages the triggered menu. */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _panelContent: TemplatePortal;\n\n  /** Emits when the element is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  /** Reference to the document. */\n  private readonly _document: Document;\n\n  /** Emits when the document listener should stop. */\n  private readonly _stopDocumentListener = merge(this.closed, this._destroyed);\n\n  /** The menu stack for this trigger and its associated menus. */\n  private readonly _menuStack = new MenuStack();\n\n  constructor(\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _contextMenuTracker: ContextMenuTracker,\n    @Inject(CDK_CONTEXT_MENU_DEFAULT_OPTIONS) private readonly _options: ContextMenuOptions,\n    @Inject(DOCUMENT) document: any,\n    @Optional() private readonly _directionality?: Directionality\n  ) {\n    this._document = document;\n\n    this._setMenuStackListener();\n  }\n\n  /**\n   * Open the attached menu at the specified location.\n   * @param coordinates where to open the context menu\n   */\n  open(coordinates: ContextMenuCoordinates) {\n    if (this.disabled) {\n      return;\n    } else if (this.isOpen()) {\n      // since we're moving this menu we need to close any submenus first otherwise they end up\n      // disconnected from this one.\n      this._menuStack.closeSubMenuOf(this._menuPanel._menu!);\n\n      (this._overlayRef!.getConfig()\n        .positionStrategy as FlexibleConnectedPositionStrategy).setOrigin(coordinates);\n      this._overlayRef!.updatePosition();\n    } else {\n      this.opened.next();\n\n      if (this._overlayRef) {\n        (this._overlayRef.getConfig()\n          .positionStrategy as FlexibleConnectedPositionStrategy).setOrigin(coordinates);\n        this._overlayRef.updatePosition();\n      } else {\n        this._overlayRef = this._overlay.create(this._getOverlayConfig(coordinates));\n      }\n\n      this._overlayRef.attach(this._getMenuContent());\n      this._setCloseListener();\n    }\n  }\n\n  /** Close the opened menu. */\n  close() {\n    this._menuStack.closeAll();\n  }\n\n  /**\n   * Open the context menu and close any previously open menus.\n   * @param event the mouse event which opens the context menu.\n   */\n  _openOnContextMenu(event: MouseEvent) {\n    if (!this.disabled) {\n      // Prevent the native context menu from opening because we're opening a custom one.\n      event.preventDefault();\n\n      // Stop event propagation to ensure that only the closest enabled context menu opens.\n      // Otherwise, any context menus attached to containing elements would *also* open,\n      // resulting in multiple stacked context menus being displayed.\n      event.stopPropagation();\n\n      this._contextMenuTracker.update(this);\n      this.open({x: event.clientX, y: event.clientY});\n\n      // A context menu can be triggered via a mouse right click or a keyboard shortcut.\n      if (event.button === 2) {\n        this._menuPanel._menu?.focusFirstItem('mouse');\n      } else if (event.button === 0) {\n        this._menuPanel._menu?.focusFirstItem('keyboard');\n      } else {\n        this._menuPanel._menu?.focusFirstItem('program');\n      }\n    }\n  }\n\n  /** Whether the attached menu is open. */\n  isOpen() {\n    return !!this._overlayRef?.hasAttached();\n  }\n\n  /**\n   * Get the configuration object used to create the overlay.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayConfig(coordinates: ContextMenuCoordinates) {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(coordinates),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /**\n   * Build the position strategy for the overlay which specifies where to place the menu.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayPositionStrategy(\n    coordinates: ContextMenuCoordinates\n  ): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(coordinates)\n      .withDefaultOffsetX(this._options.offsetX)\n      .withDefaultOffsetY(this._options.offsetY)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /**\n   * Determine and return where to position the opened menu relative to the mouse location.\n   */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    // TODO: this should be configurable through the injected context menu options\n    return [\n      {originX: 'end', originY: 'top', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'bottom', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'start', originY: 'bottom', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getMenuContent(): Portal<unknown> {\n    const hasMenuContentChanged = this.menuPanel._templateRef !== this._panelContent?.templateRef;\n    if (this.menuPanel && (!this._panelContent || hasMenuContentChanged)) {\n      this._panelContent = new TemplatePortal(this.menuPanel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  /**\n   * Subscribe to the document click and context menu events and close out the menu when emitted.\n   */\n  private _setCloseListener() {\n    merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'contextmenu'))\n      .pipe(takeUntil(this._stopDocumentListener))\n      .subscribe(event => {\n        const target = event.composedPath ? event.composedPath()[0] : event.target;\n        // stop the default context menu from appearing if user right-clicked somewhere outside of\n        // any context menu directive or if a user right-clicked inside of the opened menu and just\n        // close it.\n        if (event.type === 'contextmenu') {\n          if (target instanceof Element && isWithinMenuElement(target)) {\n            // Prevent the native context menu from opening within any open context menu or submenu\n            event.preventDefault();\n          } else {\n            this.close();\n          }\n        } else {\n          if (target instanceof Element && !isWithinMenuElement(target)) {\n            this.close();\n          }\n        }\n      });\n  }\n\n  /** Subscribe to the menu stack close events and close this menu when requested. */\n  private _setMenuStackListener() {\n    this._menuStack.closed.pipe(takeUntil(this._destroyed)).subscribe((item: MenuStackItem) => {\n      if (item === this._menuPanel._menu && this.isOpen()) {\n        this.closed.next();\n        this._overlayRef!.detach();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n    this._resetPanelMenuStack();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Destroy and unset the overlay reference it if exists. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /** Set the menu panels menu stack back to null. */\n  private _resetPanelMenuStack() {\n    // If a ContextMenuTrigger is placed in a conditionally rendered view, each time the trigger is\n    // rendered the panel setter for ContextMenuTrigger is called. From the first render onward,\n    // the attached CdkMenuPanel has the MenuStack set. Since we throw an error if a panel already\n    // has a stack set, we want to reset the attached stack here to prevent the error from being\n    // thrown if the trigger re-configures its attached panel (in the case where there is a 1:1\n    // relationship between the panel and trigger).\n    if (this._menuPanel) {\n      this._menuPanel._menuStack = null;\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuItemRadio} from './menu-item-radio';\nimport {CdkMenuItemCheckbox} from './menu-item-checkbox';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CdkContextMenuTrigger} from './context-menu';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkMenuBar,\n  CdkMenu,\n  CdkMenuPanel,\n  CdkMenuItem,\n  CdkMenuItemRadio,\n  CdkMenuItemCheckbox,\n  CdkMenuItemTrigger,\n  CdkMenuGroup,\n  CdkContextMenuTrigger,\n];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-item-checkbox';\nexport * from './menu-item-radio';\nexport * from './menu-item-trigger';\nexport * from './menu-panel';\nexport * from './menu-group';\nexport * from './context-menu';\n\nexport {MenuStack, MenuStackItem} from './menu-stack';\nexport {CDK_MENU} from './menu-interface';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {Menu as Éµangular_material_src_cdk_experimental_menu_menu_a} from './menu-interface';\nexport {CdkMenuItemSelectable as Éµangular_material_src_cdk_experimental_menu_menu_b} from './menu-item-selectable';"],"names":[],"mappings":"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"}