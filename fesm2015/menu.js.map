{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-item-selectable.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-item-radio.ts","../../../../../../src/cdk-experimental/menu/menu-item-checkbox.ts","../../../../../../src/cdk-experimental/menu/menu-item-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\n\n/**\n * Directive which provides the ability for an element to be focused and navigated to using the\n * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n * behavior when clicked.\n */\n@Directive({\n  selector: '[cdkMenuItem]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    'type': 'button',\n    'role': 'menuitem',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n})\nexport class CdkMenuItem {\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /** Whether the menu item opens a menu */\n  hasSubmenu = false;\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Input, Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/** Counter used to set a unique id and name for a selectable item */\nlet nextId = 0;\n\n/**\n * Base class providing checked state for MenuItems along with outputting a clicked event when the\n * element is triggered. It provides functionality for selectable elements.\n */\n@Directive()\nexport abstract class CdkMenuItemSelectable extends CdkMenuItem {\n  /** Event emitted when the selectable item is clicked */\n  @Output() clicked: EventEmitter<CdkMenuItemSelectable> = new EventEmitter();\n\n  /** Whether the element is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** The name of the selectable element with a default value */\n  @Input() name: string = `cdk-selectable-item-${nextId++}`;\n\n  /** The id of the selectable element with a default value */\n  @Input() id: string = `cdk-selectable-item-${nextId++}`;\n\n  /** If the element is not disabled emit the click event */\n  trigger() {\n    if (!this.disabled) {\n      this.clicked.next(this);\n    }\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Output,\n  EventEmitter,\n  ContentChildren,\n  AfterContentInit,\n  QueryList,\n  OnDestroy,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n  },\n  providers: [{provide: UniqueSelectionDispatcher, useClass: UniqueSelectionDispatcher}],\n})\nexport class CdkMenuGroup implements AfterContentInit, OnDestroy {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() readonly change: EventEmitter<CdkMenuItem> = new EventEmitter();\n\n  /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n  @ContentChildren(CdkMenuItemSelectable, {descendants: true})\n  private readonly _selectableItems: QueryList<CdkMenuItemSelectable>;\n\n  /** Emits when the _selectableItems QueryList triggers a change */\n  private readonly _selectableChanges: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this._registerMenuSelectionListeners();\n  }\n\n  /**\n   * Register the child selectable elements with the change emitter and ensure any new child\n   * elements do so as well.\n   */\n  private _registerMenuSelectionListeners() {\n    this._selectableItems.forEach(selectable => this._registerClickListener(selectable));\n\n    this._selectableItems.changes.subscribe((selectableItems: QueryList<CdkMenuItemSelectable>) => {\n      this._selectableChanges.next();\n      selectableItems.forEach(selectable => this._registerClickListener(selectable));\n    });\n  }\n\n  /** Register each selectable to emit on the change Emitter when clicked */\n  private _registerClickListener(selectable: CdkMenuItemSelectable) {\n    selectable.clicked\n      .pipe(takeUntil(this._selectableChanges))\n      .subscribe(() => this.change.next(selectable));\n  }\n\n  ngOnDestroy() {\n    this._selectableChanges.next();\n    this._selectableChanges.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList,\n  ContentChildren,\n  AfterContentInit,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\nimport {CdkMenuGroup} from './menu-group';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessible keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menu',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [{provide: CdkMenuGroup, useExisting: CdkMenu}],\n})\nexport class CdkMenu extends CdkMenuGroup implements AfterContentInit {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n\n  /** List of nested CdkMenuGroup elements */\n  @ContentChildren(CdkMenuGroup, {descendants: true})\n  private readonly _nestedGroups: QueryList<CdkMenuGroup>;\n\n  ngAfterContentInit() {\n    super.ngAfterContentInit();\n\n    this._completeChangeEmitter();\n  }\n\n  /**\n   * Complete the change emitter if there are any nested MenuGroups or register to complete the\n   * change emitter if a MenuGroup is rendered at some point\n   */\n  private _completeChangeEmitter() {\n    if (this._hasNestedGroups()) {\n      this.change.complete();\n    } else {\n      this._nestedGroups.changes.pipe(take(1)).subscribe(() => this.change.complete());\n    }\n  }\n\n  /** Return true if there are nested CdkMenuGroup elements within the Menu */\n  private _hasNestedGroups() {\n    // view engine has a bug where @ContentChildren will return the current element\n    // along with children if the selectors match - not just the children.\n    // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n    // order to ensure that we return true iff there are child CdkMenuGroup elements.\n    return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkMenuGroup} from './menu-group';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [{provide: CdkMenuGroup, useExisting: CdkMenuBar}],\n})\nexport class CdkMenuBar extends CdkMenuGroup {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenu} from './menu';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu: CdkMenu;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {Directive, OnDestroy} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\n\n/**\n * A directive providing behavior for the the \"menuitemradio\" ARIA role, which behaves similarly to\n * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n */\n@Directive({\n  selector: '[cdkMenuItemRadio]',\n  exportAs: 'cdkMenuItemRadio',\n  host: {\n    '(click)': 'trigger()',\n    'type': 'button',\n    'role': 'menuitemradio',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [{provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio}],\n})\nexport class CdkMenuItemRadio extends CdkMenuItemSelectable implements OnDestroy {\n  /** Function to unregister the selection dispatcher */\n  private _removeDispatcherListener: () => void;\n\n  constructor(private readonly _selectionDispatcher: UniqueSelectionDispatcher) {\n    super();\n\n    this._registerDispatcherListener();\n  }\n\n  /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n  private _registerDispatcherListener() {\n    this._removeDispatcherListener = this._selectionDispatcher.listen(\n      (id: string, name: string) => (this.checked = this.id === id && this.name === name)\n    );\n  }\n\n  /** Toggles the checked state of the radio-button. */\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this._selectionDispatcher.notify(this.id, this.name);\n    }\n  }\n\n  ngOnDestroy() {\n    this._removeDispatcherListener();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\n\n/**\n * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n * conventional checkbox.\n */\n@Directive({\n  selector: '[cdkMenuItemCheckbox]',\n  exportAs: 'cdkMenuItemCheckbox',\n  host: {\n    '(click)': 'trigger()',\n    'type': 'button',\n    'role': 'menuitemcheckbox',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [{provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox}],\n})\nexport class CdkMenuItemCheckbox extends CdkMenuItemSelectable {\n  trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, Self, Optional, AfterContentInit} from '@angular/core';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n * hover regardless of its sibling state.\n *\n * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n * functionality.\n */\n@Directive({\n  selector: '[cdkMenuItem][cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuTriggerFor',\n  host: {\n    'aria-haspopup': 'menu',\n  },\n})\nexport class CdkMenuItemTrigger implements AfterContentInit {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor') _menuPanel?: CdkMenuPanel;\n\n  constructor(\n    /** The MenuItem instance which is the trigger  */\n    @Self() @Optional() private _menuItemInstance?: CdkMenuItem\n  ) {}\n\n  ngAfterContentInit() {\n    this._setHasSubmenu();\n  }\n\n  /** Set the hasSubmenu property on the menuitem  */\n  private _setHasSubmenu() {\n    if (this._menuItemInstance) {\n      this._menuItemInstance.hasSubmenu = this._hasSubmenu();\n    }\n  }\n  /** Return true if the trigger has an attached menu */\n  private _hasSubmenu() {\n    return !!this._menuPanel;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuItemRadio} from './menu-item-radio';\nimport {CdkMenuItemCheckbox} from './menu-item-checkbox';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkMenuBar,\n  CdkMenu,\n  CdkMenuPanel,\n  CdkMenuItem,\n  CdkMenuItemRadio,\n  CdkMenuItemCheckbox,\n  CdkMenuItemTrigger,\n  CdkMenuGroup,\n];\n@NgModule({\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-item-checkbox';\nexport * from './menu-item-radio';\nexport * from './menu-item-trigger';\nexport * from './menu-panel';\nexport * from './menu-group';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {CdkMenuItemSelectable as Éµangular_material_src_cdk_experimental_menu_menu_a} from './menu-item-selectable';"],"names":[],"mappings":"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"}