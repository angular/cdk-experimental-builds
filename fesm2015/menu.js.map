{"version":3,"file":"menu.js","sources":["../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-panel.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, EventEmitter} from '@angular/core';\nimport {MenuItem} from './menu-item-interface';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n  },\n})\nexport class CdkMenuGroup {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() change: EventEmitter<MenuItem> = new EventEmitter();\n\n  /**\n   * Emits events for the clicked MenuItem\n   * @param menuItem The clicked MenuItem to handle\n   */\n  _registerTriggeredItem(menuItem: MenuItem) {\n    if (menuItem.role !== 'menuitem') {\n      this.change.emit(menuItem);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuGroup} from './menu-group';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessable keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menu',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [{provide: CdkMenuGroup, useExisting: CdkMenu}],\n})\nexport class CdkMenu extends CdkMenuGroup {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuOrientation') orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'tab' | 'escape'> = new EventEmitter();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\nimport {CdkMenuGroup} from './menu-group';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessable keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    '[attr.aria-orientation]': 'orientation',\n  },\n  providers: [{provide: CdkMenuGroup, useExisting: CdkMenuBar}],\n})\nexport class CdkMenuBar extends CdkMenuGroup {\n  /**\n   * Sets the aria-orientation attribute and determines where sub-menus will be opened.\n   * Does not affect styling/layout.\n   */\n  @Input('cdkMenuBarOrientation') orientation: 'horizontal' | 'vertical' = 'horizontal';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenu} from './menu';\n\n/**\n * Directive applied to an ng-template which wraps a CdkMenu and provides a reference to the\n * child element it wraps which allows for opening of the CdkMenu in an overlay.\n */\n@Directive({selector: 'ng-template[cdkMenuPanel]', exportAs: 'cdkMenuPanel'})\nexport class CdkMenuPanel {\n  /** Reference to the child menu component */\n  _menu: CdkMenu;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Output, Input, AfterContentInit, EventEmitter, OnDestroy} from '@angular/core';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuGroup} from './menu-group';\nimport {MenuItem} from './menu-item-interface';\nimport {takeUntil} from 'rxjs/operators';\n\n/**\n * Directive which provides behavior for an element which when clicked:\n *  If located in a CdkMenuBar:\n *    - opens up an attached submenu\n *\n *  If located in a CdkMenu/CdkMenuGroup, one of:\n *    - executes the user defined click handler\n *    - toggles its checkbox state\n *    - toggles its radio button state (in relation to siblings)\n *\n * If it's in a CdkMenu and it triggers a sub-menu, hovering over the\n * CdkMenuItem will open the submenu.\n *\n */\n@Directive({\n  selector: '[cdkMenuItem], [cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    'type': 'button',\n    '[attr.role]': 'role',\n    '[attr.aria-checked]': '_getAriaChecked()',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n})\nexport class CdkMenuItem implements AfterContentInit, MenuItem, OnDestroy {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor') _menuPanel?: CdkMenuPanel;\n\n  /** ARIA role for the menu item. */\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n  /** Whether the checkbox or radiobutton is checked */\n  @Input()\n  get checked() {\n    return this._checked;\n  }\n  set checked(value: boolean) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /** Emits when the attached submenu is opened */\n  @Output() opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the component gets destroyed */\n  private readonly _destroyed: EventEmitter<void> = new EventEmitter();\n\n  constructor(\n    /** reference a parent CdkMenuGroup component */\n    private readonly _menuGroup: CdkMenuGroup\n  ) {}\n\n  /** Configure event subscriptions */\n  ngAfterContentInit() {\n    if (this.role !== 'menuitem') {\n      this._menuGroup.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe((button: MenuItem) => this._toggleCheckedState(button));\n    }\n  }\n\n  /**\n   * If the role is menuitemcheckbox or menuitemradio and not disabled, emits a change event\n   * on the enclosing parent MenuGroup.\n   */\n  trigger() {\n    if (this.disabled) {\n      return;\n    }\n\n    if (this.hasSubmenu()) {\n      // TODO(andy): open the menu\n    }\n    this._menuGroup._registerTriggeredItem(this);\n  }\n\n  /** Whether the menu item opens a menu */\n  hasSubmenu() {\n    return !!this._menuPanel;\n  }\n\n  /** get the aria-checked value only if element is `menuitemradio` or `menuitemcheckbox` */\n  _getAriaChecked(): boolean | null {\n    if (this.role === 'menuitem') {\n      return null;\n    }\n    return this.checked;\n  }\n\n  /**\n   * Toggle the checked state of the menuitemradio or menuitemcheckbox component\n   */\n  private _toggleCheckedState(selected: MenuItem) {\n    if (this.role === 'menuitemradio') {\n      this.checked = selected === this;\n    } else if (this.role === 'menuitemcheckbox' && selected === this) {\n      this.checked = !this.checked;\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  static ngAcceptInputType_checked: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuPanel} from './menu-panel';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\n\nconst EXPORTED_DECLARATIONS = [CdkMenuBar, CdkMenu, CdkMenuPanel, CdkMenuItem, CdkMenuGroup];\n@NgModule({\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-panel';\nexport * from './menu-group';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}