{"version":3,"file":"combobox.js","sources":["../../../../../../src/cdk-experimental/combobox/combobox.ts","../../../../../../src/cdk-experimental/combobox/combobox-panel.ts","../../../../../../src/cdk-experimental/combobox/combobox-module.ts","../../../../../../src/cdk-experimental/combobox/public-api.ts","../../../../../../src/cdk-experimental/combobox/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type OpenAction = 'focus' | 'click' | 'downKey' | 'toggle';\nexport type OpenActionInput = OpenAction | OpenAction[] | string | null | undefined;\n\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Optional,\n  Output, ViewContainerRef\n} from '@angular/core';\nimport {CdkComboboxPanel, AriaHasPopupValue} from './combobox-panel';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef\n} from '@angular/cdk/overlay';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\n\n\n@Directive({\n  selector: '[cdkCombobox]',\n  exportAs: 'cdkCombobox',\n  host: {\n    'role': 'combobox',\n    '(click)': 'toggle()',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.aria-controls]': 'contentId',\n    '[attr.aria-haspopup]': 'contentType'\n  }\n})\nexport class CdkCombobox<T = unknown> implements OnDestroy, AfterContentInit {\n  @Input('cdkComboboxTriggerFor')\n  get panel(): CdkComboboxPanel<T> | undefined { return this._panel; }\n  set panel(panel: CdkComboboxPanel<T> | undefined) { this._panel = panel; }\n  private _panel: CdkComboboxPanel<T> | undefined;\n\n  @Input()\n  value: T;\n\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  @Input()\n  get openAction(): OpenAction[] {\n    return this._openActions;\n  }\n  set openAction(action: OpenAction[]) {\n    this._openActions = this._coerceOpenActionProperty(action);\n  }\n  private _openActions: OpenAction[] = ['click'];\n\n  @Output('comboboxPanelOpened') readonly opened: EventEmitter<void> = new EventEmitter<void>();\n  @Output('comboboxPanelClosed') readonly closed: EventEmitter<void> = new EventEmitter<void>();\n  @Output('panelValueChanged') readonly panelValueChanged: EventEmitter<T> = new EventEmitter<T>();\n\n  private _overlayRef: OverlayRef;\n  private _panelContent: TemplatePortal;\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _overlay: Overlay,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    @Optional() private readonly _directionality?: Directionality\n  ) {}\n\n  ngAfterContentInit() {\n    this._panel?.valueUpdated.subscribe(data => {\n      this._setComboboxValue(data);\n      this.close();\n    });\n\n    this._panel?.contentIdUpdated.subscribe(id => {\n      this.contentId = id;\n    });\n\n    this._panel?.contentTypeUpdated.subscribe(type => {\n      this.contentType = type;\n    });\n  }\n\n  ngOnDestroy() {\n    this.opened.complete();\n    this.closed.complete();\n    this.panelValueChanged.complete();\n  }\n\n  /** Toggles the open state of the panel. */\n  toggle() {\n    if (this.hasPanel()) {\n      this.isOpen() ? this.close() : this.open();\n    }\n  }\n\n  /** If the combobox is closed and not disabled, opens the panel. */\n  open() {\n    if (!this.isOpen() && !this.disabled) {\n      this.opened.next();\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPanelContent());\n    }\n  }\n\n  /** If the combobox is open and not disabled, closes the panel. */\n  close() {\n    if (this.isOpen() && !this.disabled) {\n      this.closed.next();\n      this._overlayRef.detach();\n    }\n  }\n\n  /** Returns true if panel is currently opened. */\n  isOpen(): boolean {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /** Returns true if combobox has a child panel. */\n  hasPanel(): boolean {\n    return !!this.panel;\n  }\n\n  private _setComboboxValue(value: T) {\n    const valueChanged = (this.value !== value);\n    this.value = value;\n\n    if (valueChanged) {\n      this.panelValueChanged.emit(value);\n    }\n  }\n\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n        .position()\n        .flexibleConnectedTo(this._elementRef)\n        .withPositions(this._getOverlayPositions());\n  }\n\n  private _getOverlayPositions(): ConnectedPosition[] {\n    return [\n      {originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top'},\n      {originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom'},\n      {originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top'},\n      {originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom'},\n    ];\n  }\n\n  private _getPanelContent() {\n    const hasPanelChanged = this._panel?._templateRef !== this._panelContent?.templateRef;\n    if (this._panel && (!this._panel || hasPanelChanged)) {\n      this._panelContent = new TemplatePortal(this._panel._templateRef, this._viewContainerRef);\n    }\n\n    return this._panelContent;\n  }\n\n  private _coerceOpenActionProperty(input: string | OpenAction[]): OpenAction[] {\n    let actions: OpenAction[] = [];\n    if (typeof input === 'string') {\n      actions.push(input as OpenAction);\n    } else {\n      actions = input;\n    }\n    return actions;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_openActions: OpenActionInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type AriaHasPopupValue = 'false' | 'true' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog';\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Directive({\n  selector: 'ng-template[cdkComboboxPanel]',\n  exportAs: 'cdkComboboxPanel',\n})\nexport class CdkComboboxPanel<T = unknown> {\n\n  valueUpdated: Subject<T> = new Subject<T>();\n  contentIdUpdated: Subject<string> = new Subject<string>();\n  contentTypeUpdated: Subject<AriaHasPopupValue> = new Subject<AriaHasPopupValue>();\n\n  contentId: string = '';\n  contentType: AriaHasPopupValue;\n\n  constructor(readonly _templateRef: TemplateRef<unknown>) {}\n\n  /** Tells the parent combobox to closet he panel and sends back the content value. */\n  closePanel(data?: T) {\n    this.valueUpdated.next(data);\n  }\n\n  /** Registers the content's id and the content type with the panel. */\n  _registerContent(contentId: string, contentType: AriaHasPopupValue) {\n    this.contentId = contentId;\n    if (contentType !== 'listbox' && contentType !== 'dialog') {\n      throw Error('CdkComboboxPanel currently only supports listbox or dialog content.');\n    }\n    this.contentType = contentType;\n\n    this.contentIdUpdated.next(this.contentId);\n    this.contentTypeUpdated.next(this.contentType);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkCombobox} from './combobox';\nimport {CdkComboboxPanel} from './combobox-panel';\n\nconst EXPORTED_DECLARATIONS = [CdkCombobox, CdkComboboxPanel];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkComboboxModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './combobox-module';\nexport * from './combobox';\nexport * from './combobox-panel';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}