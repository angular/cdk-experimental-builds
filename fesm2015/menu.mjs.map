{"version":3,"file":"menu.mjs","sources":["../../../../../../src/cdk-experimental/menu/menu-interface.ts","../../../../../../src/cdk-experimental/menu/menu-stack.ts","../../../../../../src/cdk-experimental/menu/menu-errors.ts","../../../../../../src/cdk-experimental/menu/menu-aim.ts","../../../../../../src/cdk-experimental/menu/menu-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-item-trigger.ts","../../../../../../src/cdk-experimental/menu/menu-item.ts","../../../../../../src/cdk-experimental/menu/menu-item-selectable.ts","../../../../../../src/cdk-experimental/menu/menu-group.ts","../../../../../../src/cdk-experimental/menu/pointer-focus-tracker.ts","../../../../../../src/cdk-experimental/menu/menu-base.ts","../../../../../../src/cdk-experimental/menu/menu.ts","../../../../../../src/cdk-experimental/menu/menu-bar.ts","../../../../../../src/cdk-experimental/menu/menu-item-radio.ts","../../../../../../src/cdk-experimental/menu/menu-item-checkbox.ts","../../../../../../src/cdk-experimental/menu/context-menu.ts","../../../../../../src/cdk-experimental/menu/menu-module.ts","../../../../../../src/cdk-experimental/menu/public-api.ts","../../../../../../src/cdk-experimental/menu/index.ts","../../../../../../src/cdk-experimental/menu/menu_public_index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken, ElementRef} from '@angular/core';\nimport {MenuStackItem} from './menu-stack';\nimport {FocusOrigin} from '@angular/cdk/a11y';\n\n/** Injection token used to return classes implementing the Menu interface */\nexport const CDK_MENU = new InjectionToken<Menu>('cdk-menu');\n\n/** Interface which specifies Menu operations and used to break circular dependency issues */\nexport interface Menu extends MenuStackItem {\n  /** The element the Menu directive is placed on. */\n  _elementRef: ElementRef<HTMLElement>;\n\n  /** The orientation of the menu */\n  readonly orientation: 'horizontal' | 'vertical';\n\n  /** Place focus on the first MenuItem in the menu. */\n  focusFirstItem(focusOrigin: FocusOrigin): void;\n\n  /** Place focus on the last MenuItem in the menu. */\n  focusLastItem(focusOrigin: FocusOrigin): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** Events to emit as specified by the caller once the MenuStack is empty. */\nexport const enum FocusNext {\n  nextItem,\n  previousItem,\n  currentItem,\n}\n\n/**\n * Interface for the elements tracked in the MenuStack.\n */\nexport interface MenuStackItem {\n  /** A reference to the previous Menus MenuStack instance. */\n  menuStack?: MenuStack;\n}\n\n/** Injection token used for an implementation of MenuStack. */\nexport const MENU_STACK = new InjectionToken<MenuStack>('cdk-menu-stack');\n\n/**\n * MenuStack allows subscribers to listen for close events (when a MenuStackItem is popped off\n * of the stack) in order to perform closing actions. Upon the MenuStack being empty it emits\n * from the `empty` observable specifying the next focus action which the listener should perform\n * as requested by the closer.\n */\n@Injectable()\nexport class MenuStack {\n  /** All MenuStackItems tracked by this MenuStack. */\n  private readonly _elements: MenuStackItem[] = [];\n\n  /** Emits the element which was popped off of the stack when requested by a closer. */\n  private readonly _close: Subject<MenuStackItem | undefined> = new Subject();\n\n  /** Emits once the MenuStack has become empty after popping off elements. */\n  private readonly _empty: Subject<FocusNext | undefined> = new Subject();\n\n  /** Observable which emits the MenuStackItem which has been requested to close. */\n  readonly closed: Observable<MenuStackItem | undefined> = this._close;\n\n  /**\n   * Observable which emits when the MenuStack is empty after popping off the last element. It\n   * emits a FocusNext event which specifies the action the closer has requested the listener\n   * perform.\n   */\n  readonly emptied: Observable<FocusNext | undefined> = this._empty;\n\n  /** @param menu the MenuStackItem to put on the stack. */\n  push(menu: MenuStackItem) {\n    this._elements.push(menu);\n  }\n\n  /**\n   * Pop items off of the stack up to and including `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the last item to pop off the stack.\n   * @param focusNext the event to emit on the `empty` observable if the method call resulted in an\n   * empty stack. Does not emit if the stack was initially empty or if `lastItem` was not on the\n   * stack.\n   */\n  close(lastItem: MenuStackItem, focusNext?: FocusNext) {\n    if (this._elements.indexOf(lastItem) >= 0) {\n      let poppedElement: MenuStackItem | undefined;\n      do {\n        poppedElement = this._elements.pop();\n        this._close.next(poppedElement);\n      } while (poppedElement !== lastItem);\n\n      if (this.isEmpty()) {\n        this._empty.next(focusNext);\n      }\n    }\n  }\n\n  /**\n   * Pop items off of the stack up to but excluding `lastItem` and emit each on the close\n   * observable. If the stack is empty or `lastItem` is not on the stack it does nothing.\n   * @param lastItem the element which should be left on the stack\n   * @return whether or not an item was removed from the stack\n   */\n  closeSubMenuOf(lastItem: MenuStackItem) {\n    let removed = false;\n    if (this._elements.indexOf(lastItem) >= 0) {\n      removed = this.peek() !== lastItem;\n      while (this.peek() !== lastItem) {\n        this._close.next(this._elements.pop());\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Pop off all MenuStackItems and emit each one on the `close` observable one by one.\n   * @param focusNext the event to emit on the `empty` observable once the stack is emptied. Does\n   * not emit if the stack was initially empty.\n   */\n  closeAll(focusNext?: FocusNext) {\n    if (!this.isEmpty()) {\n      while (!this.isEmpty()) {\n        const menuStackItem = this._elements.pop();\n        if (menuStackItem) {\n          this._close.next(menuStackItem);\n        }\n      }\n\n      this._empty.next(focusNext);\n    }\n  }\n\n  /** Return true if this stack is empty. */\n  isEmpty() {\n    return !this._elements.length;\n  }\n\n  /** Return the length of the stack. */\n  length() {\n    return this._elements.length;\n  }\n\n  /** Get the top most element on the stack. */\n  peek(): MenuStackItem | undefined {\n    return this._elements[this._elements.length - 1];\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception when an instance of the PointerFocusTracker is not provided.\n * @docs-private\n */\nexport function throwMissingPointerFocusTracker() {\n  throw Error('expected an instance of PointerFocusTracker to be provided');\n}\n\n/**\n * Throws an exception when a reference to the parent menu is not provided.\n * @docs-private\n */\nexport function throwMissingMenuReference() {\n  throw Error('expected a reference to the parent menu');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone, OnDestroy, InjectionToken, Directive} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, filter} from 'rxjs/operators';\nimport {PointerFocusTracker, FocusableElement} from './pointer-focus-tracker';\nimport {Menu} from './menu-interface';\nimport {throwMissingPointerFocusTracker, throwMissingMenuReference} from './menu-errors';\n\n/**\n * MenuAim is responsible for determining if a sibling menuitem's menu should be closed when a\n * Toggler item is hovered into. It is up to the hovered in item to call the MenuAim service in\n * order to determine if it may perform its close actions.\n */\nexport interface MenuAim {\n  /** Set the Menu and its PointerFocusTracker. */\n  initialize(menu: Menu, pointerTracker: PointerFocusTracker<FocusableElement & Toggler>): void;\n\n  /**\n   * Calls the `doToggle` callback when it is deemed that the user is not moving towards\n   * the submenu.\n   * @param doToggle the function called when the user is not moving towards the submenu.\n   */\n  toggle(doToggle: () => void): void;\n}\n\n/** Injection token used for an implementation of MenuAim. */\nexport const MENU_AIM = new InjectionToken<MenuAim>('cdk-menu-aim');\n\n/** Capture every nth mouse move event. */\nconst MOUSE_MOVE_SAMPLE_FREQUENCY = 3;\n\n/** The number of mouse move events to track. */\nconst NUM_POINTS = 5;\n\n/**\n * How long to wait before closing a sibling menu if a user stops short of the submenu they were\n * predicted to go into.\n */\nconst CLOSE_DELAY = 300;\n\n/**\n * An element which when hovered over may perform closing actions on the open submenu and\n * potentially open its own menu.\n */\nexport interface Toggler {\n  getMenu(): Menu | undefined;\n}\n\n/** Calculate the slope between point a and b. */\nfunction getSlope(a: Point, b: Point) {\n  return (b.y - a.y) / (b.x - a.x);\n}\n\n/** Calculate the y intercept for the given point and slope. */\nfunction getYIntercept(point: Point, slope: number) {\n  return point.y - slope * point.x;\n}\n\n/** Represents a coordinate of mouse travel. */\ntype Point = {x: number; y: number};\n\n/**\n * Whether the given mouse trajectory line defined by the slope and y intercept falls within the\n * submenu as defined by `submenuPoints`\n * @param submenuPoints the submenu DOMRect points.\n * @param m the slope of the trajectory line.\n * @param b the y intercept of the trajectory line.\n *\n * @return true if any point on the line falls within the submenu.\n */\nfunction isWithinSubmenu(submenuPoints: DOMRect, m: number, b: number) {\n  const {left, right, top, bottom} = submenuPoints;\n\n  // Check for intersection with each edge of the submenu (left, right, top, bottom)\n  // by fixing one coordinate to that edge's coordinate (either x or y) and checking if the\n  // other coordinate is within bounds.\n  return (\n    (m * left + b >= top && m * left + b <= bottom) ||\n    (m * right + b >= top && m * right + b <= bottom) ||\n    ((top - b) / m >= left && (top - b) / m <= right) ||\n    ((bottom - b) / m >= left && (bottom - b) / m <= right)\n  );\n}\n/**\n * TargetMenuAim predicts if a user is moving into a submenu. It calculates the\n * trajectory of the user's mouse movement in the current menu to determine if the\n * mouse is moving towards an open submenu.\n *\n * The determination is made by calculating the slope of the users last NUM_POINTS moves where each\n * pair of points determines if the trajectory line points into the submenu. It uses consensus\n * approach by checking if at least NUM_POINTS / 2 pairs determine that the user is moving towards\n * to submenu.\n */\n@Injectable()\nexport class TargetMenuAim implements MenuAim, OnDestroy {\n  /** The last NUM_POINTS mouse move events. */\n  private readonly _points: Point[] = [];\n\n  /** Reference to the root menu in which we are tracking mouse moves. */\n  private _menu: Menu;\n\n  /** Reference to the root menu's mouse manager. */\n  private _pointerTracker: PointerFocusTracker<Toggler & FocusableElement>;\n\n  /** The id associated with the current timeout call waiting to resolve. */\n  private _timeoutId: number | null;\n\n  /** Emits when this service is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /** Set the Menu and its PointerFocusTracker. */\n  initialize(menu: Menu, pointerTracker: PointerFocusTracker<FocusableElement & Toggler>) {\n    this._menu = menu;\n    this._pointerTracker = pointerTracker;\n    this._subscribeToMouseMoves();\n  }\n\n  /**\n   * Calls the `doToggle` callback when it is deemed that the user is not moving towards\n   * the submenu.\n   * @param doToggle the function called when the user is not moving towards the submenu.\n   */\n  toggle(doToggle: () => void) {\n    // If the menu is horizontal the sub-menus open below and there is no risk of premature\n    // closing of any sub-menus therefore we automatically resolve the callback.\n    if (this._menu.orientation === 'horizontal') {\n      doToggle();\n    }\n\n    this._checkConfigured();\n\n    const siblingItemIsWaiting = !!this._timeoutId;\n    const hasPoints = this._points.length > 1;\n\n    if (hasPoints && !siblingItemIsWaiting) {\n      if (this._isMovingToSubmenu()) {\n        this._startTimeout(doToggle);\n      } else {\n        doToggle();\n      }\n    } else if (!siblingItemIsWaiting) {\n      doToggle();\n    }\n  }\n\n  /**\n   * Start the delayed toggle handler if one isn't running already.\n   *\n   * The delayed toggle handler executes the `doToggle` callback after some period of time iff the\n   * users mouse is on an item in the current menu.\n   */\n  private _startTimeout(doToggle: () => void) {\n    // If the users mouse is moving towards a submenu we don't want to immediately resolve.\n    // Wait for some period of time before determining if the previous menu should close in\n    // cases where the user may have moved towards the submenu but stopped on a sibling menu\n    // item intentionally.\n    const timeoutId = setTimeout(() => {\n      // Resolve if the user is currently moused over some element in the root menu\n      if (this._pointerTracker!.activeElement && timeoutId === this._timeoutId) {\n        doToggle();\n      }\n      this._timeoutId = null;\n    }, CLOSE_DELAY) as any as number;\n\n    this._timeoutId = timeoutId;\n  }\n\n  /** Whether the user is heading towards the open submenu. */\n  private _isMovingToSubmenu() {\n    const submenuPoints = this._getSubmenuBounds();\n    if (!submenuPoints) {\n      return false;\n    }\n\n    let numMoving = 0;\n    const currPoint = this._points[this._points.length - 1];\n    // start from the second last point and calculate the slope between each point and the last\n    // point.\n    for (let i = this._points.length - 2; i >= 0; i--) {\n      const previous = this._points[i];\n      const slope = getSlope(currPoint, previous);\n      if (isWithinSubmenu(submenuPoints, slope, getYIntercept(currPoint, slope))) {\n        numMoving++;\n      }\n    }\n    return numMoving >= Math.floor(NUM_POINTS / 2);\n  }\n\n  /** Get the bounding DOMRect for the open submenu. */\n  private _getSubmenuBounds(): DOMRect | undefined {\n    return this._pointerTracker?.previousElement\n      ?.getMenu()\n      ?._elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  /**\n   * Check if a reference to the PointerFocusTracker and menu element is provided.\n   * @throws an error if neither reference is provided.\n   */\n  private _checkConfigured() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._pointerTracker) {\n        throwMissingPointerFocusTracker();\n      }\n      if (!this._menu) {\n        throwMissingMenuReference();\n      }\n    }\n  }\n\n  /** Subscribe to the root menus mouse move events and update the tracked mouse points. */\n  private _subscribeToMouseMoves() {\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent<MouseEvent>(this._menu._elementRef.nativeElement, 'mousemove')\n        .pipe(\n          filter((_: MouseEvent, index: number) => index % MOUSE_MOVE_SAMPLE_FREQUENCY === 0),\n          takeUntil(this._destroyed),\n        )\n        .subscribe((event: MouseEvent) => {\n          this._points.push({x: event.clientX, y: event.clientY});\n          if (this._points.length > NUM_POINTS) {\n            this._points.shift();\n          }\n        });\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n\n/**\n * CdkTargetMenuAim is a provider for the TargetMenuAim service. It should be added to an\n * element with either the `cdkMenu` or `cdkMenuBar` directive and child menu items.\n */\n@Directive({\n  selector: '[cdkTargetMenuAim]',\n  exportAs: 'cdkTargetMenuAim',\n  providers: [{provide: MENU_AIM, useClass: TargetMenuAim}],\n})\nexport class CdkTargetMenuAim {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, InjectionToken, Injector} from '@angular/core';\nimport {Menu} from './menu-interface';\nimport {MENU_STACK, MenuStack} from './menu-stack';\n\n/** Injection token used for an implementation of MenuStack. */\nexport const MENU_TRIGGER = new InjectionToken<MenuTrigger>('cdk-menu-trigger');\n\n@Injectable()\nexport class MenuTrigger {\n  private _childMenuInjector?: Injector;\n\n  protected childMenu?: Menu;\n\n  constructor(protected injector: Injector, @Inject(MENU_STACK) protected menuStack: MenuStack) {}\n\n  protected getChildMenuInjector() {\n    this._childMenuInjector =\n      this._childMenuInjector ||\n      Injector.create({\n        providers: [\n          {provide: MENU_TRIGGER, useValue: this},\n          {provide: MENU_STACK, useValue: this.menuStack},\n        ],\n        parent: this.injector,\n      });\n    return this._childMenuInjector;\n  }\n\n  registerChildMenu(child: Menu) {\n    this.childMenu = child;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  SkipSelf,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  STANDARD_DROPDOWN_ADJACENT_POSITIONS,\n  STANDARD_DROPDOWN_BELOW_POSITIONS,\n} from '@angular/cdk/overlay';\nimport {DOWN_ARROW, ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {MENU_STACK, MenuStack} from './menu-stack';\nimport {MENU_AIM, MenuAim} from './menu-aim';\nimport {MENU_TRIGGER, MenuTrigger} from './menu-trigger';\n\n/**\n * Whether the target element is a menu item to be ignored by the overlay background click handler.\n */\nexport function isClickInsideMenuOverlay(target: Element): boolean {\n  while (target?.parentElement) {\n    const isOpenTrigger =\n      target.getAttribute('aria-expanded') === 'true' &&\n      target.classList.contains('cdk-menu-trigger');\n    const isOverlayMenu =\n      target.classList.contains('cdk-menu') && !target.classList.contains('cdk-menu-inline');\n\n    if (isOpenTrigger || isOverlayMenu) {\n      return true;\n    }\n    target = target.parentElement;\n  }\n  return false;\n}\n\n/**\n * A directive to be combined with CdkMenuItem which opens the Menu it is bound to. If the\n * element is in a top level MenuBar it will open the menu on click, or if a sibling is already\n * opened it will open on hover. If it is inside of a Menu it will open the attached Submenu on\n * hover regardless of its sibling state.\n *\n * The directive must be placed along with the `cdkMenuItem` directive in order to enable full\n * functionality.\n */\n@Directive({\n  selector: '[cdkMenuTriggerFor]',\n  exportAs: 'cdkMenuTriggerFor',\n  host: {\n    '(keydown)': '_toggleOnKeydown($event)',\n    '(click)': 'toggle()',\n    'class': 'cdk-menu-trigger',\n    'aria-haspopup': 'menu',\n    '[attr.aria-expanded]': 'isMenuOpen()',\n  },\n  providers: [\n    {provide: MENU_TRIGGER, useExisting: CdkMenuItemTrigger},\n    {\n      provide: MENU_STACK,\n      deps: [[new Optional(), new SkipSelf(), new Inject(MENU_STACK)]],\n      useFactory: (parentMenuStack?: MenuStack) => parentMenuStack || new MenuStack(),\n    },\n  ],\n})\nexport class CdkMenuItemTrigger extends MenuTrigger implements OnDestroy {\n  /** Template reference variable to the menu this trigger opens */\n  @Input('cdkMenuTriggerFor')\n  _menuTemplateRef?: TemplateRef<unknown>;\n\n  /** A list of preferred menu positions to be used when constructing the `FlexibleConnectedPositionStrategy` for this trigger's menu. */\n  @Input('cdkMenuPosition') menuPosition: ConnectedPosition[];\n\n  /** Emits when the attached menu is requested to open */\n  @Output('cdkMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close */\n  @Output('cdkMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** A reference to the overlay which manages the triggered menu */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _menuPortal: TemplatePortal;\n\n  /** Emits when this trigger is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  /** Emits when the outside pointer events listener on the overlay should be stopped. */\n  private readonly _stopOutsideClicksListener = merge(this.closed, this._destroyed);\n\n  constructor(\n    injector: Injector,\n    private readonly _elementRef: ElementRef<HTMLElement>,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _ngZone: NgZone,\n    @Inject(MENU_STACK) menuStack: MenuStack,\n    @Optional() @Inject(CDK_MENU) private readonly _parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _directionality?: Directionality,\n  ) {\n    super(injector, menuStack);\n    this._registerCloseHandler();\n    this._subscribeToMouseEnter();\n  }\n\n  /** Open/close the attached menu if the trigger has been configured with one */\n  toggle() {\n    if (this.hasMenu()) {\n      this.isMenuOpen() ? this.closeMenu() : this.openMenu();\n    }\n  }\n\n  /** Open the attached menu. */\n  openMenu() {\n    if (!this.isMenuOpen()) {\n      this.opened.next();\n\n      this._overlayRef = this._overlayRef || this._overlay.create(this._getOverlayConfig());\n      this._overlayRef.attach(this._getPortal());\n      this._subscribeToOutsideClicks();\n    }\n  }\n\n  /** Close the opened menu. */\n  closeMenu() {\n    if (this.isMenuOpen()) {\n      this.closed.next();\n\n      this._overlayRef!.detach();\n    }\n    this._closeSiblingTriggers();\n  }\n\n  /** Return true if the trigger has an attached menu */\n  hasMenu() {\n    return !!this._menuTemplateRef;\n  }\n\n  /** Whether the menu this button is a trigger for is open */\n  isMenuOpen() {\n    return this._overlayRef ? this._overlayRef.hasAttached() : false;\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this.childMenu;\n  }\n\n  /**\n   * Subscribe to the mouseenter events and close any sibling menu items if this element is moused\n   * into.\n   */\n  private _subscribeToMouseEnter() {\n    // Closes any sibling menu items and opens the menu associated with this trigger.\n    const toggleMenus = () =>\n      this._ngZone.run(() => {\n        this._closeSiblingTriggers();\n        this.openMenu();\n      });\n\n    this._ngZone.runOutsideAngular(() => {\n      fromEvent(this._elementRef.nativeElement, 'mouseenter')\n        .pipe(\n          filter(() => !this.menuStack.isEmpty() && !this.isMenuOpen()),\n          takeUntil(this._destroyed),\n        )\n        .subscribe(() => {\n          if (this._menuAim) {\n            this._menuAim.toggle(toggleMenus);\n          } else {\n            toggleMenus();\n          }\n        });\n    });\n  }\n\n  /**\n   * Handles keyboard events for the menu item, specifically opening/closing the attached menu and\n   * focusing the appropriate submenu item.\n   * @param event the keyboard event to handle\n   */\n  _toggleOnKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    switch (keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.toggle();\n        this.childMenu?.focusFirstItem('keyboard');\n        break;\n\n      case RIGHT_ARROW:\n        if (this._parentMenu && this._isParentVertical() && this._directionality?.value !== 'rtl') {\n          event.preventDefault();\n          this.openMenu();\n          this.childMenu?.focusFirstItem('keyboard');\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._parentMenu && this._isParentVertical() && this._directionality?.value === 'rtl') {\n          event.preventDefault();\n          this.openMenu();\n          this.childMenu?.focusFirstItem('keyboard');\n        }\n        break;\n\n      case DOWN_ARROW:\n      case UP_ARROW:\n        if (!this._isParentVertical()) {\n          event.preventDefault();\n          this.openMenu();\n          keyCode === DOWN_ARROW\n            ? this.childMenu?.focusFirstItem('keyboard')\n            : this.childMenu?.focusLastItem('keyboard');\n        }\n        break;\n    }\n  }\n\n  /** Close out any sibling menu trigger menus. */\n  private _closeSiblingTriggers() {\n    if (this._parentMenu) {\n      // If nothing was removed from the stack and the last element is not the parent item\n      // that means that the parent menu is a menu bar since we don't put the menu bar on the\n      // stack\n      const isParentMenuBar =\n        !this.menuStack.closeSubMenuOf(this._parentMenu) &&\n        this.menuStack.peek() !== this._parentMenu;\n\n      if (isParentMenuBar) {\n        this.menuStack.closeAll();\n      }\n    } else {\n      this.menuStack.closeAll();\n    }\n  }\n\n  /** Get the configuration object used to create the overlay */\n  private _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /** Build the position strategy for the overlay which specifies where to place the menu */\n  private _getOverlayPositionStrategy(): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(this._elementRef)\n      .withPositions(this._getOverlayPositions());\n  }\n\n  /** Determine and return where to position the opened menu relative to the menu item */\n  private _getOverlayPositions(): ConnectedPosition[] {\n    return (\n      this.menuPosition ??\n      (!this._parentMenu || this._parentMenu.orientation === 'horizontal'\n        ? STANDARD_DROPDOWN_BELOW_POSITIONS\n        : STANDARD_DROPDOWN_ADJACENT_POSITIONS)\n    );\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getPortal() {\n    const hasMenuContentChanged = this._menuTemplateRef !== this._menuPortal?.templateRef;\n    if (this._menuTemplateRef && (!this._menuPortal || hasMenuContentChanged)) {\n      this._menuPortal = new TemplatePortal(\n        this._menuTemplateRef,\n        this._viewContainerRef,\n        undefined,\n        this.getChildMenuInjector(),\n      );\n    }\n\n    return this._menuPortal;\n  }\n\n  /**\n   * @return true if if the enclosing parent menu is configured in a vertical orientation.\n   */\n  private _isParentVertical() {\n    return this._parentMenu?.orientation === 'vertical';\n  }\n\n  /**\n   * Subscribe to the MenuStack close events if this is a standalone trigger and close out the menu\n   * this triggers when requested.\n   */\n  private _registerCloseHandler() {\n    if (!this._parentMenu) {\n      this.menuStack.closed.pipe(takeUntil(this._destroyed)).subscribe(item => {\n        if (item === this.childMenu) {\n          this.closeMenu();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /**\n   * Subscribe to the overlays outside pointer events stream and handle closing out the stack if a\n   * click occurs outside the menus.\n   */\n  private _subscribeToOutsideClicks() {\n    if (this._overlayRef) {\n      this._overlayRef\n        .outsidePointerEvents()\n        .pipe(takeUntil(this._stopOutsideClicksListener))\n        .subscribe(event => {\n          if (!isClickInsideMenuOverlay(event.target as Element)) {\n            this.menuStack.closeAll();\n          }\n        });\n    }\n  }\n\n  /** Destroy and unset the overlay reference it if exists */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {ENTER, LEFT_ARROW, RIGHT_ARROW, SPACE} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {fromEvent, Subject} from 'rxjs';\nimport {filter, takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {FocusNext, MENU_STACK, MenuStack} from './menu-stack';\nimport {FocusableElement} from './pointer-focus-tracker';\nimport {MENU_AIM, MenuAim, Toggler} from './menu-aim';\n\n/**\n * Directive which provides the ability for an element to be focused and navigated to using the\n * keyboard when residing in a CdkMenu, CdkMenuBar, or CdkMenuGroup. It performs user defined\n * behavior when clicked.\n */\n@Directive({\n  selector: '[cdkMenuItem]',\n  exportAs: 'cdkMenuItem',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitem',\n    'class': 'cdk-menu-item',\n    '[attr.aria-disabled]': 'disabled || null',\n    '(blur)': '_resetTabIndex()',\n    '(mouseout)': '_resetTabIndex()',\n    '(focus)': '_setTabIndex()',\n    '(mouseenter)': '_setTabIndex($event)',\n    '(click)': 'trigger()',\n    '(keydown)': '_onKeydown($event)',\n  },\n})\nexport class CdkMenuItem implements FocusableOption, FocusableElement, Toggler, OnDestroy {\n  /**  Whether the CdkMenuItem is disabled - defaults to false */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /**\n   * The text used to locate this item during menu typeahead. If not specified,\n   * the `textContent` of the item will be used.\n   */\n  @Input() typeahead: string;\n\n  /**\n   * If this MenuItem is a regular MenuItem, outputs when it is triggered by a keyboard or mouse\n   * event.\n   */\n  @Output('cdkMenuItemTriggered') readonly triggered: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * The tabindex for this menu item managed internally and used for implementing roving a\n   * tab index.\n   */\n  _tabindex: 0 | -1 = -1;\n\n  /** Emits when the menu item is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(\n    readonly _elementRef: ElementRef<HTMLElement>,\n    private readonly _ngZone: NgZone,\n    @Optional() @Inject(MENU_STACK) private readonly _menuStack?: MenuStack,\n    @Optional() @Inject(CDK_MENU) private readonly _parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() private readonly _dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItem` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() private readonly _menuTrigger?: CdkMenuItemTrigger,\n  ) {\n    this._setupMouseEnter();\n\n    if (this._isStandaloneItem()) {\n      this._tabindex = 0;\n    }\n  }\n\n  /** Place focus on the element. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Reset the _tabindex to -1. */\n  _resetTabIndex() {\n    if (!this._isStandaloneItem()) {\n      this._tabindex = -1;\n    }\n  }\n\n  /**\n   * Set the tab index to 0 if not disabled and it's a focus event, or a mouse enter if this element\n   * is not in a menu bar.\n   */\n  _setTabIndex(event?: MouseEvent) {\n    if (this.disabled) {\n      return;\n    }\n\n    // don't set the tabindex if there are no open sibling or parent menus\n    if (!event || !this._menuStack?.isEmpty()) {\n      this._tabindex = 0;\n    }\n  }\n\n  /** Whether this menu item is standalone or within a menu or menu bar. */\n  _isStandaloneItem() {\n    return !this._parentMenu;\n  }\n\n  /**\n   * If the menu item is not disabled and the element does not have a menu trigger attached, emit\n   * on the cdkMenuItemTriggered emitter and close all open menus.\n   */\n  trigger() {\n    if (!this.disabled && !this.hasMenu()) {\n      this.triggered.next();\n      this._menuStack?.closeAll();\n    }\n  }\n\n  /** Whether the menu item opens a menu. */\n  hasMenu() {\n    return !!this._menuTrigger?.hasMenu();\n  }\n\n  /** Return true if this MenuItem has an attached menu and it is open. */\n  isMenuOpen() {\n    return !!this._menuTrigger?.isMenuOpen();\n  }\n\n  /**\n   * Get a reference to the rendered Menu if the Menu is open and it is visible in the DOM.\n   * @return the menu if it is open, otherwise undefined.\n   */\n  getMenu(): Menu | undefined {\n    return this._menuTrigger?.getMenu();\n  }\n\n  /** Get the MenuItemTrigger associated with this element. */\n  getMenuTrigger(): CdkMenuItemTrigger | undefined {\n    return this._menuTrigger;\n  }\n\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel(): string {\n    return this.typeahead || this._elementRef.nativeElement.textContent?.trim() || '';\n  }\n\n  /**\n   * Handles keyboard events for the menu item, specifically either triggering the user defined\n   * callback or opening/closing the current menu based on whether the left or right arrow key was\n   * pressed.\n   * @param event the keyboard event to handle\n   */\n  _onKeydown(event: KeyboardEvent) {\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        event.preventDefault();\n        this.trigger();\n        break;\n\n      case RIGHT_ARROW:\n        if (this._parentMenu && this._isParentVertical()) {\n          if (this._dir?.value === 'rtl') {\n            event.preventDefault();\n            this._menuStack?.close(this._parentMenu, FocusNext.previousItem);\n          } else if (!this.hasMenu()) {\n            event.preventDefault();\n            this._menuStack?.closeAll(FocusNext.nextItem);\n          }\n        }\n        break;\n\n      case LEFT_ARROW:\n        if (this._parentMenu && this._isParentVertical()) {\n          if (this._dir?.value !== 'rtl') {\n            event.preventDefault();\n            this._menuStack?.close(this._parentMenu, FocusNext.previousItem);\n          } else if (!this.hasMenu()) {\n            event.preventDefault();\n            this._menuStack?.closeAll(FocusNext.nextItem);\n          }\n        }\n        break;\n    }\n  }\n\n  /**\n   * Subscribe to the mouseenter events and close any sibling menu items if this element is moused\n   * into.\n   */\n  private _setupMouseEnter() {\n    if (!this._isStandaloneItem()) {\n      const closeOpenSiblings = () =>\n        this._ngZone.run(() => this._menuStack?.closeSubMenuOf(this._parentMenu!));\n\n      this._ngZone.runOutsideAngular(() =>\n        fromEvent(this._elementRef.nativeElement, 'mouseenter')\n          .pipe(\n            filter(() => !this._menuStack?.isEmpty() && !this.hasMenu()),\n            takeUntil(this._destroyed),\n          )\n          .subscribe(() => {\n            if (this._menuAim) {\n              this._menuAim.toggle(closeOpenSiblings);\n            } else {\n              closeOpenSiblings();\n            }\n          }),\n      );\n    }\n  }\n\n  /**\n   * Return true if the enclosing parent menu is configured in a horizontal orientation, false\n   * otherwise or if no parent.\n   */\n  private _isParentVertical() {\n    return this._parentMenu?.orientation === 'vertical';\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {Input, Directive, Output, EventEmitter} from '@angular/core';\nimport {CdkMenuItem} from './menu-item';\n\n/** Counter used to set a unique id and name for a selectable item */\nlet nextId = 0;\n\n/**\n * Base class providing checked state for MenuItems along with outputting a clicked event when the\n * element is triggered. It provides functionality for selectable elements.\n */\n@Directive()\nexport abstract class CdkMenuItemSelectable extends CdkMenuItem {\n  /** Event emitted when the selectable item is clicked */\n  @Output('cdkMenuItemToggled') readonly toggled: EventEmitter<CdkMenuItemSelectable> =\n    new EventEmitter();\n\n  /** Whether the element is checked */\n  @Input()\n  get checked(): boolean {\n    return this._checked;\n  }\n  set checked(value: BooleanInput) {\n    this._checked = coerceBooleanProperty(value);\n  }\n  private _checked = false;\n\n  /** The name of the selectable element with a default value */\n  @Input() name: string = `cdk-selectable-item-${nextId++}`;\n\n  /** The id of the selectable element with a default value */\n  @Input() id: string = `cdk-selectable-item-${nextId++}`;\n\n  /** If the element is not disabled emit the click event */\n  override trigger() {\n    if (!this.disabled) {\n      this.toggled.next(this);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * Directive which acts as a grouping container for `CdkMenuItem` instances with\n * `role=\"menuitemradio\"`, similar to a `role=\"radiogroup\"` element.\n */\n@Directive({\n  selector: '[cdkMenuGroup]',\n  exportAs: 'cdkMenuGroup',\n  host: {\n    'role': 'group',\n    'class': 'cdk-menu-group',\n  },\n  providers: [{provide: UniqueSelectionDispatcher, useClass: UniqueSelectionDispatcher}],\n})\nexport class CdkMenuGroup implements AfterContentInit, OnDestroy {\n  /** Emits the element when checkbox or radiobutton state changed  */\n  @Output() readonly change: EventEmitter<CdkMenuItem> = new EventEmitter();\n\n  /** List of menuitemcheckbox or menuitemradio elements which reside in this group */\n  @ContentChildren(CdkMenuItemSelectable, {descendants: true})\n  private readonly _selectableItems: QueryList<CdkMenuItemSelectable>;\n\n  /** Emits when the _selectableItems QueryList triggers a change */\n  private readonly _selectableChanges: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this._registerMenuSelectionListeners();\n  }\n\n  ngOnDestroy() {\n    this._selectableChanges.next();\n    this._selectableChanges.complete();\n  }\n\n  /**\n   * Register the child selectable elements with the change emitter and ensure any new child\n   * elements do so as well.\n   */\n  private _registerMenuSelectionListeners() {\n    this._selectableItems.forEach(selectable => this._registerClickListener(selectable));\n\n    this._selectableItems.changes.subscribe((selectableItems: QueryList<CdkMenuItemSelectable>) => {\n      this._selectableChanges.next();\n      selectableItems.forEach(selectable => this._registerClickListener(selectable));\n    });\n  }\n\n  /** Register each selectable to emit on the change Emitter when clicked */\n  private _registerClickListener(selectable: CdkMenuItemSelectable) {\n    selectable.toggled\n      .pipe(takeUntil(this._selectableChanges))\n      .subscribe(() => this.change.next(selectable));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {QueryList, ElementRef} from '@angular/core';\nimport {fromEvent, Observable, defer, Subject} from 'rxjs';\nimport {mapTo, mergeAll, takeUntil, startWith, mergeMap} from 'rxjs/operators';\n\n/** Item to track for mouse focus events. */\nexport interface FocusableElement {\n  /** A reference to the element to be tracked. */\n  _elementRef: ElementRef<HTMLElement>;\n}\n\n/**\n * PointerFocusTracker keeps track of the currently active item under mouse focus. It also has\n * observables which emit when the users mouse enters and leaves a tracked element.\n */\nexport class PointerFocusTracker<T extends FocusableElement> {\n  /** Emits when an element is moused into. */\n  readonly entered: Observable<T> = this._getItemPointerEntries();\n\n  /** Emits when an element is moused out. */\n  readonly exited: Observable<T> = this._getItemPointerExits();\n\n  /** The element currently under mouse focus. */\n  activeElement?: T;\n\n  /** The element previously under mouse focus. */\n  previousElement?: T;\n\n  /** Emits when this is destroyed. */\n  private readonly _destroyed: Subject<void> = new Subject();\n\n  constructor(private readonly _items: QueryList<T>) {\n    this.entered.subscribe(element => (this.activeElement = element));\n    this.exited.subscribe(() => {\n      this.previousElement = this.activeElement;\n      this.activeElement = undefined;\n    });\n  }\n\n  /**\n   * Gets a stream of pointer (mouse) entries into the given items.\n   * This should typically run outside the Angular zone.\n   */\n  private _getItemPointerEntries(): Observable<T> {\n    return defer(() =>\n      this._items.changes.pipe(\n        startWith(this._items),\n        mergeMap((list: QueryList<T>) =>\n          list.map(element =>\n            fromEvent(element._elementRef.nativeElement, 'mouseenter').pipe(\n              mapTo(element),\n              takeUntil(this._items.changes),\n            ),\n          ),\n        ),\n        mergeAll(),\n      ),\n    );\n  }\n\n  /**\n   * Gets a stream of pointer (mouse) exits out of the given items.\n   * This should typically run outside the Angular zone.\n   */\n  private _getItemPointerExits() {\n    return defer(() =>\n      this._items.changes.pipe(\n        startWith(this._items),\n        mergeMap((list: QueryList<T>) =>\n          list.map(element =>\n            fromEvent(element._elementRef.nativeElement, 'mouseout').pipe(\n              mapTo(element),\n              takeUntil(this._items.changes),\n            ),\n          ),\n        ),\n        mergeAll(),\n      ),\n    );\n  }\n\n  /** Stop the managers listeners. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkMenuGroup} from './menu-group';\nimport {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  OnDestroy,\n  Optional,\n  QueryList,\n} from '@angular/core';\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {CdkMenuItem} from './menu-item';\nimport {merge, Subject} from 'rxjs';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {mapTo, mergeAll, mergeMap, startWith, switchMap, takeUntil} from 'rxjs/operators';\nimport {MENU_STACK, MenuStack, MenuStackItem} from './menu-stack';\nimport {Menu} from './menu-interface';\nimport {PointerFocusTracker} from './pointer-focus-tracker';\n\n@Directive({\n  host: {\n    '[attr.aria-orientation]': 'orientation',\n    '(focus)': 'focusFirstItem()',\n  },\n})\nexport abstract class CdkMenuBase\n  extends CdkMenuGroup\n  implements Menu, AfterContentInit, OnDestroy\n{\n  /**\n   * Sets the aria-orientation attribute and determines where menus will be opened.\n   * Does not affect styling/layout.\n   */\n  readonly orientation: 'horizontal' | 'vertical' = 'vertical';\n\n  /** All child MenuItem elements nested in this Menu. */\n  @ContentChildren(CdkMenuItem, {descendants: true})\n  protected readonly items: QueryList<CdkMenuItem>;\n\n  /** Handles keyboard events for the menu. */\n  protected keyManager: FocusKeyManager<CdkMenuItem>;\n\n  /** Emits when the MenuBar is destroyed. */\n  protected readonly destroyed: Subject<void> = new Subject();\n\n  /** The Menu Item which triggered the open submenu. */\n  protected openItem?: CdkMenuItem;\n\n  /** Manages items under mouse focus */\n  protected pointerTracker?: PointerFocusTracker<CdkMenuItem>;\n\n  protected constructor(\n    readonly _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(MENU_STACK) readonly menuStack?: MenuStack,\n    @Optional() protected readonly dir?: Directionality,\n  ) {\n    super();\n  }\n\n  override ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._setKeyManager();\n    this._subscribeToMenuOpen();\n    this._subscribeToMenuStackClosed();\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n\n  /** Place focus on the first MenuItem in the menu and set the focus origin. */\n  focusFirstItem(focusOrigin: FocusOrigin = 'program') {\n    this.keyManager.setFocusOrigin(focusOrigin);\n    this.keyManager.setFirstItemActive();\n  }\n\n  /** Place focus on the last MenuItem in the menu and set the focus origin. */\n  focusLastItem(focusOrigin: FocusOrigin = 'program') {\n    this.keyManager.setFocusOrigin(focusOrigin);\n    this.keyManager.setLastItemActive();\n  }\n\n  /** Return true if this menu has been configured in a horizontal orientation. */\n  protected isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n\n  /** Return true if the MenuBar has an open submenu. */\n  protected hasOpenSubmenu() {\n    return !!this.openItem;\n  }\n\n  /**\n   * Close the open menu if the current active item opened the requested MenuStackItem.\n   * @param item the MenuStackItem requested to be closed.\n   */\n  protected closeOpenMenu(menu: MenuStackItem | undefined) {\n    const keyManager = this.keyManager;\n    const trigger = this.openItem;\n    if (menu === trigger?.getMenuTrigger()?.getMenu()) {\n      trigger?.getMenuTrigger()?.closeMenu();\n      // If the user has moused over a sibling item we want to focus the element under mouse focus\n      // not the trigger which previously opened the now closed menu.\n      if (trigger) {\n        keyManager.setActiveItem(this.pointerTracker?.activeElement || trigger);\n      }\n    }\n  }\n\n  /** Setup the FocusKeyManager with the correct orientation for the menu. */\n  private _setKeyManager() {\n    this.keyManager = new FocusKeyManager(this.items).withWrap().withTypeAhead().withHomeAndEnd();\n\n    if (this.isHorizontal()) {\n      this.keyManager.withHorizontalOrientation(this.dir?.value || 'ltr');\n    } else {\n      this.keyManager.withVerticalOrientation();\n    }\n  }\n\n  /**\n   * Subscribe to the menu trigger's open events in order to track the trigger which opened the menu\n   * and stop tracking it when the menu is closed.\n   */\n  private _subscribeToMenuOpen() {\n    const exitCondition = merge(this.items.changes, this.destroyed);\n    this.items.changes\n      .pipe(\n        startWith(this.items),\n        mergeMap((list: QueryList<CdkMenuItem>) =>\n          list\n            .filter(item => item.hasMenu())\n            .map(item => item.getMenuTrigger()!.opened.pipe(mapTo(item), takeUntil(exitCondition))),\n        ),\n        mergeAll(),\n        switchMap((item: CdkMenuItem) => {\n          this.openItem = item;\n          return item.getMenuTrigger()!.closed;\n        }),\n        takeUntil(this.destroyed),\n      )\n      .subscribe(() => (this.openItem = undefined));\n  }\n\n  /** Subscribe to the MenuStack close and empty observables. */\n  private _subscribeToMenuStackClosed() {\n    this.menuStack?.closed\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(item => this.closeOpenMenu(item));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n} from '@angular/core';\nimport {\n  DOWN_ARROW,\n  ESCAPE,\n  hasModifierKey,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  TAB,\n  UP_ARROW,\n} from '@angular/cdk/keycodes';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {take, takeUntil} from 'rxjs/operators';\nimport {CdkMenuGroup} from './menu-group';\nimport {CDK_MENU} from './menu-interface';\nimport {FocusNext, MENU_STACK, MenuStack} from './menu-stack';\nimport {PointerFocusTracker} from './pointer-focus-tracker';\nimport {MENU_AIM, MenuAim} from './menu-aim';\nimport {MENU_TRIGGER, MenuTrigger} from './menu-trigger';\nimport {CdkMenuBase} from './menu-base';\n\n/**\n * Directive which configures the element as a Menu which should contain child elements marked as\n * CdkMenuItem or CdkMenuGroup. Sets the appropriate role and aria-attributes for a menu and\n * contains accessible keyboard and mouse handling logic.\n *\n * It also acts as a RadioGroup for elements marked with role `menuitemradio`.\n */\n@Directive({\n  selector: '[cdkMenu]',\n  exportAs: 'cdkMenu',\n  host: {\n    'role': 'menu',\n    'class': 'cdk-menu',\n    '[tabindex]': '_isInline() ? 0 : null',\n    '[class.cdk-menu-inline]': '_isInline()',\n    '(keydown)': '_handleKeyEvent($event)',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenu},\n    {provide: CDK_MENU, useExisting: CdkMenu},\n  ],\n})\nexport class CdkMenu extends CdkMenuBase implements AfterContentInit, OnDestroy {\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** List of nested CdkMenuGroup elements */\n  @ContentChildren(CdkMenuGroup, {descendants: true})\n  private readonly _nestedGroups: QueryList<CdkMenuGroup>;\n\n  constructor(\n    private readonly _ngZone: NgZone,\n    elementRef: ElementRef<HTMLElement>,\n    @Optional() @Inject(MENU_STACK) menuStack?: MenuStack,\n    @Optional() @Inject(MENU_TRIGGER) private _parentTrigger?: MenuTrigger,\n    @Self() @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() dir?: Directionality,\n  ) {\n    super(elementRef, menuStack, dir);\n    this.destroyed.subscribe(this.closed);\n    this.menuStack?.push(this);\n    this._parentTrigger?.registerChildMenu(this);\n  }\n\n  override ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._completeChangeEmitter();\n    this._subscribeToMenuStackEmptied();\n    this._subscribeToMouseManager();\n    this._menuAim?.initialize(this, this.pointerTracker!);\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.closed.complete();\n    this.pointerTracker?.destroy();\n  }\n\n  /** Handle keyboard events for the Menu. */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this.keyManager;\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        if (this.isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case UP_ARROW:\n      case DOWN_ARROW:\n        if (!this.isHorizontal()) {\n          event.preventDefault();\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n        }\n        break;\n\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.menuStack?.close(this, FocusNext.currentItem);\n        }\n        break;\n\n      case TAB:\n        this.menuStack?.closeAll();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Complete the change emitter if there are any nested MenuGroups or register to complete the\n   * change emitter if a MenuGroup is rendered at some point\n   */\n  // TODO(mmalerba): This doesnt' quite work. It causes change events to stop\n  //  firing for radio items directly in the menu if a second group of options\n  //  is added in a menu-group.\n  private _completeChangeEmitter() {\n    if (this._hasNestedGroups()) {\n      this.change.complete();\n    } else {\n      this._nestedGroups.changes.pipe(take(1)).subscribe(() => this.change.complete());\n    }\n  }\n\n  /** Return true if there are nested CdkMenuGroup elements within the Menu */\n  private _hasNestedGroups() {\n    // view engine has a bug where @ContentChildren will return the current element\n    // along with children if the selectors match - not just the children.\n    // Here, if there is at least one element, we check to see if the first element is a CdkMenu in\n    // order to ensure that we return true iff there are child CdkMenuGroup elements.\n    return this._nestedGroups.length > 0 && !(this._nestedGroups.first instanceof CdkMenu);\n  }\n\n  /**\n   * Set the PointerFocusTracker and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this.pointerTracker = new PointerFocusTracker(this.items);\n      this.pointerTracker.entered\n        .pipe(takeUntil(this.closed))\n        .subscribe(item => this.keyManager.setActiveItem(item));\n    });\n  }\n\n  /** Set focus the either the current, previous or next item based on the FocusNext event. */\n  private _toggleMenuFocus(event: FocusNext | undefined) {\n    const keyManager = this.keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  /**\n   * Return true if this menu is an inline menu. That is, it does not exist in a pop-up and is\n   * always visible in the dom.\n   */\n  _isInline() {\n    return !this.menuStack;\n  }\n\n  private _subscribeToMenuStackEmptied() {\n    this.menuStack?.emptied\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(event => this._toggleMenuFocus(event));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  Inject,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Self,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {DOWN_ARROW, ESCAPE, LEFT_ARROW, RIGHT_ARROW, TAB, UP_ARROW} from '@angular/cdk/keycodes';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkMenuGroup} from './menu-group';\nimport {CDK_MENU} from './menu-interface';\nimport {FocusNext, MENU_STACK, MenuStack} from './menu-stack';\nimport {PointerFocusTracker} from './pointer-focus-tracker';\nimport {MENU_AIM, MenuAim} from './menu-aim';\nimport {CdkMenuBase} from './menu-base';\n\n/**\n * Directive applied to an element which configures it as a MenuBar by setting the appropriate\n * role, aria attributes, and accessible keyboard and mouse handling logic. The component that\n * this directive is applied to should contain components marked with CdkMenuItem.\n *\n */\n@Directive({\n  selector: '[cdkMenuBar]',\n  exportAs: 'cdkMenuBar',\n  host: {\n    'role': 'menubar',\n    'class': 'cdk-menu-bar',\n    'tabindex': '0',\n    '(keydown)': '_handleKeyEvent($event)',\n  },\n  providers: [\n    {provide: CdkMenuGroup, useExisting: CdkMenuBar},\n    {provide: CDK_MENU, useExisting: CdkMenuBar},\n    {provide: MENU_STACK, useClass: MenuStack},\n  ],\n})\nexport class CdkMenuBar extends CdkMenuBase implements AfterContentInit, OnDestroy {\n  override readonly orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  override menuStack: MenuStack;\n\n  constructor(\n    private readonly _ngZone: NgZone,\n    elementRef: ElementRef<HTMLElement>,\n    @Inject(MENU_STACK) menuStack: MenuStack,\n    @Self() @Optional() @Inject(MENU_AIM) private readonly _menuAim?: MenuAim,\n    @Optional() dir?: Directionality,\n  ) {\n    super(elementRef, menuStack, dir);\n  }\n\n  override ngAfterContentInit() {\n    super.ngAfterContentInit();\n    this._subscribeToMenuStackEmptied();\n    this._subscribeToMouseManager();\n    this._menuAim?.initialize(this, this.pointerTracker!);\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this.pointerTracker?.destroy();\n  }\n\n  /**\n   * Handle keyboard events, specifically changing the focused element and/or toggling the active\n   * items menu.\n   * @param event the KeyboardEvent to handle.\n   */\n  _handleKeyEvent(event: KeyboardEvent) {\n    const keyManager = this.keyManager;\n    switch (event.keyCode) {\n      case UP_ARROW:\n      case DOWN_ARROW:\n      case LEFT_ARROW:\n      case RIGHT_ARROW:\n        const horizontalArrows = event.keyCode === LEFT_ARROW || event.keyCode === RIGHT_ARROW;\n        // For a horizontal menu if the left/right keys were clicked, or a vertical menu if the\n        // up/down keys were clicked: if the current menu is open, close it then focus and open the\n        // next  menu.\n        if (\n          (this.isHorizontal() && horizontalArrows) ||\n          (!this.isHorizontal() && !horizontalArrows)\n        ) {\n          event.preventDefault();\n\n          const prevIsOpen = keyManager.activeItem?.isMenuOpen();\n          keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.onKeydown(event);\n          if (prevIsOpen) {\n            keyManager.activeItem?.getMenuTrigger()?.openMenu();\n          }\n        }\n        break;\n\n      case ESCAPE:\n        event.preventDefault();\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      case TAB:\n        keyManager.activeItem?.getMenuTrigger()?.closeMenu();\n        break;\n\n      default:\n        keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Set the PointerFocusTracker and ensure that when mouse focus changes the key manager is updated\n   * with the latest menu item under mouse focus.\n   */\n  private _subscribeToMouseManager() {\n    this._ngZone.runOutsideAngular(() => {\n      this.pointerTracker = new PointerFocusTracker(this.items);\n      this.pointerTracker.entered.pipe(takeUntil(this.destroyed)).subscribe(item => {\n        if (this.hasOpenSubmenu()) {\n          this.keyManager.setActiveItem(item);\n        }\n      });\n    });\n  }\n\n  /**\n   * Set focus to either the current, previous or next item based on the FocusNext event, then\n   * open the previous or next item.\n   */\n  private _toggleOpenMenu(event: FocusNext | undefined) {\n    const keyManager = this.keyManager;\n    switch (event) {\n      case FocusNext.nextItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setNextItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.previousItem:\n        keyManager.setFocusOrigin('keyboard');\n        keyManager.setPreviousItemActive();\n        keyManager.activeItem?.getMenuTrigger()?.openMenu();\n        break;\n\n      case FocusNext.currentItem:\n        if (keyManager.activeItem) {\n          keyManager.setFocusOrigin('keyboard');\n          keyManager.setActiveItem(keyManager.activeItem);\n        }\n        break;\n    }\n  }\n\n  private _subscribeToMenuStackEmptied() {\n    this.menuStack?.emptied\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(event => this._toggleOpenMenu(event));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {UniqueSelectionDispatcher} from '@angular/cdk/collections';\nimport {Directive, ElementRef, Inject, NgZone, OnDestroy, Optional, Self} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CDK_MENU, Menu} from './menu-interface';\nimport {MENU_AIM, MenuAim} from './menu-aim';\nimport {MENU_STACK, MenuStack} from './menu-stack';\n\n/**\n * A directive providing behavior for the \"menuitemradio\" ARIA role, which behaves similarly to\n * a conventional radio-button. Any sibling `CdkMenuItemRadio` instances within the same `CdkMenu`\n * or `CdkMenuGroup` comprise a radio group with unique selection enforced.\n */\n@Directive({\n  selector: '[cdkMenuItemRadio]',\n  exportAs: 'cdkMenuItemRadio',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemradio',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemRadio},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemRadio extends CdkMenuItemSelectable implements OnDestroy {\n  /** Function to unregister the selection dispatcher */\n  private _removeDispatcherListener: () => void;\n\n  constructor(\n    private readonly _selectionDispatcher: UniqueSelectionDispatcher,\n    element: ElementRef<HTMLElement>,\n    ngZone: NgZone,\n    @Optional() @Inject(MENU_STACK) menuStack?: MenuStack,\n    @Optional() @Inject(CDK_MENU) parentMenu?: Menu,\n    @Optional() @Inject(MENU_AIM) menuAim?: MenuAim,\n    @Optional() dir?: Directionality,\n    /** Reference to the CdkMenuItemTrigger directive if one is added to the same element */\n    // `CdkMenuItemRadio` is commonly used in combination with a `CdkMenuItemTrigger`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Self() @Optional() menuTrigger?: CdkMenuItemTrigger,\n  ) {\n    super(element, ngZone, menuStack, parentMenu, menuAim, dir, menuTrigger);\n\n    this._registerDispatcherListener();\n  }\n\n  /** Configure the unique selection dispatcher listener in order to toggle the checked state  */\n  private _registerDispatcherListener() {\n    this._removeDispatcherListener = this._selectionDispatcher.listen(\n      (id: string, name: string) => (this.checked = this.id === id && this.name === name),\n    );\n  }\n\n  /** Toggles the checked state of the radio-button. */\n  override trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this._selectionDispatcher.notify(this.id, this.name);\n    }\n  }\n\n  override ngOnDestroy() {\n    super.ngOnDestroy();\n    this._removeDispatcherListener();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkMenuItemSelectable} from './menu-item-selectable';\nimport {CdkMenuItem} from './menu-item';\n\n/**\n * A directive providing behavior for the \"menuitemcheckbox\" ARIA role, which behaves similarly to a\n * conventional checkbox.\n */\n@Directive({\n  selector: '[cdkMenuItemCheckbox]',\n  exportAs: 'cdkMenuItemCheckbox',\n  host: {\n    '[tabindex]': '_tabindex',\n    'type': 'button',\n    'role': 'menuitemcheckbox',\n    '[attr.aria-checked]': 'checked || null',\n    '[attr.aria-disabled]': 'disabled || null',\n  },\n  providers: [\n    {provide: CdkMenuItemSelectable, useExisting: CdkMenuItemCheckbox},\n    {provide: CdkMenuItem, useExisting: CdkMenuItemSelectable},\n  ],\n})\nexport class CdkMenuItemCheckbox extends CdkMenuItemSelectable {\n  /** Toggle the checked state of the checkbox. */\n  override trigger() {\n    super.trigger();\n\n    if (!this.disabled) {\n      this.checked = !this.checked;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Injectable,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  ConnectedPosition,\n  FlexibleConnectedPositionStrategy,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  STANDARD_DROPDOWN_BELOW_POSITIONS,\n} from '@angular/cdk/overlay';\nimport {Portal, TemplatePortal} from '@angular/cdk/portal';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {merge, partition, Subject} from 'rxjs';\nimport {skip, takeUntil} from 'rxjs/operators';\nimport {MENU_STACK, MenuStack} from './menu-stack';\nimport {isClickInsideMenuOverlay} from './menu-item-trigger';\nimport {MENU_TRIGGER, MenuTrigger} from './menu-trigger';\n\n// In cases where the first menu item in the context menu is a trigger the submenu opens on a\n// hover event. We offset the context menu 2px by default to prevent this from occurring.\nconst CONTEXT_MENU_POSITIONS = STANDARD_DROPDOWN_BELOW_POSITIONS.map(position => {\n  const offsetX = position.overlayX === 'start' ? 2 : -2;\n  const offsetY = position.overlayY === 'top' ? 2 : -2;\n  return {...position, offsetX, offsetY};\n});\n\n/** Tracks the last open context menu trigger across the entire application. */\n@Injectable({providedIn: 'root'})\nexport class ContextMenuTracker {\n  /** The last open context menu trigger. */\n  private static _openContextMenuTrigger?: CdkContextMenuTrigger;\n\n  /**\n   * Close the previous open context menu and set the given one as being open.\n   * @param trigger the trigger for the currently open Context Menu.\n   */\n  update(trigger: CdkContextMenuTrigger) {\n    if (ContextMenuTracker._openContextMenuTrigger !== trigger) {\n      ContextMenuTracker._openContextMenuTrigger?.close();\n      ContextMenuTracker._openContextMenuTrigger = trigger;\n    }\n  }\n}\n\n/** The coordinates of where the context menu should open. */\nexport type ContextMenuCoordinates = {x: number; y: number};\n\n/**\n * A directive which when placed on some element opens a the Menu it is bound to when a user\n * right-clicks within that element. It is aware of nested Context Menus and the lowest level\n * non-disabled context menu will trigger.\n */\n@Directive({\n  selector: '[cdkContextMenuTriggerFor]',\n  exportAs: 'cdkContextMenuTriggerFor',\n  host: {\n    '(contextmenu)': '_openOnContextMenu($event)',\n  },\n  providers: [\n    {provide: MENU_TRIGGER, useExisting: CdkContextMenuTrigger},\n    {provide: MENU_STACK, useClass: MenuStack},\n  ],\n})\nexport class CdkContextMenuTrigger extends MenuTrigger implements OnDestroy {\n  /** Template reference variable to the menu to open on right click. */\n  @Input('cdkContextMenuTriggerFor')\n  private _menuTemplateRef: TemplateRef<unknown>;\n\n  /** A list of preferred menu positions to be used when constructing the `FlexibleConnectedPositionStrategy` for this trigger's menu. */\n  @Input('cdkMenuPosition') menuPosition: ConnectedPosition[];\n\n  /** Emits when the attached menu is requested to open. */\n  @Output('cdkContextMenuOpened') readonly opened: EventEmitter<void> = new EventEmitter();\n\n  /** Emits when the attached menu is requested to close. */\n  @Output('cdkContextMenuClosed') readonly closed: EventEmitter<void> = new EventEmitter();\n\n  /** Whether the context menu should be disabled. */\n  @Input('cdkContextMenuDisabled')\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: BooleanInput) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled = false;\n\n  /** A reference to the overlay which manages the triggered menu. */\n  private _overlayRef: OverlayRef | null = null;\n\n  /** The content of the menu panel opened by this trigger. */\n  private _menuPortal: TemplatePortal;\n\n  /** Emits when the element is destroyed. */\n  private readonly _destroyed = new Subject<void>();\n\n  /** Emits when the outside pointer events listener on the overlay should be stopped. */\n  private readonly _stopOutsideClicksListener = merge(this.closed, this._destroyed);\n\n  constructor(\n    injector: Injector,\n    protected readonly _viewContainerRef: ViewContainerRef,\n    private readonly _overlay: Overlay,\n    private readonly _contextMenuTracker: ContextMenuTracker,\n    @Inject(MENU_STACK) menuStack: MenuStack,\n    @Optional() private readonly _directionality?: Directionality,\n  ) {\n    super(injector, menuStack);\n    this._setMenuStackListener();\n  }\n\n  /**\n   * Open the attached menu at the specified location.\n   * @param coordinates where to open the context menu\n   */\n  open(coordinates: ContextMenuCoordinates) {\n    this._open(coordinates, false);\n  }\n\n  private _open(coordinates: ContextMenuCoordinates, ignoreFirstOutsideAuxClick: boolean) {\n    if (this.disabled) {\n      return;\n    } else if (this.isOpen()) {\n      // since we're moving this menu we need to close any submenus first otherwise they end up\n      // disconnected from this one.\n      this.menuStack.closeSubMenuOf(this.childMenu!);\n\n      (\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy\n      ).setOrigin(coordinates);\n      this._overlayRef!.updatePosition();\n    } else {\n      this.opened.next();\n\n      if (this._overlayRef) {\n        (\n          this._overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy\n        ).setOrigin(coordinates);\n        this._overlayRef.updatePosition();\n      } else {\n        this._overlayRef = this._overlay.create(this._getOverlayConfig(coordinates));\n      }\n\n      this._overlayRef.attach(this._getMenuContent());\n      this._subscribeToOutsideClicks(ignoreFirstOutsideAuxClick);\n    }\n  }\n\n  /** Close the opened menu. */\n  close() {\n    this.menuStack.closeAll();\n  }\n\n  /**\n   * Open the context menu and close any previously open menus.\n   * @param event the mouse event which opens the context menu.\n   */\n  _openOnContextMenu(event: MouseEvent) {\n    if (!this.disabled) {\n      // Prevent the native context menu from opening because we're opening a custom one.\n      event.preventDefault();\n\n      // Stop event propagation to ensure that only the closest enabled context menu opens.\n      // Otherwise, any context menus attached to containing elements would *also* open,\n      // resulting in multiple stacked context menus being displayed.\n      event.stopPropagation();\n\n      this._contextMenuTracker.update(this);\n      this._open({x: event.clientX, y: event.clientY}, true);\n\n      // A context menu can be triggered via a mouse right click or a keyboard shortcut.\n      if (event.button === 2) {\n        this.childMenu?.focusFirstItem('mouse');\n      } else if (event.button === 0) {\n        this.childMenu?.focusFirstItem('keyboard');\n      } else {\n        this.childMenu?.focusFirstItem('program');\n      }\n    }\n  }\n\n  /** Whether the attached menu is open. */\n  isOpen() {\n    return !!this._overlayRef?.hasAttached();\n  }\n\n  /**\n   * Get the configuration object used to create the overlay.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayConfig(coordinates: ContextMenuCoordinates) {\n    return new OverlayConfig({\n      positionStrategy: this._getOverlayPositionStrategy(coordinates),\n      scrollStrategy: this._overlay.scrollStrategies.block(),\n      direction: this._directionality,\n    });\n  }\n\n  /**\n   * Build the position strategy for the overlay which specifies where to place the menu.\n   * @param coordinates the location to place the opened menu\n   */\n  private _getOverlayPositionStrategy(\n    coordinates: ContextMenuCoordinates,\n  ): FlexibleConnectedPositionStrategy {\n    return this._overlay\n      .position()\n      .flexibleConnectedTo(coordinates)\n      .withPositions(this.menuPosition ?? CONTEXT_MENU_POSITIONS);\n  }\n\n  /**\n   * Get the portal to be attached to the overlay which contains the menu. Allows for the menu\n   * content to change dynamically and be reflected in the application.\n   */\n  private _getMenuContent(): Portal<unknown> {\n    const hasMenuContentChanged = this._menuTemplateRef !== this._menuPortal?.templateRef;\n    if (this._menuTemplateRef && (!this._menuPortal || hasMenuContentChanged)) {\n      this._menuPortal = new TemplatePortal(\n        this._menuTemplateRef,\n        this._viewContainerRef,\n        undefined,\n        this.getChildMenuInjector(),\n      );\n    }\n\n    return this._menuPortal;\n  }\n\n  /** Subscribe to the menu stack close events and close this menu when requested. */\n  private _setMenuStackListener() {\n    this.menuStack.closed.pipe(takeUntil(this._destroyed)).subscribe(item => {\n      if (item === this.childMenu && this.isOpen()) {\n        this.closed.next();\n        this._overlayRef!.detach();\n      }\n    });\n  }\n\n  /**\n   * Subscribe to the overlays outside pointer events stream and handle closing out the stack if a\n   * click occurs outside the menus.\n   */\n  private _subscribeToOutsideClicks(ignoreFirstAuxClick: boolean) {\n    if (this._overlayRef) {\n      let outsideClicks = this._overlayRef.outsidePointerEvents();\n      // If the menu was triggered by the `contextmenu` event, skip the first `auxclick` event\n      // because it fires when the mouse is released on the same click that opened the menu.\n      if (ignoreFirstAuxClick) {\n        const [auxClicks, nonAuxClicks] = partition(outsideClicks, ({type}) => type === 'auxclick');\n        outsideClicks = merge(nonAuxClicks, auxClicks.pipe(skip(1)));\n      }\n      outsideClicks.pipe(takeUntil(this._stopOutsideClicksListener)).subscribe(event => {\n        if (!isClickInsideMenuOverlay(event.target as Element)) {\n          this.menuStack.closeAll();\n        }\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyOverlay();\n\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Destroy and unset the overlay reference it if exists. */\n  private _destroyOverlay() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CdkMenu} from './menu';\nimport {CdkMenuBar} from './menu-bar';\nimport {CdkMenuItem} from './menu-item';\nimport {CdkMenuGroup} from './menu-group';\nimport {CdkMenuItemRadio} from './menu-item-radio';\nimport {CdkMenuItemCheckbox} from './menu-item-checkbox';\nimport {CdkMenuItemTrigger} from './menu-item-trigger';\nimport {CdkContextMenuTrigger} from './context-menu';\nimport {CdkTargetMenuAim} from './menu-aim';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkMenuBar,\n  CdkMenu,\n  CdkMenuItem,\n  CdkMenuItemRadio,\n  CdkMenuItemCheckbox,\n  CdkMenuItemTrigger,\n  CdkMenuGroup,\n  CdkContextMenuTrigger,\n  CdkTargetMenuAim,\n];\n@NgModule({\n  imports: [OverlayModule],\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class CdkMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './menu-module';\nexport * from './menu-bar';\nexport * from './menu';\nexport * from './menu-item';\nexport * from './menu-item-checkbox';\nexport * from './menu-item-radio';\nexport * from './menu-item-trigger';\nexport * from './menu-group';\nexport * from './context-menu';\nexport * from './menu-trigger';\n\nexport {MenuStack, MenuStackItem, MENU_STACK} from './menu-stack';\nexport {CDK_MENU} from './menu-interface';\nexport {TargetMenuAim, MenuAim, MENU_AIM, CdkTargetMenuAim} from './menu-aim';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './public-api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i2","i1","i2.CdkMenuItemTrigger","i3.CdkMenuItemTrigger","i3.MenuStack"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AAMG;AAMH;MACa,QAAQ,GAAG,IAAI,cAAc,CAAO,UAAU;;ACb3D;;;;;;AAMG;AAoBH;MACa,UAAU,GAAG,IAAI,cAAc,CAAY,gBAAgB,EAAE;AAE1E;;;;;AAKG;MAEU,SAAS,CAAA;AADtB,IAAA,WAAA,GAAA;;AAGmB,QAAA,IAAS,CAAA,SAAA,GAAoB,EAAE,CAAC;;AAGhC,QAAA,IAAA,CAAA,MAAM,GAAuC,IAAI,OAAO,EAAE,CAAC;;AAG3D,QAAA,IAAA,CAAA,MAAM,GAAmC,IAAI,OAAO,EAAE,CAAC;;AAG/D,QAAA,IAAA,CAAA,MAAM,GAA0C,IAAI,CAAC,MAAM,CAAC;AAErE;;;;AAIG;AACM,QAAA,IAAA,CAAA,OAAO,GAAsC,IAAI,CAAC,MAAM,CAAC;KA8EnE;;AA3EC,IAAA,IAAI,CAAC,IAAmB,EAAA;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC3B;AAED;;;;;;;AAOG;IACH,KAAK,CAAC,QAAuB,EAAE,SAAqB,EAAA;QAClD,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,YAAA,IAAI,aAAwC,CAAC;YAC7C,GAAG;AACD,gBAAA,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AACrC,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aACjC,QAAQ,aAAa,KAAK,QAAQ,EAAE;AAErC,YAAA,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;AAClB,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7B,aAAA;AACF,SAAA;KACF;AAED;;;;;AAKG;AACH,IAAA,cAAc,CAAC,QAAuB,EAAA;QACpC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;AACzC,YAAA,OAAO,GAAG,IAAI,CAAC,IAAI,EAAE,KAAK,QAAQ,CAAC;AACnC,YAAA,OAAO,IAAI,CAAC,IAAI,EAAE,KAAK,QAAQ,EAAE;AAC/B,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,CAAC;AACxC,aAAA;AACF,SAAA;AACD,QAAA,OAAO,OAAO,CAAC;KAChB;AAED;;;;AAIG;AACH,IAAA,QAAQ,CAAC,SAAqB,EAAA;AAC5B,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;AACnB,YAAA,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;gBACtB,MAAM,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC;AAC3C,gBAAA,IAAI,aAAa,EAAE;AACjB,oBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACjC,iBAAA;AACF,aAAA;AAED,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC7B,SAAA;KACF;;IAGD,OAAO,GAAA;AACL,QAAA,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;KAC/B;;IAGD,MAAM,GAAA;AACJ,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;KAC9B;;IAGD,IAAI,GAAA;AACF,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAClD;;6GA/FU,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;iHAAT,SAAS,EAAA,CAAA,CAAA;kGAAT,SAAS,EAAA,UAAA,EAAA,CAAA;kBADrB,UAAU;;;ACnCX;;;;;;AAMG;AAEH;;;AAGG;SACa,+BAA+B,GAAA;AAC7C,IAAA,MAAM,KAAK,CAAC,4DAA4D,CAAC,CAAC;AAC5E,CAAC;AAED;;;AAGG;SACa,yBAAyB,GAAA;AACvC,IAAA,MAAM,KAAK,CAAC,yCAAyC,CAAC,CAAC;AACzD;;ACtBA;;;;;;AAMG;AA0BH;MACa,QAAQ,GAAG,IAAI,cAAc,CAAU,cAAc,EAAE;AAEpE;AACA,MAAM,2BAA2B,GAAG,CAAC,CAAC;AAEtC;AACA,MAAM,UAAU,GAAG,CAAC,CAAC;AAErB;;;AAGG;AACH,MAAM,WAAW,GAAG,GAAG,CAAC;AAUxB;AACA,SAAS,QAAQ,CAAC,CAAQ,EAAE,CAAQ,EAAA;AAClC,IAAA,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC;AAED;AACA,SAAS,aAAa,CAAC,KAAY,EAAE,KAAa,EAAA;IAChD,OAAO,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC;AACnC,CAAC;AAKD;;;;;;;;AAQG;AACH,SAAS,eAAe,CAAC,aAAsB,EAAE,CAAS,EAAE,CAAS,EAAA;IACnE,MAAM,EAAC,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM,EAAC,GAAG,aAAa,CAAC;;;;AAKjD,IAAA,QACE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,MAAM;AAC9C,SAAC,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,IAAI,MAAM,CAAC;AACjD,SAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC;SAChD,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,EACvD;AACJ,CAAC;AACD;;;;;;;;;AASG;MAEU,aAAa,CAAA;AAgBxB,IAAA,WAAA,CAA6B,OAAe,EAAA;AAAf,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;;AAd3B,QAAA,IAAO,CAAA,OAAA,GAAY,EAAE,CAAC;;AAYtB,QAAA,IAAA,CAAA,UAAU,GAAkB,IAAI,OAAO,EAAE,CAAC;KAEX;;IAGhD,UAAU,CAAC,IAAU,EAAE,cAA+D,EAAA;AACpF,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAA,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;AAED;;;;AAIG;AACH,IAAA,MAAM,CAAC,QAAoB,EAAA;;;AAGzB,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,YAAY,EAAE;AAC3C,YAAA,QAAQ,EAAE,CAAC;AACZ,SAAA;QAED,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,QAAA,MAAM,oBAAoB,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;QAC/C,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAE1C,QAAA,IAAI,SAAS,IAAI,CAAC,oBAAoB,EAAE;AACtC,YAAA,IAAI,IAAI,CAAC,kBAAkB,EAAE,EAAE;AAC7B,gBAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC9B,aAAA;AAAM,iBAAA;AACL,gBAAA,QAAQ,EAAE,CAAC;AACZ,aAAA;AACF,SAAA;aAAM,IAAI,CAAC,oBAAoB,EAAE;AAChC,YAAA,QAAQ,EAAE,CAAC;AACZ,SAAA;KACF;AAED;;;;;AAKG;AACK,IAAA,aAAa,CAAC,QAAoB,EAAA;;;;;AAKxC,QAAA,MAAM,SAAS,GAAG,UAAU,CAAC,MAAK;;YAEhC,IAAI,IAAI,CAAC,eAAgB,CAAC,aAAa,IAAI,SAAS,KAAK,IAAI,CAAC,UAAU,EAAE;AACxE,gBAAA,QAAQ,EAAE,CAAC;AACZ,aAAA;AACD,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB,EAAE,WAAW,CAAkB,CAAC;AAEjC,QAAA,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;KAC7B;;IAGO,kBAAkB,GAAA;AACxB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAC/C,IAAI,CAAC,aAAa,EAAE;AAClB,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QAED,IAAI,SAAS,GAAG,CAAC,CAAC;AAClB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;;;AAGxD,QAAA,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;YACjD,MAAM,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AAC5C,YAAA,IAAI,eAAe,CAAC,aAAa,EAAE,KAAK,EAAE,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,EAAE;AAC1E,gBAAA,SAAS,EAAE,CAAC;AACb,aAAA;AACF,SAAA;QACD,OAAO,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;KAChD;;IAGO,iBAAiB,GAAA;;AACvB,QAAA,OAAO,MAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,0CAAE,eAAe,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CACxC,OAAO,EAAE,0CACT,WAAW,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;KACvD;AAED;;;AAGG;IACK,gBAAgB,GAAA;AACtB,QAAA,IAAI,OAAO,SAAS,KAAK,WAAW,IAAI,SAAS,EAAE;AACjD,YAAA,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;AACzB,gBAAA,+BAA+B,EAAE,CAAC;AACnC,aAAA;AACD,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;AACf,gBAAA,yBAAyB,EAAE,CAAC;AAC7B,aAAA;AACF,SAAA;KACF;;IAGO,sBAAsB,GAAA;AAC5B,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;YAClC,SAAS,CAAa,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,WAAW,CAAC;iBACrE,IAAI,CACH,MAAM,CAAC,CAAC,CAAa,EAAE,KAAa,KAAK,KAAK,GAAG,2BAA2B,KAAK,CAAC,CAAC,EACnF,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;AACA,iBAAA,SAAS,CAAC,CAAC,KAAiB,KAAI;AAC/B,gBAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAC,CAAC,CAAC;AACxD,gBAAA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,UAAU,EAAE;AACpC,oBAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACtB,iBAAA;AACH,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACJ;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;;iHA1IU,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;qHAAb,aAAa,EAAA,CAAA,CAAA;kGAAb,aAAa,EAAA,UAAA,EAAA,CAAA;kBADzB,UAAU;;AA8IX;;;AAGG;MAMU,gBAAgB,CAAA;;oHAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;wGAAhB,gBAAgB,EAAA,QAAA,EAAA,oBAAA,EAAA,SAAA,EAFhB,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAC,CAAC,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAE9C,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,kBAAkB;oBAC5B,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAC,CAAC;iBAC1D,CAAA;;;AC1PD;;;;;;AAMG;AAMH;MACa,YAAY,GAAG,IAAI,cAAc,CAAc,kBAAkB,EAAE;MAGnE,WAAW,CAAA;IAKtB,WAAsB,CAAA,QAAkB,EAAgC,SAAoB,EAAA;AAAtE,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AAAgC,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAW;KAAI;IAEtF,oBAAoB,GAAA;AAC5B,QAAA,IAAI,CAAC,kBAAkB;AACrB,YAAA,IAAI,CAAC,kBAAkB;gBACvB,QAAQ,CAAC,MAAM,CAAC;AACd,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,IAAI,EAAC;wBACvC,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAC;AAChD,qBAAA;oBACD,MAAM,EAAE,IAAI,CAAC,QAAQ;AACtB,iBAAA,CAAC,CAAC;QACL,OAAO,IAAI,CAAC,kBAAkB,CAAC;KAChC;AAED,IAAA,iBAAiB,CAAC,KAAW,EAAA;AAC3B,QAAA,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;;AAtBU,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,0CAK4B,UAAU,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;mHALjD,WAAW,EAAA,CAAA,CAAA;kGAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBADvB,UAAU;;;8BAMkC,MAAM;+BAAC,UAAU,CAAA;;;;ACrB9D;;;;;;AAMG;AAoCH;;AAEG;AACG,SAAU,wBAAwB,CAAC,MAAe,EAAA;AACtD,IAAA,OAAO,MAAM,KAAN,IAAA,IAAA,MAAM,uBAAN,MAAM,CAAE,aAAa,EAAE;QAC5B,MAAM,aAAa,GACjB,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;AAC/C,YAAA,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;QAChD,MAAM,aAAa,GACjB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAEzF,IAAI,aAAa,IAAI,aAAa,EAAE;AAClC,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC;AAC/B,KAAA;AACD,IAAA,OAAO,KAAK,CAAC;AACf,CAAC;AAED;;;;;;;;AAQG;AAoBG,MAAO,kBAAmB,SAAQ,WAAW,CAAA;AA0BjD,IAAA,WAAA,CACE,QAAkB,EACD,WAAoC,EAClC,iBAAmC,EACrC,QAAiB,EACjB,OAAe,EACZ,SAAoB,EACO,WAAkB,EAClB,QAAkB,EACpC,eAAgC,EAAA;AAE7D,QAAA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AATV,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAyB;AAClC,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACrC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;AACjB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AAEe,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAO;AAClB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AACpC,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;;AA1B7B,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;;AAGhD,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;;AAG1E,QAAA,IAAW,CAAA,WAAA,GAAsB,IAAI,CAAC;;AAM7B,QAAA,IAAA,CAAA,UAAU,GAAkB,IAAI,OAAO,EAAE,CAAC;;AAG1C,QAAA,IAA0B,CAAA,0BAAA,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAchF,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KAC/B;;IAGD,MAAM,GAAA;AACJ,QAAA,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;AAClB,YAAA,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACxD,SAAA;KACF;;IAGD,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE;AACtB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAEnB,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;YACtF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;YAC3C,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAClC,SAAA;KACF;;IAGD,SAAS,GAAA;AACP,QAAA,IAAI,IAAI,CAAC,UAAU,EAAE,EAAE;AACrB,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AAEnB,YAAA,IAAI,CAAC,WAAY,CAAC,MAAM,EAAE,CAAC;AAC5B,SAAA;QACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;;IAGD,OAAO,GAAA;AACL,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC;KAChC;;IAGD,UAAU,GAAA;AACR,QAAA,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;KAClE;AAED;;;AAGG;IACH,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AAED;;;AAGG;IACK,sBAAsB,GAAA;;AAE5B,QAAA,MAAM,WAAW,GAAG,MAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;YACpB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,QAAQ,EAAE,CAAC;AAClB,SAAC,CAAC,CAAC;AAEL,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;YAClC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC;iBACpD,IAAI,CACH,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAC7D,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;iBACA,SAAS,CAAC,MAAK;gBACd,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AACnC,iBAAA;AAAM,qBAAA;AACL,oBAAA,WAAW,EAAE,CAAC;AACf,iBAAA;AACH,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACJ;AAED;;;;AAIG;AACH,IAAA,gBAAgB,CAAC,KAAoB,EAAA;;AACnC,QAAA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC9B,QAAA,QAAQ,OAAO;AACb,YAAA,KAAK,KAAK,CAAC;AACX,YAAA,KAAK,KAAK;gBACR,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,UAAU,CAAC,CAAC;gBAC3C,MAAM;AAER,YAAA,KAAK,WAAW;AACd,gBAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,0CAAE,KAAK,MAAK,KAAK,EAAE;oBACzF,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAC5C,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,UAAU;AACb,gBAAA,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,eAAe,0CAAE,KAAK,MAAK,KAAK,EAAE;oBACzF,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAC5C,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,QAAQ;AACX,gBAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBAC7B,KAAK,CAAC,cAAc,EAAE,CAAC;oBACvB,IAAI,CAAC,QAAQ,EAAE,CAAC;AAChB,oBAAA,OAAO,KAAK,UAAU;0BAClB,MAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAc,CAAC,UAAU,CAAC;0BAC1C,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,0CAAE,aAAa,CAAC,UAAU,CAAC,CAAC;AAC/C,iBAAA;gBACD,MAAM;AACT,SAAA;KACF;;IAGO,qBAAqB,GAAA;QAC3B,IAAI,IAAI,CAAC,WAAW,EAAE;;;;AAIpB,YAAA,MAAM,eAAe,GACnB,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC;gBAChD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,WAAW,CAAC;AAE7C,YAAA,IAAI,eAAe,EAAE;AACnB,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC3B,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC3B,SAAA;KACF;;IAGO,iBAAiB,GAAA;QACvB,OAAO,IAAI,aAAa,CAAC;AACvB,YAAA,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,EAAE;YACpD,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE;YACtD,SAAS,EAAE,IAAI,CAAC,eAAe;AAChC,SAAA,CAAC,CAAC;KACJ;;IAGO,2BAA2B,GAAA;QACjC,OAAO,IAAI,CAAC,QAAQ;AACjB,aAAA,QAAQ,EAAE;AACV,aAAA,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC;AACrC,aAAA,aAAa,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;KAC/C;;IAGO,oBAAoB,GAAA;;AAC1B,QAAA,QACE,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,IAChB,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,KAAK,YAAY;AACjE,cAAE,iCAAiC;AACnC,cAAE,oCAAoC,CAAC,EACzC;KACH;AAED;;;AAGG;IACK,UAAU,GAAA;;AAChB,QAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,MAAK,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAA,CAAC;AACtF,QAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,qBAAqB,CAAC,EAAE;YACzE,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CACnC,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,iBAAiB,EACtB,SAAS,EACT,IAAI,CAAC,oBAAoB,EAAE,CAC5B,CAAC;AACH,SAAA;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;AAED;;AAEG;IACK,iBAAiB,GAAA;;QACvB,OAAO,CAAA,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAK,UAAU,CAAC;KACrD;AAED;;;AAGG;IACK,qBAAqB,GAAA;AAC3B,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AACrB,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAG;AACtE,gBAAA,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;oBAC3B,IAAI,CAAC,SAAS,EAAE,CAAC;AAClB,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;AAED;;;AAGG;IACK,yBAAyB,GAAA;QAC/B,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW;AACb,iBAAA,oBAAoB,EAAE;AACtB,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;iBAChD,SAAS,CAAC,KAAK,IAAG;AACjB,gBAAA,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,MAAiB,CAAC,EAAE;AACtD,oBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC3B,iBAAA;AACH,aAAC,CAAC,CAAC;AACN,SAAA;KACF;;IAGO,eAAe,GAAA;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AAC3B,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACzB,SAAA;KACF;;AAlRU,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAgCnB,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,UAAU,EACE,EAAA,EAAA,KAAA,EAAA,QAAQ,6BACR,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAlCnB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,kBAAkB,EATlB,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,EAAA,gBAAA,EAAA,CAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,eAAA,EAAA,MAAA,EAAA,eAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,EAAA,oBAAA,EAAA,cAAA,EAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,kBAAkB,EAAC;AACxD,QAAA;AACE,YAAA,OAAO,EAAE,UAAU;AACnB,YAAA,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAChE,UAAU,EAAE,CAAC,eAA2B,KAAK,eAAe,IAAI,IAAI,SAAS,EAAE;AAChF,SAAA;AACF,KAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAEU,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAnB9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,IAAI,EAAE;AACJ,wBAAA,WAAW,EAAE,0BAA0B;AACvC,wBAAA,SAAS,EAAE,UAAU;AACrB,wBAAA,OAAO,EAAE,kBAAkB;AAC3B,wBAAA,eAAe,EAAE,MAAM;AACvB,wBAAA,sBAAsB,EAAE,cAAc;AACvC,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,oBAAoB,EAAC;AACxD,wBAAA;AACE,4BAAA,OAAO,EAAE,UAAU;AACnB,4BAAA,IAAI,EAAE,CAAC,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;4BAChE,UAAU,EAAE,CAAC,eAA2B,KAAK,eAAe,IAAI,IAAI,SAAS,EAAE;AAChF,yBAAA;AACF,qBAAA;iBACF,CAAA;;;8BAiCI,MAAM;+BAAC,UAAU,CAAA;;8BACjB,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;yBAhCX,gBAAgB,EAAA,CAAA;sBADf,KAAK;uBAAC,mBAAmB,CAAA;gBAIA,YAAY,EAAA,CAAA;sBAArC,KAAK;uBAAC,iBAAiB,CAAA;gBAGU,MAAM,EAAA,CAAA;sBAAvC,MAAM;uBAAC,eAAe,CAAA;gBAGW,MAAM,EAAA,CAAA;sBAAvC,MAAM;uBAAC,eAAe,CAAA;;;ACrGzB;;;;;;AAMG;AA0BH;;;;AAIG;MAkBU,WAAW,CAAA;IAgCtB,WACW,CAAA,WAAoC,EAC5B,OAAe,EACiB,UAAsB,EACxB,WAAkB,EAClB,QAAkB,EACpC,IAAqB;;;;IAIb,YAAiC,EAAA;AAT7D,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAyB;AAC5B,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AACiB,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAY;AACxB,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAO;AAClB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AACpC,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAiB;AAIb,QAAA,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAqB;AAjChE,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;AAQ1B;;;AAGG;AACsC,QAAA,IAAA,CAAA,SAAS,GAAuB,IAAI,YAAY,EAAE,CAAC;AAE5F;;;AAGG;AACH,QAAA,IAAS,CAAA,SAAA,GAAW,CAAC,CAAC,CAAC;;AAGN,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;QAchD,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,QAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC5B,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACpB,SAAA;KACF;;AA/CD,IAAA,IACI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAmB,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC/C;;IA4CD,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACxC;;IAGD,cAAc,GAAA;AACZ,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC7B,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;AACrB,SAAA;KACF;AAED;;;AAGG;AACH,IAAA,YAAY,CAAC,KAAkB,EAAA;;QAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;;AAGD,QAAA,IAAI,CAAC,KAAK,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,EAAE,CAAA,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AACpB,SAAA;KACF;;IAGD,iBAAiB,GAAA;AACf,QAAA,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC;KAC1B;AAED;;;AAGG;IACH,OAAO,GAAA;;QACL,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;AACrC,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,EAAE,CAAC;AAC7B,SAAA;KACF;;IAGD,OAAO,GAAA;;QACL,OAAO,CAAC,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAA,CAAC;KACvC;;IAGD,UAAU,GAAA;;QACR,OAAO,CAAC,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,EAAE,CAAA,CAAC;KAC1C;AAED;;;AAGG;IACH,OAAO,GAAA;;AACL,QAAA,OAAO,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;KACrC;;IAGD,cAAc,GAAA;QACZ,OAAO,IAAI,CAAC,YAAY,CAAC;KAC1B;;IAGD,QAAQ,GAAA;;AACN,QAAA,OAAO,IAAI,CAAC,SAAS,KAAI,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAI,EAAE,CAAA,IAAI,EAAE,CAAC;KACnF;AAED;;;;;AAKG;AACH,IAAA,UAAU,CAAC,KAAoB,EAAA;;QAC7B,QAAQ,KAAK,CAAC,OAAO;AACnB,YAAA,KAAK,KAAK,CAAC;AACX,YAAA,KAAK,KAAK;gBACR,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,MAAM;AAER,YAAA,KAAK,WAAW;gBACd,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBAChD,IAAI,CAAA,MAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAK,KAAK,EAAE;wBAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,wBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,IAAI,CAAC,WAAW,EAAA,CAAA,oBAAyB,CAAC;AAClE,qBAAA;AAAM,yBAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;wBAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,kBAAoB,CAAC;AAC/C,qBAAA;AACF,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,UAAU;gBACb,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;oBAChD,IAAI,CAAA,MAAA,IAAI,CAAC,IAAI,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,MAAK,KAAK,EAAE;wBAC9B,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,wBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,IAAI,CAAC,WAAW,EAAA,CAAA,oBAAyB,CAAC;AAClE,qBAAA;AAAM,yBAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE;wBAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;wBACvB,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,kBAAoB,CAAC;AAC/C,qBAAA;AACF,iBAAA;gBACD,MAAM;AACT,SAAA;KACF;AAED;;;AAGG;IACK,gBAAgB,GAAA;AACtB,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC7B,YAAA,MAAM,iBAAiB,GAAG,MACxB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,IAAI,CAAC,WAAY,CAAC,CAAA,EAAA,CAAC,CAAC;AAE7E,YAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAC7B,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC;AACpD,iBAAA,IAAI,CACH,MAAM,CAAC,MAAM,EAAA,IAAA,EAAA,CAAA,CAAA,OAAA,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,0CAAE,OAAO,EAAE,CAAA,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAA,EAAA,CAAC,EAC5D,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B;iBACA,SAAS,CAAC,MAAK;gBACd,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,oBAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AACzC,iBAAA;AAAM,qBAAA;AACL,oBAAA,iBAAiB,EAAE,CAAC;AACrB,iBAAA;aACF,CAAC,CACL,CAAC;AACH,SAAA;KACF;AAED;;;AAGG;IACK,iBAAiB,GAAA;;QACvB,OAAO,CAAA,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,MAAK,UAAU,CAAC;KACrD;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KACxB;;AAtMU,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAmCA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,UAAU,EACV,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,QAAQ,6BACR,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;mGArCnB,WAAW,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,WAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,sBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA,EAAA,MAAA,EAAA,kBAAA,EAAA,UAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,OAAA,EAAA,WAAA,EAAA,SAAA,EAAA,oBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,WAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,EAAA,cAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAjBvB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,IAAI,EAAE;AACJ,wBAAA,YAAY,EAAE,WAAW;AACzB,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,MAAM,EAAE,UAAU;AAClB,wBAAA,OAAO,EAAE,eAAe;AACxB,wBAAA,sBAAsB,EAAE,kBAAkB;AAC1C,wBAAA,QAAQ,EAAE,kBAAkB;AAC5B,wBAAA,YAAY,EAAE,kBAAkB;AAChC,wBAAA,SAAS,EAAE,gBAAgB;AAC3B,wBAAA,cAAc,EAAE,sBAAsB;AACtC,wBAAA,SAAS,EAAE,WAAW;AACtB,wBAAA,WAAW,EAAE,oBAAoB;AAClC,qBAAA;iBACF,CAAA;;;8BAoCI,QAAQ;;8BAAI,MAAM;+BAAC,UAAU,CAAA;;8BAC7B,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;8BAIR,IAAI;;8BAAI,QAAQ;;yBAvCf,QAAQ,EAAA,CAAA;sBADX,KAAK;gBAaG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBAMmC,SAAS,EAAA,CAAA;sBAAjD,MAAM;uBAAC,sBAAsB,CAAA;;;AC3EhC;;;;;;AAMG;AAMH;AACA,IAAI,MAAM,GAAG,CAAC,CAAC;AAEf;;;AAGG;AAEG,MAAgB,qBAAsB,SAAQ,WAAW,CAAA;AAD/D,IAAA,WAAA,GAAA;;;AAGyC,QAAA,IAAA,CAAA,OAAO,GAC5C,IAAI,YAAY,EAAE,CAAC;AAUb,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;;AAGhB,QAAA,IAAA,CAAA,IAAI,GAAW,uBAAuB,MAAM,EAAE,EAAE,CAAC;;AAGjD,QAAA,IAAA,CAAA,EAAE,GAAW,uBAAuB,MAAM,EAAE,EAAE,CAAC;KAQzD;;AArBC,IAAA,IACI,OAAO,GAAA;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IACD,IAAI,OAAO,CAAC,KAAmB,EAAA;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC9C;;IAUQ,OAAO,GAAA;AACd,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzB,SAAA;KACF;;yHA1BmB,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;6GAArB,qBAAqB,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,OAAA,EAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAArB,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAD1C,SAAS;8BAG+B,OAAO,EAAA,CAAA;sBAA7C,MAAM;uBAAC,oBAAoB,CAAA;gBAKxB,OAAO,EAAA,CAAA;sBADV,KAAK;gBAUG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBAGG,EAAE,EAAA,CAAA;sBAAV,KAAK;;;ACvCR;;;;;;AAMG;AAgBH;;;AAGG;MAUU,YAAY,CAAA;AATzB,IAAA,WAAA,GAAA;;AAWqB,QAAA,IAAA,CAAA,MAAM,GAA8B,IAAI,YAAY,EAAE,CAAC;;AAOzD,QAAA,IAAA,CAAA,kBAAkB,GAAuB,IAAI,YAAY,EAAE,CAAC;KA8B9E;IA5BC,kBAAkB,GAAA;QAChB,IAAI,CAAC,+BAA+B,EAAE,CAAC;KACxC;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AAC/B,QAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,CAAC;KACpC;AAED;;;AAGG;IACK,+BAA+B,GAAA;AACrC,QAAA,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC;QAErF,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,eAAiD,KAAI;AAC5F,YAAA,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,CAAC;AAC/B,YAAA,eAAe,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,sBAAsB,CAAC,UAAU,CAAC,CAAC,CAAC;AACjF,SAAC,CAAC,CAAC;KACJ;;AAGO,IAAA,sBAAsB,CAAC,UAAiC,EAAA;AAC9D,QAAA,UAAU,CAAC,OAAO;AACf,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACxC,aAAA,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;KAClD;;gHAtCU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,YAAY,EAFZ,QAAA,EAAA,gBAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,OAAA,EAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,EAAA,SAAA,EAAA,CAAC,EAAC,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,yBAAyB,EAAC,CAAC,2DAOrE,qBAAqB,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAL3B,YAAY,EAAA,UAAA,EAAA,CAAA;kBATxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,IAAI,EAAE;AACJ,wBAAA,MAAM,EAAE,OAAO;AACf,wBAAA,OAAO,EAAE,gBAAgB;AAC1B,qBAAA;oBACD,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,yBAAyB,EAAE,QAAQ,EAAE,yBAAyB,EAAC,CAAC;iBACvF,CAAA;8BAGoB,MAAM,EAAA,CAAA;sBAAxB,MAAM;gBAIU,gBAAgB,EAAA,CAAA;sBADhC,eAAe;gBAAC,IAAA,EAAA,CAAA,qBAAqB,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,CAAA;;;ACxC7D;;;;;;AAMG;AAYH;;;AAGG;MACU,mBAAmB,CAAA;AAgB9B,IAAA,WAAA,CAA6B,MAAoB,EAAA;AAApB,QAAA,IAAM,CAAA,MAAA,GAAN,MAAM,CAAc;;AAdxC,QAAA,IAAA,CAAA,OAAO,GAAkB,IAAI,CAAC,sBAAsB,EAAE,CAAC;;AAGvD,QAAA,IAAA,CAAA,MAAM,GAAkB,IAAI,CAAC,oBAAoB,EAAE,CAAC;;AAS5C,QAAA,IAAA,CAAA,UAAU,GAAkB,IAAI,OAAO,EAAE,CAAC;AAGzD,QAAA,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,KAAK,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC;AAClE,QAAA,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAK;AACzB,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC;AAC1C,YAAA,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;AACjC,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;IACK,sBAAsB,GAAA;AAC5B,QAAA,OAAO,KAAK,CAAC,MACX,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CACtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EACtB,QAAQ,CAAC,CAAC,IAAkB,KAC1B,IAAI,CAAC,GAAG,CAAC,OAAO,IACd,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,YAAY,CAAC,CAAC,IAAI,CAC7D,KAAK,CAAC,OAAO,CAAC,EACd,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAC/B,CACF,CACF,EACD,QAAQ,EAAE,CACX,CACF,CAAC;KACH;AAED;;;AAGG;IACK,oBAAoB,GAAA;AAC1B,QAAA,OAAO,KAAK,CAAC,MACX,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CACtB,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,EACtB,QAAQ,CAAC,CAAC,IAAkB,KAC1B,IAAI,CAAC,GAAG,CAAC,OAAO,IACd,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,IAAI,CAC3D,KAAK,CAAC,OAAO,CAAC,EACd,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAC/B,CACF,CACF,EACD,QAAQ,EAAE,CACX,CACF,CAAC;KACH;;IAGD,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;AACF;;AC7FD;;;;;;AAMG;AA4BG,MAAgB,WACpB,SAAQ,YAAY,CAAA;AAyBpB,IAAA,WAAA,CACW,WAAoC,EACJ,SAAqB,EAC/B,GAAoB,EAAA;AAEnD,QAAA,KAAK,EAAE,CAAC;AAJC,QAAA,IAAW,CAAA,WAAA,GAAX,WAAW,CAAyB;AACJ,QAAA,IAAS,CAAA,SAAA,GAAT,SAAS,CAAY;AAC/B,QAAA,IAAG,CAAA,GAAA,GAAH,GAAG,CAAiB;AAzBrD;;;AAGG;AACM,QAAA,IAAW,CAAA,WAAA,GAA8B,UAAU,CAAC;;AAU1C,QAAA,IAAA,CAAA,SAAS,GAAkB,IAAI,OAAO,EAAE,CAAC;KAc3D;IAEQ,kBAAkB,GAAA;QACzB,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAC3B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,2BAA2B,EAAE,CAAC;KACpC;IAEQ,WAAW,GAAA;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;;IAGD,cAAc,CAAC,cAA2B,SAAS,EAAA;AACjD,QAAA,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE,CAAC;KACtC;;IAGD,aAAa,CAAC,cAA2B,SAAS,EAAA;AAChD,QAAA,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;KACrC;;IAGS,YAAY,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,WAAW,KAAK,YAAY,CAAC;KAC1C;;IAGS,cAAc,GAAA;AACtB,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;KACxB;AAED;;;AAGG;AACO,IAAA,aAAa,CAAC,IAA+B,EAAA;;AACrD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC9B,QAAA,IAAI,IAAI,MAAK,CAAA,EAAA,GAAA,OAAO,aAAP,OAAO,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAP,OAAO,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,EAAE,CAAA,EAAE;YACjD,CAAA,EAAA,GAAA,OAAO,KAAP,IAAA,IAAA,OAAO,KAAP,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,OAAO,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE,CAAC;;;AAGvC,YAAA,IAAI,OAAO,EAAE;AACX,gBAAA,UAAU,CAAC,aAAa,CAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,KAAI,OAAO,CAAC,CAAC;AACzE,aAAA;AACF,SAAA;KACF;;IAGO,cAAc,GAAA;;AACpB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,CAAC,cAAc,EAAE,CAAC;AAE9F,QAAA,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;AACvB,YAAA,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,GAAG,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,KAAI,KAAK,CAAC,CAAC;AACrE,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,CAAC,uBAAuB,EAAE,CAAC;AAC3C,SAAA;KACF;AAED;;;AAGG;IACK,oBAAoB,GAAA;AAC1B,QAAA,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAChE,IAAI,CAAC,KAAK,CAAC,OAAO;AACf,aAAA,IAAI,CACH,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EACrB,QAAQ,CAAC,CAAC,IAA4B,KACpC,IAAI;aACD,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AAC9B,aAAA,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,EAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAC1F,EACD,QAAQ,EAAE,EACV,SAAS,CAAC,CAAC,IAAiB,KAAI;AAC9B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,YAAA,OAAO,IAAI,CAAC,cAAc,EAAG,CAAC,MAAM,CAAC;SACtC,CAAC,EACF,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC1B;AACA,aAAA,SAAS,CAAC,OAAO,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC;KACjD;;IAGO,2BAA2B,GAAA;;AACjC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,CACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC9B,CAAA,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;KAChD;;AA9HmB,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,4CA4BT,UAAU,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA5BZ,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,WAAW,8JAWd,WAAW,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAXR,WAAW,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,IAAI,EAAE;AACJ,wBAAA,yBAAyB,EAAE,aAAa;AACxC,wBAAA,SAAS,EAAE,kBAAkB;AAC9B,qBAAA;iBACF,CAAA;;;8BA6BI,QAAQ;;8BAAI,MAAM;+BAAC,UAAU,CAAA;;8BAC7B,QAAQ;;yBAjBQ,KAAK,EAAA,CAAA;sBADvB,eAAe;gBAAC,IAAA,EAAA,CAAA,WAAW,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,CAAA;;;AC7CnD;;;;;;AAMG;AAmCH;;;;;;AAMG;AAgBG,MAAO,OAAQ,SAAQ,WAAW,CAAA;IAQtC,WACmB,CAAA,OAAe,EAChC,UAAmC,EACH,SAAqB,EACX,cAA4B,EACf,QAAkB,EAC7D,GAAoB,EAAA;;AAEhC,QAAA,KAAK,CAAC,UAAU,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAPjB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AAGU,QAAA,IAAc,CAAA,cAAA,GAAd,cAAc,CAAc;AACf,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;;AAXxD,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;QAejE,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtC,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,iBAAiB,CAAC,IAAI,CAAC,CAAC;KAC9C;IAEQ,kBAAkB,GAAA;;QACzB,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAC3B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,wBAAwB,EAAE,CAAC;AAChC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,cAAe,CAAC,CAAC;KACvD;IAEQ,WAAW,GAAA;;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACvB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;KAChC;;AAGD,IAAA,eAAe,CAAC,KAAoB,EAAA;;AAClC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,QAAQ,KAAK,CAAC,OAAO;AACnB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,WAAW;AACd,gBAAA,IAAI,IAAI,CAAC,YAAY,EAAE,EAAE;oBACvB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,oBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACtC,oBAAA,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7B,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA,KAAK,UAAU;AACb,gBAAA,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE;oBACxB,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,oBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACtC,oBAAA,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC7B,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,MAAM;AACT,gBAAA,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;oBAC1B,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,oBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK,CAAC,IAAI,sBAAwB,CAAC;AACpD,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,GAAG;AACN,gBAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,EAAE,CAAC;gBAC3B,MAAM;AAER,YAAA;AACE,gBAAA,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAA;KACF;AAED;;;AAGG;;;;IAIK,sBAAsB,GAAA;AAC5B,QAAA,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;AAC3B,YAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AACxB,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;AAClF,SAAA;KACF;;IAGO,gBAAgB,GAAA;;;;;AAKtB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,YAAY,OAAO,CAAC,CAAC;KACxF;AAED;;;AAGG;IACK,wBAAwB,GAAA;AAC9B,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAI,CAAC,cAAc,CAAC,OAAO;AACxB,iBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC5B,iBAAA,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;AAC5D,SAAC,CAAC,CAAC;KACJ;;AAGO,IAAA,gBAAgB,CAAC,KAA4B,EAAA;AACnD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAA,QAAQ,KAAK;YACX,KAAA,CAAA;AACE,gBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBACtC,UAAU,CAAC,iBAAiB,EAAE,CAAC;gBAC/B,MAAM;YAER,KAAA,CAAA;AACE,gBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBACtC,UAAU,CAAC,qBAAqB,EAAE,CAAC;gBACnC,MAAM;YAER,KAAA,CAAA;gBACE,IAAI,UAAU,CAAC,UAAU,EAAE;AACzB,oBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACtC,oBAAA,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACjD,iBAAA;gBACD,MAAM;AACT,SAAA;KACF;AAED;;;AAGG;IACH,SAAS,GAAA;AACP,QAAA,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;KACxB;IAEO,4BAA4B,GAAA;;AAClC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC9B,CAAA,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC;KACrD;;AAlJU,OAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,OAAO,EAWI,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,UAAU,EACV,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,YAAY,6BACJ,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAb3B,OAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,OAAO,EALP,QAAA,EAAA,WAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,MAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,yBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,wBAAA,EAAA,uBAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,OAAO,EAAC;AAC7C,QAAA,EAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAC;AAC1C,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,YAAA,EAAA,eAAA,EAAA,SAAA,EAOgB,YAAY,EAAA,WAAA,EAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGALlB,OAAO,EAAA,UAAA,EAAA,CAAA;kBAfnB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,QAAQ,EAAE,SAAS;AACnB,oBAAA,IAAI,EAAE;AACJ,wBAAA,MAAM,EAAE,MAAM;AACd,wBAAA,OAAO,EAAE,UAAU;AACnB,wBAAA,YAAY,EAAE,wBAAwB;AACtC,wBAAA,yBAAyB,EAAE,aAAa;AACxC,wBAAA,WAAW,EAAE,yBAAyB;AACvC,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,SAAS,EAAC;AAC7C,wBAAA,EAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,SAAS,EAAC;AAC1C,qBAAA;iBACF,CAAA;;;8BAYI,QAAQ;;8BAAI,MAAM;+BAAC,UAAU,CAAA;;8BAC7B,QAAQ;;8BAAI,MAAM;+BAAC,YAAY,CAAA;;8BAC/B,IAAI;;8BAAI,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BACnC,QAAQ;;yBAZQ,MAAM,EAAA,CAAA;sBAAxB,MAAM;gBAIU,aAAa,EAAA,CAAA;sBAD7B,eAAe;gBAAC,IAAA,EAAA,CAAA,YAAY,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC,CAAA;;;ACpEpD;;;;;;AAMG;AAsBH;;;;;AAKG;AAgBG,MAAO,UAAW,SAAQ,WAAW,CAAA;IAKzC,WACmB,CAAA,OAAe,EAChC,UAAmC,EACf,SAAoB,EACe,QAAkB,EAC7D,GAAoB,EAAA;AAEhC,QAAA,KAAK,CAAC,UAAU,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AANjB,QAAA,IAAO,CAAA,OAAA,GAAP,OAAO,CAAQ;AAGuB,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAU;AARzD,QAAA,IAAW,CAAA,WAAA,GAA8B,YAAY,CAAC;KAYvE;IAEQ,kBAAkB,GAAA;;QACzB,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAC3B,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,wBAAwB,EAAE,CAAC;AAChC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,QAAQ,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,IAAI,EAAE,IAAI,CAAC,cAAe,CAAC,CAAC;KACvD;IAEQ,WAAW,GAAA;;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,cAAc,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;KAChC;AAED;;;;AAIG;AACH,IAAA,eAAe,CAAC,KAAoB,EAAA;;AAClC,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QACnC,QAAQ,KAAK,CAAC,OAAO;AACnB,YAAA,KAAK,QAAQ,CAAC;AACd,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,UAAU,CAAC;AAChB,YAAA,KAAK,WAAW;AACd,gBAAA,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,KAAK,UAAU,IAAI,KAAK,CAAC,OAAO,KAAK,WAAW,CAAC;;;;AAIvF,gBAAA,IACE,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,gBAAgB;qBACvC,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,gBAAgB,CAAC,EAC3C;oBACA,KAAK,CAAC,cAAc,EAAE,CAAC;oBAEvB,MAAM,UAAU,GAAG,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,EAAE,CAAC;oBACvD,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE,CAAC;AAErD,oBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACtC,oBAAA,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC5B,oBAAA,IAAI,UAAU,EAAE;wBACd,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,EAAE,CAAC;AACrD,qBAAA;AACF,iBAAA;gBACD,MAAM;AAER,YAAA,KAAK,MAAM;gBACT,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE,CAAC;gBACrD,MAAM;AAER,YAAA,KAAK,GAAG;gBACN,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,SAAS,EAAE,CAAC;gBACrD,MAAM;AAER,YAAA;AACE,gBAAA,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAA;KACF;AAED;;;AAGG;IACK,wBAAwB,GAAA;AAC9B,QAAA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,MAAK;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,YAAA,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAG;AAC3E,gBAAA,IAAI,IAAI,CAAC,cAAc,EAAE,EAAE;AACzB,oBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACrC,iBAAA;AACH,aAAC,CAAC,CAAC;AACL,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;AACK,IAAA,eAAe,CAAC,KAA4B,EAAA;;AAClD,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACnC,QAAA,QAAQ,KAAK;YACX,KAAA,CAAA;AACE,gBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBACtC,UAAU,CAAC,iBAAiB,EAAE,CAAC;gBAC/B,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,EAAE,CAAC;gBACpD,MAAM;YAER,KAAA,CAAA;AACE,gBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;gBACtC,UAAU,CAAC,qBAAqB,EAAE,CAAC;gBACnC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,UAAU,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,EAAE,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,QAAQ,EAAE,CAAC;gBACpD,MAAM;YAER,KAAA,CAAA;gBACE,IAAI,UAAU,CAAC,UAAU,EAAE;AACzB,oBAAA,UAAU,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AACtC,oBAAA,UAAU,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AACjD,iBAAA;gBACD,MAAM;AACT,SAAA;KACF;IAEO,4BAA4B,GAAA;;AAClC,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAC9B,CAAA,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;KACpD;;8GAzHU,UAAU,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAQX,UAAU,EAAA,EAAA,EAAA,KAAA,EACU,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAT3B,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,UAAU,EANV,QAAA,EAAA,cAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,SAAA,EAAA,UAAA,EAAA,GAAA,EAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,yBAAA,EAAA,EAAA,cAAA,EAAA,cAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAC;AAChD,QAAA,EAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAC;AAC5C,QAAA,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC;AAC3C,KAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAEU,UAAU,EAAA,UAAA,EAAA,CAAA;kBAftB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,IAAI,EAAE;AACJ,wBAAA,MAAM,EAAE,SAAS;AACjB,wBAAA,OAAO,EAAE,cAAc;AACvB,wBAAA,UAAU,EAAE,GAAG;AACf,wBAAA,WAAW,EAAE,yBAAyB;AACvC,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,YAAY,EAAC;AAChD,wBAAA,EAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,YAAY,EAAC;AAC5C,wBAAA,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC;AAC3C,qBAAA;iBACF,CAAA;;;8BASI,MAAM;+BAAC,UAAU,CAAA;;8BACjB,IAAI;;8BAAI,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BACnC,QAAQ;;;;ACzCb;;;;AAIG;AAgBG,MAAO,gBAAiB,SAAQ,qBAAqB,CAAA;AAIzD,IAAA,WAAA,CACmB,oBAA+C,EAChE,OAAgC,EAChC,MAAc,EACkB,SAAqB,EACvB,UAAiB,EACjB,OAAiB,EACnC,GAAoB;;;;IAIZ,WAAgC,EAAA;AAEpD,QAAA,KAAK,CAAC,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,GAAG,EAAE,WAAW,CAAC,CAAC;AAZxD,QAAA,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAA2B;QAchE,IAAI,CAAC,2BAA2B,EAAE,CAAC;KACpC;;IAGO,2BAA2B,GAAA;AACjC,QAAA,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAC/D,CAAC,EAAU,EAAE,IAAY,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,CACpF,CAAC;KACH;;IAGQ,OAAO,GAAA;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;AAEhB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACtD,SAAA;KACF;IAEQ,WAAW,GAAA;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;QACpB,IAAI,CAAC,yBAAyB,EAAE,CAAC;KAClC;;AAzCU,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAQL,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,yBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAA,UAAU,EACV,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAA,QAAQ,6BACR,QAAQ,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAD,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,EAAA,EAAA,KAAA,EAAAG,kBAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAVnB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,gBAAgB,EALhB,QAAA,EAAA,oBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,eAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,qBAAqB,EAAE,WAAW,EAAE,gBAAgB,EAAC;AAC/D,QAAA,EAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAC;AAC3D,KAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAEU,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAf5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,IAAI,EAAE;AACJ,wBAAA,YAAY,EAAE,WAAW;AACzB,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,MAAM,EAAE,eAAe;AACvB,wBAAA,qBAAqB,EAAE,iBAAiB;AACxC,wBAAA,sBAAsB,EAAE,kBAAkB;AAC3C,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,qBAAqB,EAAE,WAAW,kBAAkB,EAAC;AAC/D,wBAAA,EAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAC;AAC3D,qBAAA;iBACF,CAAA;;;8BASI,QAAQ;;8BAAI,MAAM;+BAAC,UAAU,CAAA;;8BAC7B,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;8BAAI,MAAM;+BAAC,QAAQ,CAAA;;8BAC3B,QAAQ;;8BAIR,IAAI;;8BAAI,QAAQ;;;;ACrDrB;;;;;;AAMG;AAMH;;;AAGG;AAgBG,MAAO,mBAAoB,SAAQ,qBAAqB,CAAA;;IAEnD,OAAO,GAAA;QACd,KAAK,CAAC,OAAO,EAAE,CAAC;AAEhB,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAClB,YAAA,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC;AAC9B,SAAA;KACF;;uHARU,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,mBAAmB,EALnB,QAAA,EAAA,uBAAA,EAAA,IAAA,EAAA,EAAA,UAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,kBAAA,EAAA,EAAA,UAAA,EAAA,EAAA,UAAA,EAAA,WAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,qBAAqB,EAAE,WAAW,EAAE,mBAAmB,EAAC;AAClE,QAAA,EAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAC;AAC3D,KAAA,EAAA,QAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAEU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAf/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,IAAI,EAAE;AACJ,wBAAA,YAAY,EAAE,WAAW;AACzB,wBAAA,MAAM,EAAE,QAAQ;AAChB,wBAAA,MAAM,EAAE,kBAAkB;AAC1B,wBAAA,qBAAqB,EAAE,iBAAiB;AACxC,wBAAA,sBAAsB,EAAE,kBAAkB;AAC3C,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,qBAAqB,EAAE,WAAW,qBAAqB,EAAC;AAClE,wBAAA,EAAC,OAAO,EAAE,WAAW,EAAE,WAAW,EAAE,qBAAqB,EAAC;AAC3D,qBAAA;iBACF,CAAA;;;AC9BD;;;;;;AAMG;AAgCH;AACA;AACA,MAAM,sBAAsB,GAAG,iCAAiC,CAAC,GAAG,CAAC,QAAQ,IAAG;AAC9E,IAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,IAAA,MAAM,OAAO,GAAG,QAAQ,CAAC,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD,IAAA,OAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAW,QAAQ,CAAA,EAAA,EAAE,OAAO,EAAE,OAAO,EAAE,CAAA,CAAA;AACzC,CAAC,CAAC,CAAC;AAEH;MAEa,kBAAkB,CAAA;AAI7B;;;AAGG;AACH,IAAA,MAAM,CAAC,OAA8B,EAAA;;AACnC,QAAA,IAAI,kBAAkB,CAAC,uBAAuB,KAAK,OAAO,EAAE;AAC1D,YAAA,CAAA,EAAA,GAAA,kBAAkB,CAAC,uBAAuB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,EAAE,CAAC;AACpD,YAAA,kBAAkB,CAAC,uBAAuB,GAAG,OAAO,CAAC;AACtD,SAAA;KACF;;sHAbU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cADN,MAAM,EAAA,CAAA,CAAA;kGAClB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAD9B,UAAU;mBAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAA;;AAoBhC;;;;AAIG;AAYG,MAAO,qBAAsB,SAAQ,WAAW,CAAA;IAoCpD,WACE,CAAA,QAAkB,EACC,iBAAmC,EACrC,QAAiB,EACjB,mBAAuC,EACpC,SAAoB,EACX,eAAgC,EAAA;AAE7D,QAAA,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;AANR,QAAA,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAkB;AACrC,QAAA,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAS;AACjB,QAAA,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAoB;AAE3B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;;AAjCtB,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;;AAGhD,QAAA,IAAA,CAAA,MAAM,GAAuB,IAAI,YAAY,EAAE,CAAC;AAUjF,QAAA,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;;AAGlB,QAAA,IAAW,CAAA,WAAA,GAAsB,IAAI,CAAC;;AAM7B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,OAAO,EAAQ,CAAC;;AAGjC,QAAA,IAA0B,CAAA,0BAAA,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QAWhF,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;;AA/BD,IAAA,IACI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACD,IAAI,QAAQ,CAAC,KAAmB,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;KAC/C;AA2BD;;;AAGG;AACH,IAAA,IAAI,CAAC,WAAmC,EAAA;AACtC,QAAA,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;KAChC;IAEO,KAAK,CAAC,WAAmC,EAAE,0BAAmC,EAAA;QACpF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO;AACR,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;;;YAGxB,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,SAAU,CAAC,CAAC;AAG7C,YAAA,IAAI,CAAC,WAAY,CAAC,SAAS,EAAE,CAAC,gBAC/B,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACzB,YAAA,IAAI,CAAC,WAAY,CAAC,cAAc,EAAE,CAAC;AACpC,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YAEnB,IAAI,IAAI,CAAC,WAAW,EAAE;AAElB,gBAAA,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,gBAC9B,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;AACzB,gBAAA,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;AACnC,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC,CAAC;AAC9E,aAAA;YAED,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAChD,YAAA,IAAI,CAAC,yBAAyB,CAAC,0BAA0B,CAAC,CAAC;AAC5D,SAAA;KACF;;IAGD,KAAK,GAAA;AACH,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;AAED;;;AAGG;AACH,IAAA,kBAAkB,CAAC,KAAiB,EAAA;;AAClC,QAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;;YAElB,KAAK,CAAC,cAAc,EAAE,CAAC;;;;YAKvB,KAAK,CAAC,eAAe,EAAE,CAAC;AAExB,YAAA,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACtC,YAAA,IAAI,CAAC,KAAK,CAAC,EAAC,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAC,EAAE,IAAI,CAAC,CAAC;;AAGvD,YAAA,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBACtB,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,OAAO,CAAC,CAAC;AACzC,aAAA;AAAM,iBAAA,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;gBAC7B,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,UAAU,CAAC,CAAC;AAC5C,aAAA;AAAM,iBAAA;gBACL,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,cAAc,CAAC,SAAS,CAAC,CAAC;AAC3C,aAAA;AACF,SAAA;KACF;;IAGD,MAAM,GAAA;;QACJ,OAAO,CAAC,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,EAAE,CAAA,CAAC;KAC1C;AAED;;;AAGG;AACK,IAAA,iBAAiB,CAAC,WAAmC,EAAA;QAC3D,OAAO,IAAI,aAAa,CAAC;AACvB,YAAA,gBAAgB,EAAE,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC;YAC/D,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE;YACtD,SAAS,EAAE,IAAI,CAAC,eAAe;AAChC,SAAA,CAAC,CAAC;KACJ;AAED;;;AAGG;AACK,IAAA,2BAA2B,CACjC,WAAmC,EAAA;;QAEnC,OAAO,IAAI,CAAC,QAAQ;AACjB,aAAA,QAAQ,EAAE;aACV,mBAAmB,CAAC,WAAW,CAAC;aAChC,aAAa,CAAC,MAAA,IAAI,CAAC,YAAY,MAAI,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,EAAA,GAAA,sBAAsB,CAAC,CAAC;KAC/D;AAED;;;AAGG;IACK,eAAe,GAAA;;AACrB,QAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,MAAK,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAA,CAAC;AACtF,QAAA,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,IAAI,CAAC,WAAW,IAAI,qBAAqB,CAAC,EAAE;YACzE,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CACnC,IAAI,CAAC,gBAAgB,EACrB,IAAI,CAAC,iBAAiB,EACtB,SAAS,EACT,IAAI,CAAC,oBAAoB,EAAE,CAC5B,CAAC;AACH,SAAA;QAED,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;;IAGO,qBAAqB,GAAA;AAC3B,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,IAAG;YACtE,IAAI,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AAC5C,gBAAA,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACnB,gBAAA,IAAI,CAAC,WAAY,CAAC,MAAM,EAAE,CAAC;AAC5B,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAED;;;AAGG;AACK,IAAA,yBAAyB,CAAC,mBAA4B,EAAA;QAC5D,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC;;;AAG5D,YAAA,IAAI,mBAAmB,EAAE;gBACvB,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,SAAS,CAAC,aAAa,EAAE,CAAC,EAAC,IAAI,EAAC,KAAK,IAAI,KAAK,UAAU,CAAC,CAAC;AAC5F,gBAAA,aAAa,GAAG,KAAK,CAAC,YAAY,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,aAAA;AACD,YAAA,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,IAAG;AAC/E,gBAAA,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,MAAiB,CAAC,EAAE;AACtD,oBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC3B,iBAAA;AACH,aAAC,CAAC,CAAC;AACJ,SAAA;KACF;IAED,WAAW,GAAA;QACT,IAAI,CAAC,eAAe,EAAE,CAAC;AAEvB,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;;IAGO,eAAe,GAAA;QACrB,IAAI,IAAI,CAAC,WAAW,EAAE;AACpB,YAAA,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AAC3B,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACzB,SAAA;KACF;;yHAlNU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,OAAA,EAAA,EAAA,EAAA,KAAA,EAwCQ,kBAAkB,EAAA,EAAA,EAAA,KAAA,EAChD,UAAU,EAAA,EAAA,EAAA,KAAA,EAAAH,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAzCT,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,qBAAqB,EALrB,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,EAAA,gBAAA,EAAA,CAAA,0BAAA,EAAA,kBAAA,CAAA,EAAA,YAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,wBAAA,EAAA,UAAA,CAAA,EAAA,EAAA,OAAA,EAAA,EAAA,MAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,sBAAA,EAAA,EAAA,IAAA,EAAA,EAAA,SAAA,EAAA,EAAA,aAAA,EAAA,4BAAA,EAAA,EAAA,EAAA,SAAA,EAAA;AACT,QAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,qBAAqB,EAAC;AAC3D,QAAA,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC;AAC3C,KAAA,EAAA,QAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;kGAEU,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAXjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,4BAA4B;AACtC,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,IAAI,EAAE;AACJ,wBAAA,eAAe,EAAE,4BAA4B;AAC9C,qBAAA;AACD,oBAAA,SAAS,EAAE;AACT,wBAAA,EAAC,OAAO,EAAE,YAAY,EAAE,WAAW,uBAAuB,EAAC;AAC3D,wBAAA,EAAC,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC;AAC3C,qBAAA;iBACF,CAAA;;oGAyCyC,kBAAkB,EAAA,EAAA,EAAA,IAAA,EAAAI,SAAA,EAAA,UAAA,EAAA,CAAA;8BACvD,MAAM;+BAAC,UAAU,CAAA;;8BACjB,QAAQ;;yBAvCH,gBAAgB,EAAA,CAAA;sBADvB,KAAK;uBAAC,0BAA0B,CAAA;gBAIP,YAAY,EAAA,CAAA;sBAArC,KAAK;uBAAC,iBAAiB,CAAA;gBAGiB,MAAM,EAAA,CAAA;sBAA9C,MAAM;uBAAC,sBAAsB,CAAA;gBAGW,MAAM,EAAA,CAAA;sBAA9C,MAAM;uBAAC,sBAAsB,CAAA;gBAI1B,QAAQ,EAAA,CAAA;sBADX,KAAK;uBAAC,wBAAwB,CAAA;;;AClGjC;;;;;;AAMG;AAcH,MAAM,qBAAqB,GAAG;IAC5B,UAAU;IACV,OAAO;IACP,WAAW;IACX,gBAAgB;IAChB,mBAAmB;IACnB,kBAAkB;IAClB,YAAY;IACZ,qBAAqB;IACrB,gBAAgB;CACjB,CAAC;MAMW,aAAa,CAAA;;iHAAb,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,iBAfxB,UAAU;QACV,OAAO;QACP,WAAW;QACX,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB;QAClB,YAAY;QACZ,qBAAqB;QACrB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAGN,aAAa,CAAA,EAAA,OAAA,EAAA,CAXvB,UAAU;QACV,OAAO;QACP,WAAW;QACX,gBAAgB;QAChB,mBAAmB;QACnB,kBAAkB;QAClB,YAAY;QACZ,qBAAqB;QACrB,gBAAgB,CAAA,EAAA,CAAA,CAAA;kHAOL,aAAa,EAAA,OAAA,EAAA,CAJf,CAAC,aAAa,CAAC,CAAA,EAAA,CAAA,CAAA;kGAIb,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,aAAa,CAAC;AACxB,oBAAA,OAAO,EAAE,qBAAqB;AAC9B,oBAAA,YAAY,EAAE,qBAAqB;iBACpC,CAAA;;;ACnCD;;;;;;AAMG;;ACNH;;;;;;AAMG;;ACNH;;AAEG;;;;"}